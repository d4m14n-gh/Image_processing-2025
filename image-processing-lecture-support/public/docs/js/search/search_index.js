var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AnimationControllerComponent.html",[0,0.112,1,0.744]],["body/components/AnimationControllerComponent.html",[0,0.189,1,0.997,2,0.788,3,0.24,4,0.187,5,0.6,6,0.6,7,0.6,8,0.213,9,5.306,10,3.364,11,1.697,12,0.726,13,2.282,14,2.282,15,1.66,16,4.914,17,2.619,18,4.302,19,3.731,20,3.132,21,5.376,22,3.132,23,2.03,24,2.282,25,4.302,26,6.309,27,4.914,28,2.282,29,4.914,30,3.134,31,2.03,32,2.479,33,3.826,34,0.6,35,1.666,36,1.535,37,3.132,38,0.855,39,1.132,40,1.563,41,1.44,42,1.329,43,2.233,44,2.479,45,1.699,46,3.199,47,0.855,48,3.132,49,0.855,50,3.132,51,0.305,52,0.46,53,1.86,54,3.826,55,2.38,56,3.826,57,3.826,58,3.826,59,5.122,60,5.428,61,0.558,62,2.511,63,4.914,64,4.302,65,4.302,66,4.302,67,3.132,68,4.302,69,4.302,70,4.302,71,4.302,72,4.302,73,4.302,74,4.302,75,4.302,76,2.619,77,2.233,78,2.479,79,3.826,80,0.968,81,3.132,82,4.649,83,0.622,84,0.032,85,1.174,86,0.941,87,0.764,88,0.929,89,2.029,90,3.428,91,3.134,92,1.641,93,2.029,94,4.109,95,3.598,96,1.27,97,1.289,98,2.029,99,2.46,100,1.661,101,2.029,102,1.179,103,3.132,104,0.432,105,3.132,106,2.029,107,2.281,108,3.132,109,3.132,110,3.826,111,3.598,112,2.029,113,3.428,114,2.083,115,3.132,116,2.511,117,3.132,118,3.132,119,3.132,120,2.788,121,2.619,122,1.828,123,3.132,124,4.302,125,3.132,126,3.132,127,2.282,128,0.89,129,1.218,130,2.029,131,4.79,132,5.29,133,2.029,134,2.029,135,3.132,136,2.03,137,2.619,138,3.132,139,2.029,140,2.282,141,3.132,142,3.132,143,2.029,144,1.661,145,0.997,146,2.282,147,3.132,148,0.268,149,0.402,150,0.298,151,1.391,152,2.029,153,3.132,154,3.134,155,3.132,156,4.302,157,2.029,158,3.132,159,4.302,160,2.029,161,5.29,162,3.132,163,2.029,164,2.029,165,3.132,166,2.029,167,2.029,168,3.598,169,3.132,170,3.132,171,3.132,172,2.619,173,2.029,174,2.03,175,2.029,176,2.619,177,2.029,178,3.132,179,3.132,180,3.132,181,3.132,182,2.03,183,3.132,184,1.088,185,2.03,186,2.619,187,2.029,188,2.029,189,2.03,190,2.619,191,1.575,192,2.029,193,2.029,194,2.03,195,3.132,196,2.029,197,3.132,198,1.004,199,2.03,200,3.132,201,0.797,202,2.029,203,1.478,204,3.132,205,0.396,206,0.829,207,0.764,208,0.6,209,0.705,210,1.315,211,1.697,212,1.184,213,0.829,214,0.24,215,0.05,216,1.184,217,2.029,218,3.132,219,2.029,220,2.029,221,2.233,222,0.6,223,3.826,224,2.029,225,2.029,226,2.029,227,2.029,228,3.132,229,3.132,230,2.029,231,2.029,232,3.132,233,2.029,234,4.302,235,2.029,236,3.826,237,3.132,238,2.029,239,0.667,240,2.029,241,2.029,242,2.029,243,2.029,244,2.029,245,2.029,246,3.132,247,3.132,248,3.132,249,3.132,250,3.132,251,3.132,252,3.132,253,3.132,254,3.132,255,3.132,256,3.132,257,3.132,258,0.554,259,0.927,260,0.814,261,0.6,262,1.273,263,0.6,264,0.6,265,0.511,266,0.6,267,0.47,268,0.432,269,0.453,270,1.132,271,0.511,272,0.6,273,0.511,274,0.47,275,0.511,276,0.855,277,1.273,278,0.47,279,0.6,280,0.511,281,0.6,282,0.47,283,0.6,284,0.432,285,0.47,286,0.432,287,0.511,288,0.47,289,0.6,290,0.511,291,0.554,292,0.6,293,0.511,294,0.511,295,0.47,296,0.432,297,0.361,298,0.47,299,0.554,300,0.6,301,0.47,302,0.554,303,0.47,304,0.554,305,0.554,306,0.554,307,0.6,308,0.015,309,0.015]],["title/components/AppComponent.html",[0,0.112,265,0.809]],["body/components/AppComponent.html",[0,0.188,1,0.877,2,1.228,3,0.448,4,0.349,5,1.121,6,1.121,7,1.121,8,0.398,15,0.953,34,1.121,35,1.798,36,1.657,38,1.333,39,1.599,40,2.207,41,2.034,42,1.876,47,1.333,49,1.333,51,0.302,52,0.717,80,0.556,83,0.567,84,0.032,86,0.614,88,0.793,148,0.501,149,0.567,150,0.556,201,0.932,205,0.738,207,1.425,208,1.121,209,1.315,213,1.547,214,0.448,215,0.093,216,2.849,258,1.034,259,1.445,260,1.149,261,1.121,262,1.689,263,1.121,264,1.121,265,1.436,266,1.121,267,0.877,268,1.149,269,0.728,270,1.599,271,0.953,272,1.121,273,0.953,274,0.877,275,1.359,276,1.333,277,1.689,278,0.877,279,1.121,280,0.953,281,1.121,282,0.877,283,1.121,284,0.806,285,1.251,286,1.149,287,0.953,288,0.877,289,1.121,290,0.953,291,1.034,292,1.121,293,0.953,294,1.359,295,0.877,296,1.149,297,0.962,298,0.877,299,1.034,300,1.121,301,0.877,302,1.475,303,0.877,304,1.034,305,1.68,306,1.034,307,1.121,308,0.023,309,0.023,310,3.166,311,3.163,312,2.616,313,5.401,314,5.401,315,4.517,316,4.881,317,4.881,318,4.08,319,4.302,320,1.034,321,3.786,322,4.881,323,3.786,324,1.121,325,2.849,326,3.163,327,4.881,328,3.556,329,1.425,330,3.786,331,3.786,332,3.166,333,3.786,334,3.166,335,4.881,336,4.157,337,3.786,338,4.881,339,2.588,340,5.706,341,3.163,342,3.697,343,3.786]],["title/components/BinaryBitmapEditorComponent.html",[0,0.112,267,0.744]],["body/components/BinaryBitmapEditorComponent.html",[0,0.188,1,0.551,2,0.89,3,0.282,4,0.219,5,0.704,6,0.704,7,0.704,8,0.25,12,0.977,15,0.599,34,0.704,35,1.706,36,1.572,38,0.965,39,1.248,40,1.723,41,1.587,42,1.465,45,1.873,47,0.965,49,0.965,51,0.19,52,0.685,53,1.599,61,0.63,80,0.816,83,0.623,84,0.032,85,1.084,86,0.901,87,1.967,88,0.896,92,1.046,96,1.427,97,1.399,99,1.907,100,2.474,102,1.967,104,0.897,107,2.868,113,2.29,114,1.712,116,2.063,128,0.767,129,1.127,145,1.253,148,0.617,149,0.49,150,0.519,151,1.57,184,0.827,189,3.024,198,1.496,201,0.889,205,0.464,206,0.972,207,0.896,208,0.704,209,0.827,213,0.972,214,0.282,215,0.058,222,1.381,239,0.752,258,0.65,259,1.046,260,0.897,261,0.704,262,1.381,263,0.704,264,0.704,265,0.599,266,0.704,267,1.21,268,1.208,269,0.791,270,1.248,271,1.175,272,0.704,273,0.599,274,0.551,275,0.599,276,0.965,277,1.381,278,0.551,279,0.704,280,0.599,281,0.704,282,0.551,283,0.704,284,0.506,285,0.551,286,0.506,287,0.599,288,0.551,289,0.704,290,0.599,291,0.65,292,0.704,293,0.599,294,0.599,295,0.551,296,0.506,297,0.424,298,0.551,299,1.151,300,0.704,301,0.551,302,0.65,303,0.551,304,0.65,305,1.151,306,0.65,307,0.704,308,0.017,309,0.017,320,0.65,324,1.046,329,0.896,339,1.874,344,5.137,345,5.137,346,1.542,347,2.956,348,2.724,349,2.956,350,2.956,351,3.535,352,2.042,353,2.732,354,2.235,355,2.575,356,2.575,357,4.217,358,4.217,359,2.904,360,2.042,361,2.235,362,2.235,363,2.604,364,4.369,365,4.369,366,2.956,367,3.903,368,3.903,369,2.691,370,2.38,371,3.903,372,4.667,373,1.907,374,4.209,375,3.535,376,1.712,377,1.57,378,5.409,379,3.535,380,2.956,381,1.874,382,2.956,383,2.956,384,2.956,385,2.38,386,1.712,387,2.956,388,2.956,389,2.956,390,2.38,391,2.063,392,2.956,393,2.956,394,1.712,395,2.38,396,2.063,397,1.732,398,2.575,399,2.063,400,2.175,401,2.724,402,2.956,403,1.712,404,2.956,405,2.29,406,2.38,407,3.4,408,3.4,409,2.29,410,2.29,411,2.29,412,2.38,413,2.956,414,2.956,415,2.38,416,2.29,417,2.26,418,2.135,419,2.691,420,4.647,421,2.956,422,1.465,423,2.063,424,2.474,425,1.873,426,1.99,427,2.29,428,1.99,429,2.575,430,3.535,431,2.29,432,2.38,433,2.575,434,1.99,435,1.712,436,1.444,437,1.712,438,1.99,439,1.907,440,2.063,441,2.38,442,3.535,443,2.38,444,1.262,445,1.153,446,1.046,447,1.262,448,1.153,449,1.153,450,1.542,451,1.262,452,1.262,453,1.057,454,1.262,455,2.732,456,0.972,457,3.526,458,2.38,459,2.38,460,2.38,461,2.643,462,1.389,463,1.389,464,1.734,465,1.734,466,3.072,467,1.262,468,1.99,469,1.99,470,2.956,471,2.956,472,4.217,473,2.956,474,1.734,475,1.734,476,1.734,477,2.38,478,1.99,479,3.4,480,1.874,481,2.29,482,2.063,483,2.063,484,2.956,485,2.956,486,2.956,487,2.575,488,1.874,489,2.575,490,2.575,491,2.575,492,2.956,493,3.4,494,2.956,495,2.956,496,2.956]],["title/classes/Bitmap.html",[215,0.079,269,0.38]],["body/classes/Bitmap.html",[3,0.199,4,0.155,8,0.177,12,1.185,13,3.097,51,0.478,52,0.846,53,0.867,61,0.85,80,0.954,83,0.574,84,0.032,85,1.269,86,0.943,87,1.461,88,0.846,92,1.343,96,1.303,97,1.288,99,0.688,102,1.019,104,1.289,114,1.31,116,1.979,127,1.971,128,0.905,129,0.885,136,2.197,140,1.227,144,2.058,145,1.32,148,0.656,149,0.521,150,0.827,151,2.428,186,3.796,190,3.246,191,1.641,194,2.515,198,1.827,201,0.498,214,0.32,215,0.111,222,1.809,239,1.301,260,0.905,268,0.826,269,0.767,291,1.239,296,0.359,297,0.691,308,0.013,309,0.013,320,0.46,341,3.091,349,2.263,350,2.835,359,2.917,363,2.583,376,1.642,377,2.016,386,1.642,391,0.983,394,0.816,397,2.305,400,2.4,403,1.31,418,1.385,419,1.31,422,0.94,425,1.888,427,1.092,435,2.198,437,2.726,446,1.937,464,3.307,466,2.47,497,0.748,498,1.409,499,3.555,500,2.941,501,1.971,502,2.705,503,1.753,504,4.045,505,1.971,506,2.705,507,2.705,508,4.522,509,4.522,510,2.263,511,3.555,512,5.117,513,3.39,514,3.39,515,3.39,516,4.045,517,2.705,518,2.705,519,2.705,520,2.705,521,2.705,522,1.888,523,1.971,524,3.39,525,4.77,526,3.981,527,2.705,528,3.675,529,5.117,530,2.835,531,2.835,532,2.835,533,4.251,534,3.555,535,1.409,536,2.47,537,2.197,538,3.39,539,1.685,540,2.629,541,1.685,542,1.685,543,3.829,544,4.959,545,2.705,546,1.685,547,5.698,548,3.732,549,2.396,550,3.648,551,2.705,552,1.685,553,3.246,554,2.254,555,2.705,556,1.685,557,3.825,558,3.796,559,3.881,560,2.705,561,1.685,562,3.097,563,2.705,564,2.84,565,1.685,566,1.579,567,4.77,568,1.753,569,3.796,570,1.579,571,3.39,572,2.705,573,1.685,574,1.685,575,1.642,576,1.685,577,3.881,578,1.685,579,2.705,580,2.705,581,1.685,582,4.251,583,1.685,584,1.685,585,1.685,586,1.685,587,2.941,588,3.555,589,3.097,590,1.227,591,2.705,592,2.705,593,1.685,594,0.893,595,1.685,596,1.685,597,1.971,598,2.705,599,2.835,600,2.47,601,1.685,602,1.685,603,4.539,604,2.705,605,1.685,606,1.409,607,1.971,608,2.941,609,1.685,610,2.705,611,1.685,612,1.685,613,0.983,614,1.685,615,1.685,616,1.685,617,1.685,618,1.178,619,0.893,620,1.685,621,1.434,622,1.685,623,3.39,624,1.685,625,1.409,626,2.198,627,3.555,628,1.092,629,1.685,630,1.685,631,2.828,632,1.409,633,1.409,634,1.227,635,1.685,636,1.685,637,3.403,638,1.685,639,1.092,640,1.409,641,1.685,642,1.685,643,2.705,644,0.748,645,1.685,646,3.39,647,1.685,648,1.685,649,1.685,650,1.685,651,1.685,652,1.685,653,2.263,654,1.409,655,1.685,656,1.685,657,1.685,658,1.409,659,2.705,660,1.685,661,1.685,662,1.685,663,2.705,664,1.685,665,1.685,666,1.685,667,1.685,668,1.685,669,1.685,670,1.685,671,1.685,672,1.685,673,1.685,674,2.705,675,1.409,676,1.409,677,2.705,678,1.409,679,3.246,680,1.685,681,1.685,682,1.685,683,1.685,684,1.685,685,1.685,686,1.685,687,1.685]],["title/classes/BitmapRenderer.html",[215,0.079,688,2.341]],["body/classes/BitmapRenderer.html",[3,0.256,4,0.199,8,0.227,12,1.281,51,0.172,52,0.483,53,1.615,61,0.585,80,0.842,83,0.639,84,0.032,85,1.262,86,1.038,88,0.899,96,1.587,97,1.55,100,2.356,102,1.8,104,1.114,128,0.842,129,0.776,148,0.714,149,0.567,150,0.792,182,3.497,184,1.381,191,1.808,198,1.054,201,0.653,214,0.256,215,0.097,222,1.177,239,0.46,260,0.46,269,0.77,308,0.016,309,0.016,324,1.788,348,1.918,359,1.591,360,3.119,363,1.767,376,1.046,386,2.153,394,1.046,397,1.958,400,1.237,403,1.591,422,1.661,433,3.238,435,2.153,437,1.591,439,2.303,440,3.15,446,1.177,487,1.573,488,2.776,497,0.959,500,2.577,505,3.484,528,1.918,530,1.806,543,2.577,548,1.399,549,2.258,550,3.393,554,2.356,575,2.153,589,3.238,590,1.573,600,1.573,607,2.394,608,1.399,618,1.661,619,3.226,621,3.325,626,1.926,633,3.326,634,2.394,644,2.397,654,1.806,688,2.394,689,5.151,690,1.573,691,2.748,692,4.793,693,3.326,694,3.765,695,2.536,696,3.977,697,3.977,698,2.88,699,3.286,700,3.286,701,3.286,702,3.286,703,3.977,704,3.977,705,3.286,706,3.286,707,3.286,708,3.286,709,2.748,710,2.16,711,2.517,712,4.117,713,2.394,714,2.16,715,3.931,716,4.782,717,4.445,718,2.16,719,3.286,720,4.445,721,2.16,722,4.212,723,3.286,724,2.16,725,2.16,726,3.286,727,2.16,728,3.977,729,4.445,730,2.16,731,2.16,732,3.286,733,2.16,734,4.445,735,1.918,736,4.445,737,3.286,738,3.286,739,1.573,740,2.16,741,5.037,742,2.16,743,3.286,744,2.577,745,4.445,746,3.977,747,1.806,748,2.16,749,3.931,750,3.286,751,2.16,752,1.806,753,1.261,754,4.86,755,2.16,756,2.16,757,2.16,758,2.16,759,1.399,760,2.394,761,6.22,762,1.806,763,2.16,764,4.445,765,2.16,766,3.286,767,2.16,768,4.445,769,2.16,770,2.16,771,2.16,772,2.16,773,2.16,774,2.16,775,2.16,776,1.573,777,1.573,778,1.145,779,2.16,780,2.16,781,2.16,782,5.811,783,5.811,784,3.286,785,2.16,786,2.16,787,2.16,788,1.806,789,2.748,790,3.286,791,2.16,792,2.16,793,1.806,794,2.16,795,2.16,796,2.16,797,2.16,798,2.16,799,2.16,800,2.16,801,2.16,802,5.638,803,2.16,804,2.16,805,2.16,806,2.16,807,5.811,808,2.16,809,4.445,810,3.717,811,2.16,812,5.396,813,2.16,814,4.445,815,2.16,816,2.16,817,2.16,818,2.16,819,3.977,820,3.977,821,1.399,822,2.16,823,2.16,824,2.16,825,1.399,826,2.16,827,2.16,828,2.16,829,2.16,830,2.16,831,2.16,832,1.806,833,2.16,834,1.573]],["title/injectables/BitmapStorageService.html",[373,1.313,835,1.556]],["body/injectables/BitmapStorageService.html",[3,0.438,4,0.342,8,0.389,12,1.311,51,0.296,52,0.707,53,1.714,61,0.857,80,0.544,83,0.594,84,0.032,85,0.939,86,0.601,88,0.831,96,1.314,97,1.211,128,0.861,129,0.722,148,0.707,149,0.561,150,0.785,189,4.154,191,1.543,201,0.707,205,0.722,214,0.438,215,0.091,222,1.675,239,1.302,269,0.792,308,0.023,309,0.023,311,2.401,324,1.886,348,3.303,369,2.741,373,1.966,381,2.552,386,2.331,411,3.667,416,3.119,417,3.134,418,2.644,421,4.025,422,1.287,425,1.646,445,1.794,453,2.605,548,2.401,554,2.552,575,2.331,618,1.857,753,2.809,835,2.331,836,2.401,837,4.905,838,3.098,839,4.813,840,4.025,841,3.506,842,4.02,843,5.346,844,3.667,845,4.813,846,3.705,847,5.027,848,4.813,849,3.705,850,4.813,851,4.123,852,4.025,853,4.813,854,4.813,855,3.705,856,3.705,857,2.331,858,4.813,859,3.506,860,2.699,861,3.705,862,3.705,863,3.705,864,4.025,865,3.705,866,3.098,867,4.733,868,3.098,869,4.471,870,3.705,871,3.705,872,4.813,873,3.098,874,3.705,875,3.098,876,3.098]],["title/components/ConvolutionalFilterAnimationComponent.html",[0,0.112,274,0.744]],["body/components/ConvolutionalFilterAnimationComponent.html",[0,0.184,1,0.951,2,0.737,3,0.22,4,0.499,5,0.55,6,0.55,7,0.55,8,0.195,10,0.986,12,1.034,14,1.355,15,1.449,19,2.99,23,1.896,24,2.132,30,2.132,34,0.55,35,1.642,36,1.514,38,0.799,39,1.071,40,1.478,41,1.362,42,1.257,43,2.112,45,1.607,46,3.026,47,0.799,49,0.799,51,0.378,52,0.43,53,1.694,55,1.752,61,0.521,62,2.766,80,0.889,83,0.642,84,0.032,85,1.094,86,0.961,87,2.037,88,0.914,92,0.55,96,1.477,97,1.479,99,1.823,100,2.513,102,1.68,104,0.873,107,1.918,121,2.447,128,0.776,129,1.031,136,1.205,144,0.986,145,1.384,148,0.543,149,0.498,150,0.603,151,1.3,154,2.132,184,0.646,191,1.16,198,1.734,199,3.574,201,0.898,205,0.363,206,0.76,207,0.7,208,0.55,209,0.646,211,1.555,212,1.085,213,0.76,214,0.22,215,0.046,221,1.085,222,0.866,258,0.508,259,0.866,260,0.77,261,0.55,262,1.215,263,0.55,264,0.55,265,0.468,266,0.55,267,0.431,268,0.396,269,0.767,270,1.071,271,1.033,272,0.55,273,0.468,274,0.951,275,1.566,276,1.811,277,1.215,278,0.431,279,0.55,280,0.468,281,0.55,282,0.431,283,0.55,284,0.396,285,0.431,286,0.396,287,0.737,288,1.455,289,0.55,290,0.737,291,0.799,292,0.55,293,0.468,294,0.468,295,0.431,296,0.396,297,0.331,298,0.431,299,0.508,300,0.55,301,0.431,302,0.508,303,0.431,304,0.508,305,0.508,306,0.508,307,0.55,308,0.014,309,0.014,312,1.752,320,0.988,324,1.071,325,2.998,326,1.896,329,0.7,348,2.395,352,1.752,354,1.918,360,1.752,361,1.918,362,1.918,363,0.826,369,1.987,373,1.677,377,1.3,381,2.176,394,1.417,396,1.085,397,1.257,399,1.085,400,2.291,401,1.085,403,1.752,405,1.205,417,1.987,419,1.987,422,2.022,423,2.766,424,2.513,425,2.203,429,2.636,431,1.896,435,1.987,436,1.478,437,2.488,439,1.677,440,1.708,444,0.986,445,0.901,446,0.55,447,0.986,448,0.901,449,0.901,451,0.986,452,0.986,453,0.826,454,0.986,455,1.205,456,0.76,461,2.176,462,1.085,463,1.085,467,1.918,480,2.513,482,2.395,483,2.395,488,2.176,501,2.132,503,1.205,505,2.132,522,1.607,528,1.085,540,2.176,564,2.62,566,1.708,568,1.205,597,1.355,606,2.447,618,1.55,626,1.417,634,1.355,644,2.527,692,2.447,695,1.752,709,2.447,711,1.196,712,1.896,760,2.132,762,2.447,844,3.071,851,2.132,857,1.417,877,5.221,878,5.221,879,1.085,880,2.447,881,1.896,882,2.926,883,3.618,884,1.896,885,1.896,886,2.345,887,2.345,888,3.618,889,2.345,890,3.618,891,3.618,892,3.026,893,3.618,894,3.618,895,2.926,896,3.618,897,3.618,898,3.618,899,1.896,900,4.104,901,2.176,902,2.132,903,1.859,904,4.104,905,2.659,906,2.926,907,2.926,908,2.926,909,2.926,910,2.926,911,1.918,912,4.147,913,2.132,914,2.926,915,1.859,916,2.447,917,2.447,918,1.859,919,3.329,920,1.859,921,1.859,922,1.555,923,4.739,924,2.345,925,1.859,926,1.859,927,1.859,928,1.555,929,1.859,930,1.355,931,1.859,932,1.859,933,1.859,934,3.618,935,3.618,936,1.859,937,1.355,938,1.859,939,3.618,940,3.618,941,1.205,942,2.112,943,1.859,944,1.859,945,1.205,946,1.555,947,1.859,948,2.926,949,3.453,950,1.859,951,2.447,952,2.926,953,1.205,954,1.859,955,1.555,956,2.99,957,1.555,958,3.432,959,1.555,960,1.555,961,4.739,962,1.555,963,2.926,964,1.555,965,2.926,966,2.926,967,2.926,968,1.555,969,1.555,970,1.555,971,1.859,972,2.447,973,1.859,974,2.447,975,2.926,976,1.859,977,1.859,978,2.926,979,1.859,980,1.555,981,1.859,982,2.926,983,1.205,984,1.555,985,1.859,986,1.355,987,1.859,988,1.355,989,1.205,990,1.205,991,1.085,992,1.355,993,1.859,994,1.555,995,1.205,996,1.205,997,1.555,998,1.859,999,1.708,1000,1.555,1001,1.859,1002,1.859,1003,1.859,1004,1.859,1005,1.859,1006,1.859,1007,1.555,1008,2.926,1009,2.926,1010,2.926,1011,1.859,1012,2.345,1013,2.345,1014,3.618,1015,1.859,1016,1.859,1017,1.085,1018,1.555,1019,1.859,1020,1.859,1021,1.859,1022,1.555,1023,1.859,1024,1.859,1025,2.447,1026,2.132,1027,2.447,1028,2.132,1029,4.104,1030,4.104,1031,4.104,1032,2.132,1033,2.132,1034,2.99,1035,2.926,1036,2.447]],["title/classes/DragArea.html",[215,0.079,587,2.082]],["body/classes/DragArea.html",[3,0.431,4,0.336,8,0.383,12,1.103,51,0.291,52,0.699,61,0.848,80,0.857,83,0.628,84,0.032,85,0.929,86,0.946,88,0.918,92,1.409,96,1.634,97,1.199,104,1.316,128,0.826,145,1.303,148,0.482,149,0.383,150,0.535,172,3.983,184,1.654,191,1.919,194,3.086,201,0.535,214,0.431,215,0.13,222,1.079,239,0.776,308,0.023,309,0.023,386,2.306,397,2.079,401,2.78,419,2.306,446,1.937,497,1.619,504,3.469,516,4.251,540,2.982,543,3.086,549,1.946,554,2.525,562,4.097,575,2.306,587,3.086,588,5.005,589,4.659,600,2.656,607,2.656,613,2.128,618,2.172,627,4.88,631,4.504,644,2.115,653,5.276,675,4.703,753,2.78,821,3.086,825,3.086,832,3.983,857,2.306,930,4.36,1037,5.171,1038,3.049,1039,4.762,1040,3.983,1041,3.644,1042,3.469,1043,5.835,1044,5.304,1045,5.304,1046,5.304,1047,5.624,1048,3.469,1049,3.645,1050,3.645,1051,5.624,1052,3.983,1053,4.762,1054,4.762,1055,3.645,1056,4.762,1057,3.645,1058,3.645,1059,4.762,1060,3.645,1061,4.762,1062,3.645,1063,5.624,1064,4.762,1065,5.624,1066,4.762,1067,4.762,1068,5.304,1069,4.762,1070,5.624,1071,4.762,1072,4.762]],["title/components/HelpComponent.html",[0,0.112,278,0.744]],["body/components/HelpComponent.html",[0,0.201,1,1.018,2,1.349,3,0.52,4,0.405,5,1.301,6,1.301,7,1.301,8,0.461,15,1.106,34,1.301,35,1.821,36,1.678,38,1.463,39,1.711,47,1.463,49,1.463,84,0.032,149,0.563,201,0.787,205,0.857,208,1.301,214,0.52,215,0.108,258,1.2,259,1.586,260,1.231,261,1.301,262,1.782,263,1.301,264,1.301,265,1.106,266,1.301,267,1.018,268,0.935,269,0.684,270,1.711,271,1.106,272,1.301,273,1.106,274,1.018,275,1.106,276,1.463,277,1.782,278,1.395,279,1.301,280,1.106,281,1.301,282,1.018,283,1.301,284,0.935,285,1.018,286,0.935,287,1.106,288,1.018,289,1.301,290,1.106,291,1.2,292,1.301,293,1.106,294,1.106,295,1.018,296,0.935,297,0.783,298,1.018,299,1.2,300,1.301,301,1.018,302,1.2,303,1.018,304,1.2,305,1.2,306,1.2,307,1.301,308,0.025,309,0.025,336,3.904,1073,3.675,1074,5.359,1075,5.359]],["title/injectables/HistoryService.html",[835,1.556,1076,2.341]],["body/injectables/HistoryService.html",[3,0.457,4,0.356,8,0.406,12,1.146,51,0.309,52,0.726,53,2.026,61,0.881,80,0.801,83,0.604,84,0.032,85,1.121,86,0.884,88,0.908,90,3.204,95,4.136,128,0.893,129,1.121,148,0.511,149,0.406,150,0.567,201,0.567,205,0.753,214,0.457,215,0.095,222,1.144,239,1.052,308,0.023,309,0.023,311,2.504,324,1.898,381,2.622,391,2.886,410,4.333,417,2.784,504,4.188,618,1.342,628,3.204,835,2.395,836,2.504,842,3.725,857,2.395,859,3.602,860,2.815,913,3.602,924,3.725,937,4.188,1076,3.602,1077,3.232,1078,3.725,1079,5.454,1080,3.973,1081,4.945,1082,5.749,1083,5.749,1084,5.749,1085,4.945,1086,3.864,1087,5.169,1088,4.945,1089,4.945,1090,4.945,1091,2.886,1092,4.136,1093,3.864,1094,3.602,1095,4.945,1096,3.864,1097,3.864,1098,4.945,1099,4.945,1100,4.945,1101,4.945,1102,3.864,1103,4.136,1104,4.136,1105,4.945,1106,3.864,1107,4.945,1108,4.945,1109,3.864,1110,3.864,1111,5.749,1112,3.864,1113,3.864,1114,3.864,1115,3.864,1116,3.864,1117,3.864,1118,3.232,1119,3.864,1120,3.864,1121,3.232,1122,3.864,1123,3.864]],["title/components/HomeComponent.html",[0,0.112,282,0.744]],["body/components/HomeComponent.html",[0,0.155,1,0.604,2,0.951,3,0.309,4,0.24,5,0.772,6,0.772,7,0.772,8,0.274,14,3.931,15,0.656,23,2.449,34,0.772,35,1.726,36,1.591,38,1.032,39,1.316,42,1.544,47,1.032,49,1.032,51,0.455,77,2.206,80,0.867,84,0.032,87,1.835,91,4.403,92,1.597,99,1.992,104,1.148,122,2.845,128,0.792,131,3.16,144,2.861,149,0.397,194,2.449,198,1.212,201,0.792,205,0.508,208,0.772,209,0.905,214,0.309,215,0.064,258,0.712,259,1.118,260,1.237,261,0.772,262,1.443,263,0.772,264,0.772,265,0.656,266,0.772,267,0.604,268,0.946,269,0.741,270,1.316,271,0.656,272,0.772,273,0.656,274,0.604,275,0.656,276,1.032,277,1.443,278,0.604,279,0.772,280,0.656,281,0.772,282,1.129,283,0.772,284,0.555,285,0.604,286,0.555,287,0.656,288,0.604,289,0.772,290,0.656,291,0.712,292,0.772,293,0.656,294,0.656,295,0.604,296,0.555,297,0.464,298,0.604,299,0.712,300,0.772,301,0.604,302,0.712,303,0.604,304,1.413,305,1.666,306,0.712,307,0.772,308,0.018,309,0.018,312,2.153,315,3.718,325,2.206,328,2.753,329,0.981,332,2.18,339,2.003,353,2.88,359,2.858,363,2.533,380,3.16,397,2.05,400,2.42,419,2.614,435,2.361,439,1.544,450,1.689,500,2.449,511,3.16,516,4.479,531,3.16,536,3.551,537,2.449,549,2.329,550,3.695,570,2.206,599,4.513,619,3.023,621,3.388,626,1.83,628,2.449,632,3.16,637,3.695,639,3.159,658,4.768,711,1.544,722,4.077,752,3.16,753,2.206,759,2.449,821,3.159,825,2.449,841,2.753,911,2.003,942,3.445,945,3.497,956,3.931,1048,2.753,1052,5.403,1078,3.497,1087,5.054,1104,4.077,1124,2.18,1125,3.779,1126,3.779,1127,5.396,1128,3.779,1129,5.396,1130,3.779,1131,3.779,1132,4.875,1133,3.779,1134,3.779,1135,4.513,1136,3.16,1137,3.16,1138,4.513,1139,3.16,1140,3.16,1141,3.16,1142,3.779,1143,3.779,1144,3.779,1145,3.16,1146,3.779,1147,3.779,1148,3.779,1149,3.16,1150,3.779,1151,3.16,1152,3.779,1153,3.779,1154,3.779,1155,3.779,1156,3.779,1157,3.497,1158,5.702,1159,3.779,1160,4.077,1161,3.779,1162,3.931,1163,3.779,1164,3.16,1165,3.779,1166,3.16,1167,3.779,1168,3.779,1169,5.702,1170,3.779,1171,3.16,1172,3.779,1173,3.779,1174,3.779,1175,3.779,1176,3.779,1177,3.779,1178,3.779,1179,4.875,1180,4.077,1181,3.779,1182,5.396,1183,4.875,1184,4.875,1185,3.779,1186,3.779,1187,3.16,1188,3.16,1189,2.753,1190,4.077,1191,4.077,1192,4.875,1193,4.875,1194,4.875,1195,4.875,1196,4.875,1197,3.779,1198,2.753]],["title/components/HoughTransformAnimationComponent.html",[0,0.112,284,0.684]],["body/components/HoughTransformAnimationComponent.html",[0,0.132,1,0.99,2,0.781,3,0.237,4,0.394,5,0.593,6,0.593,7,0.593,8,0.21,10,1.063,15,1.164,28,1.46,31,2.011,32,1.299,34,0.593,35,1.663,36,1.533,38,0.847,39,1.124,40,1.551,41,1.429,42,1.319,43,2.216,44,2.46,45,1.686,47,0.847,49,0.847,51,0.303,52,0.456,53,1.217,55,1.839,61,0.553,62,2.495,77,2.216,78,2.46,80,0.859,83,0.655,84,0.032,85,1.236,86,0.949,87,1.92,88,0.916,92,1.265,96,1.335,97,1.283,102,1.168,104,1.269,107,1.063,120,1.299,128,0.794,129,0.953,145,1.303,148,0.612,149,0.535,150,0.749,182,2.011,184,1.319,185,2.77,191,1.734,201,0.899,205,0.391,206,0.819,207,0.755,208,0.593,209,0.696,210,1.299,212,1.17,213,0.819,214,0.237,215,0.049,221,1.17,239,0.91,258,1.167,259,0.918,260,0.808,261,0.593,262,1.265,263,0.593,264,0.593,265,0.504,266,0.593,267,0.464,268,0.427,269,0.725,270,1.124,271,1.076,272,0.593,273,0.504,274,0.464,275,0.504,276,0.847,277,1.265,278,0.464,279,0.593,280,0.504,281,0.593,282,0.464,283,0.593,284,0.91,285,1.253,286,1.405,287,0.504,288,0.464,289,0.593,290,0.504,291,0.547,292,0.593,293,0.504,294,0.504,295,0.464,296,0.427,297,0.357,298,0.464,299,0.547,300,0.593,301,0.464,302,0.547,303,0.464,304,0.547,305,0.547,306,0.547,307,0.593,308,0.015,309,0.015,312,1.839,319,3.114,320,0.547,324,1.265,329,0.755,352,1.839,354,2.013,359,2.239,360,1.839,361,2.013,362,2.013,363,2.054,373,1.746,394,1.503,397,0.696,399,1.811,400,1.168,418,0.819,422,1.606,423,2.495,424,2.266,425,2.054,436,1.998,439,1.551,444,1.063,445,0.971,446,1.368,447,1.063,448,0.971,449,0.971,451,1.063,452,1.063,453,0.89,454,1.063,456,0.819,461,1.645,462,1.17,463,1.811,465,2.766,467,2.451,480,2.592,481,2.77,482,2.495,483,2.495,488,1.645,522,1.686,557,2.26,564,0.971,594,1.645,613,1.17,618,2.102,619,2.703,621,2.451,626,2.07,694,1.299,695,2.368,698,2.46,711,1.746,715,2.766,735,2.854,739,2.26,744,1.299,749,2.26,778,1.063,879,1.17,884,2.011,885,2.011,886,2.46,887,2.46,889,2.46,899,2.011,901,2.266,902,2.26,905,2.011,911,1.645,919,2.46,941,1.299,942,1.811,949,3.114,953,2.011,959,1.676,960,1.676,969,1.676,983,1.299,991,1.17,996,1.299,999,2.216,1012,2.011,1013,2.011,1017,1.17,1032,3.114,1033,3.114,1034,3.114,1041,1.299,1091,2.698,1135,2.595,1199,4.56,1200,4.56,1201,2.766,1202,3.175,1203,2.766,1204,4.089,1205,3.175,1206,4.089,1207,3.575,1208,3.575,1209,3.103,1210,3.114,1211,1.676,1212,2.595,1213,2.004,1214,2.004,1215,2.004,1216,2.595,1217,4.089,1218,3.175,1219,2.004,1220,2.004,1221,2.004,1222,2.004,1223,2.004,1224,2.595,1225,2.004,1226,1.676,1227,2.004,1228,1.676,1229,2.004,1230,2.26,1231,2.004,1232,1.676,1233,2.451,1234,2.004,1235,2.004,1236,1.676,1237,1.676,1238,1.299,1239,1.676,1240,2.595,1241,2.595,1242,2.595,1243,3.175,1244,1.46,1245,1.676,1246,1.676,1247,1.676,1248,1.46,1249,1.676,1250,1.676,1251,1.676,1252,1.676,1253,1.676,1254,1.676,1255,1.676,1256,1.676,1257,1.299,1258,1.676,1259,1.676,1260,1.676,1261,1.46,1262,2.595,1263,1.676,1264,3.175,1265,2.595,1266,2.595,1267,1.676,1268,1.676,1269,2.595,1270,1.676,1271,1.676,1272,1.676,1273,1.676,1274,2.595,1275,1.676,1276,1.676,1277,1.676,1278,1.676,1279,1.676,1280,2.595,1281,1.676,1282,1.676,1283,1.676,1284,1.676,1285,1.676,1286,1.676,1287,2.595,1288,1.676,1289,1.676,1290,1.676,1291,1.676,1292,1.676,1293,1.676,1294,1.676,1295,1.676,1296,1.46,1297,1.676,1298,1.46,1299,1.46,1300,1.299,1301,1.46,1302,1.676,1303,1.46,1304,1.676,1305,1.676,1306,1.676,1307,2.595,1308,1.676,1309,2.26,1310,1.676,1311,2.595,1312,1.676,1313,1.676,1314,1.676,1315,1.676,1316,1.676,1317,1.676,1318,1.676,1319,1.676,1320,1.676,1321,1.676,1322,1.676,1323,1.676,1324,1.676,1325,1.676,1326,1.676,1327,1.676,1328,1.676,1329,1.676,1330,1.676,1331,1.676,1332,1.676,1333,1.676,1334,1.676,1335,1.676,1336,1.676,1337,1.676,1338,1.676,1339,1.676,1340,1.676,1341,1.676,1342,1.676,1343,2.595,1344,2.595,1345,2.595,1346,1.676,1347,1.676,1348,3.575,1349,3.575,1350,4.274,1351,2.004,1352,2.004,1353,3.103,1354,3.103,1355,3.103,1356,2.26,1357,2.004,1358,2.004]],["title/classes/Kernel.html",[215,0.079,288,0.744]],["body/classes/Kernel.html",[3,0.415,4,0.323,8,0.368,51,0.28,52,0.682,53,1.99,61,0.827,80,0.887,83,0.644,84,0.032,85,1.271,86,0.934,88,0.944,92,1.639,102,2.274,104,1.107,128,0.887,129,1.124,148,0.762,149,0.605,150,0.846,151,1.558,184,1.218,198,1.668,201,0.813,214,0.415,215,0.086,239,1.285,269,0.701,288,1.495,308,0.022,309,0.022,320,0.957,324,1.752,369,2.248,397,1.808,446,1.705,497,1.558,522,2.062,523,3.382,534,2.932,535,2.932,548,2.272,549,1.433,564,2.925,570,2.709,590,2.554,594,2.461,597,3.382,618,2.098,778,1.859,844,3.008,864,3.882,866,2.932,867,4.632,868,2.932,869,2.932,873,2.932,875,2.932,876,2.932,989,3.589,990,3.589,1078,2.272,1080,3.382,1359,2.932,1360,5.204,1361,5.204,1362,5.204,1363,4.632,1364,5.539,1365,4.352,1366,4.642,1367,4.642,1368,3.506,1369,3.506,1370,2.461,1371,3.506,1372,4.642,1373,3.791,1374,5.204,1375,3.506,1376,3.506,1377,4.642,1378,3.506,1379,4.642,1380,3.506,1381,3.506,1382,3.506,1383,2.932,1384,3.506,1385,3.506,1386,3.506,1387,3.506,1388,3.506,1389,3.506,1390,2.554,1391,2.554,1392,4.642,1393,5.204,1394,3.506,1395,5.539,1396,3.506,1397,3.506,1398,2.932,1399,4.642,1400,3.506,1401,3.506,1402,3.506,1403,3.506,1404,3.506,1405,3.506,1406,3.506,1407,3.506,1408,3.382,1409,3.506,1410,3.506,1411,3.506,1412,3.506,1413,4.642,1414,3.506,1415,3.506,1416,3.506,1417,3.506,1418,3.506,1419,2.932,1420,3.506,1421,3.506]],["title/components/KernelDialogComponent.html",[0,0.112,287,0.809]],["body/components/KernelDialogComponent.html",[0,0.18,1,0.8,2,1.157,3,0.409,4,0.318,5,1.022,6,1.022,7,1.022,8,0.363,15,0.869,34,1.022,35,1.782,36,1.643,38,1.255,39,1.529,40,2.11,41,1.944,42,1.794,44,3.346,45,2.294,47,1.255,49,1.255,51,0.458,52,0.675,61,0.819,80,0.758,83,0.578,84,0.032,85,1.074,88,0.884,102,1.944,128,0.758,129,1.007,145,0.8,148,0.608,149,0.578,150,0.675,151,1.534,198,1.473,201,0.925,205,0.673,206,1.411,207,1.73,208,1.022,209,1.199,210,2.238,213,1.411,214,0.409,215,0.085,216,3.014,239,0.735,258,0.943,259,1.36,260,1.099,261,1.022,262,1.629,263,1.022,264,1.022,265,0.869,266,1.022,267,0.8,268,0.735,269,0.611,270,1.529,271,0.869,272,1.022,273,0.869,274,0.8,275,0.869,276,1.255,277,1.629,278,0.8,279,1.022,280,0.869,281,1.022,282,0.8,283,1.022,284,0.735,285,0.8,286,0.735,287,1.386,288,1.53,289,1.022,290,0.869,291,0.943,292,1.022,293,0.869,294,0.869,295,0.8,296,0.735,297,0.615,298,0.8,299,0.943,300,1.022,301,0.8,302,0.943,303,0.8,304,0.943,305,0.943,306,0.943,307,1.022,308,0.022,309,0.022,320,0.943,352,2.501,369,2.225,398,3.348,448,1.672,449,1.672,456,1.411,493,4.011,523,3.348,549,2.249,911,3.125,912,3.843,984,2.888,986,4.452,988,2.516,1000,3.843,1007,3.843,1022,2.888,1025,3.843,1365,3.843,1383,2.888,1419,3.843,1422,5.111,1423,2.888,1424,5.164,1425,5.164,1426,4.595,1427,4.595,1428,5.506,1429,5.506,1430,3.453,1431,5.506,1432,3.453,1433,3.453,1434,3.453,1435,2.888,1436,4.595,1437,3.453,1438,3.453,1439,3.453,1440,3.453,1441,3.453,1442,3.453,1443,3.453,1444,3.453,1445,3.453,1446,3.453,1447,3.453,1448,3.453,1449,4.595,1450,4.595,1451,4.595,1452,4.604,1453,4.595,1454,4.595,1455,4.595]],["title/classes/Line.html",[215,0.079,735,1.876]],["body/classes/Line.html",[0,0.134,1,0.889,3,0.315,4,0.354,8,0.28,10,1.413,12,0.617,15,1.133,28,1.941,31,1.727,32,1.727,35,0.728,36,0.671,38,0.728,39,1.136,40,1.569,41,1.445,42,1.334,43,2.241,44,2.488,45,1.705,47,0.728,49,0.728,51,0.213,52,0.564,53,0.854,55,1.291,62,1.555,77,3.271,78,3.631,83,0.613,84,0.032,85,1.249,87,1.965,88,0.798,96,1.048,97,1.314,104,1.303,120,1.727,129,0.52,145,1.353,148,0.353,149,0.28,150,0.391,182,2.488,184,0.926,185,2.488,191,1.839,201,0.935,205,0.52,206,1.089,207,1.003,208,0.789,209,0.926,210,1.727,212,1.555,213,1.089,214,0.315,215,0.065,216,3.462,221,1.555,239,1.048,258,1.229,269,0.679,271,0.966,284,0.567,285,1.141,286,1.343,308,0.018,309,0.018,312,1.859,319,3.588,320,0.728,324,1.136,329,1.003,352,1.859,354,2.035,359,2.528,360,1.291,361,1.413,362,1.413,363,2.319,373,1.569,397,0.926,418,1.089,422,1.563,423,2.241,424,2.035,425,1.999,436,2.221,439,1.089,444,1.413,445,1.291,446,1.755,447,1.413,448,1.291,449,1.291,451,1.413,452,1.413,453,1.184,454,1.413,456,1.089,461,2.035,462,1.555,463,2.241,465,3.279,467,2.767,480,1.413,497,1.184,499,2.229,522,1.705,557,2.797,564,1.291,594,2.035,613,1.555,618,2.193,619,2.883,621,2.767,626,2.18,694,1.727,695,2.18,698,1.727,711,1.839,715,3.279,735,3.271,739,2.797,744,1.727,749,2.797,759,1.727,778,1.413,879,1.555,884,1.727,885,1.727,886,1.727,887,1.727,889,1.727,901,1.413,905,1.727,911,2.035,919,1.727,953,1.727,983,1.727,991,1.555,996,1.727,999,2.627,1012,2.488,1013,2.488,1017,1.555,1041,1.727,1091,1.555,1199,4.082,1200,4.082,1201,2.797,1202,3.211,1203,1.941,1204,3.764,1205,2.229,1206,3.211,1207,2.229,1208,2.229,1210,1.941,1216,2.229,1217,4.687,1218,2.229,1224,2.229,1230,1.941,1233,2.611,1238,1.727,1239,2.229,1240,3.211,1241,3.211,1242,3.211,1243,3.764,1244,1.941,1245,2.229,1246,2.229,1247,2.229,1248,1.941,1249,2.229,1250,2.229,1251,2.229,1252,2.229,1253,2.229,1254,2.229,1255,2.229,1256,2.229,1257,1.727,1258,2.229,1259,2.229,1260,2.229,1261,1.941,1262,3.211,1263,2.229,1264,3.764,1265,3.211,1266,3.211,1267,2.229,1268,2.229,1269,3.211,1270,2.229,1271,2.229,1272,2.229,1273,2.229,1274,3.211,1275,2.229,1276,2.229,1277,2.229,1278,2.229,1279,2.229,1280,3.211,1281,2.229,1282,2.229,1283,2.229,1284,2.229,1285,2.229,1286,4.366,1287,4.547,1288,2.229,1289,2.229,1290,2.229,1291,2.229,1292,2.229,1293,2.229,1294,2.229,1295,2.229,1296,1.941,1297,2.229,1298,1.941,1299,1.941,1300,1.727,1301,1.941,1302,2.229,1303,1.941,1304,2.229,1305,2.229,1306,2.229,1307,3.211,1308,2.229,1309,2.797,1310,2.229,1311,3.211,1312,2.229,1313,2.229,1314,2.229,1315,2.229,1316,2.229,1317,2.229,1318,2.229,1319,2.229,1320,2.229,1321,2.229,1322,2.229,1323,2.229,1324,2.229,1325,2.229,1326,2.229,1327,2.229,1328,2.229,1329,2.229,1330,2.229,1331,2.229,1332,2.229,1333,2.229,1334,2.229,1335,2.229,1336,2.229,1337,2.229,1338,2.229,1339,2.229,1340,2.229,1341,2.229,1342,2.229,1343,3.211,1344,3.211,1345,3.211,1346,2.229,1347,2.229,1456,2.665,1457,2.665,1458,2.665,1459,2.229,1460,2.665,1461,2.665,1462,2.665,1463,5.22]],["title/components/MatrixDisplayComponent.html",[0,0.112,290,0.809]],["body/components/MatrixDisplayComponent.html",[0,0.195,1,0.947,2,1.29,3,0.484,4,0.377,5,1.21,6,1.21,7,1.21,8,0.429,15,1.029,34,1.21,35,1.81,36,1.668,38,1.116,47,1.399,49,1.399,51,0.483,61,0.913,76,4.285,83,0.429,84,0.032,88,0.752,92,1.657,97,1.029,128,0.6,149,0.538,201,0.752,203,2.977,205,0.797,214,0.484,215,0.1,239,0.87,258,1.116,259,1.517,260,1.191,261,1.21,262,1.737,263,1.21,264,1.21,265,1.029,266,1.21,267,0.947,268,0.87,269,0.662,270,1.657,271,1.029,272,1.21,273,1.029,274,0.947,275,1.029,276,1.399,277,1.737,278,0.947,279,1.21,280,1.029,281,1.21,282,0.947,283,1.21,284,0.87,285,0.947,286,0.87,287,1.029,288,1.429,289,1.21,290,1.477,291,1.709,292,1.21,293,1.029,294,1.029,295,0.947,296,0.87,297,0.728,298,0.947,299,1.116,300,1.21,301,0.947,302,1.116,303,0.947,304,1.116,305,1.116,306,1.116,307,1.21,308,0.024,309,0.024,436,2.093,522,1.815,549,2.093,594,2.167,608,3.32,988,2.977,992,4.078,1452,4.908,1464,4.681,1465,3.418,1466,5.124,1467,5.124,1468,6.328,1469,4.087,1470,4.087,1471,4.087,1472,4.087,1473,4.087,1474,4.087,1475,5.124,1476,5.124]],["title/components/MorphologicalOperationsAnimationComponent.html",[0,0.112,295,0.744]],["body/components/MorphologicalOperationsAnimationComponent.html",[0,0.178,1,0.993,2,0.784,3,0.239,4,0.351,5,0.597,6,0.597,7,0.597,8,0.212,10,1.069,12,1.074,15,1.364,34,0.597,35,1.664,36,1.534,38,0.851,39,1.128,40,1.557,41,1.434,42,1.323,43,2.224,45,1.692,47,0.851,49,0.851,51,0.304,52,0.458,55,2.373,61,0.555,62,2.86,80,0.883,83,0.647,84,0.032,85,1.056,86,0.975,87,2.181,88,0.909,96,1.582,97,1.524,99,2.002,100,2.598,102,1.614,104,1.123,107,2.02,113,2.019,114,1.845,128,0.72,129,1.079,144,1.069,145,1.357,148,0.567,149,0.515,150,0.63,154,2.27,191,1.486,198,0.999,199,3.175,201,0.889,205,0.393,206,0.823,207,0.759,208,0.597,209,0.7,212,1.176,213,0.823,214,0.239,215,0.049,221,1.176,222,0.922,239,0.663,258,0.55,259,0.922,260,1.153,261,0.597,262,1.269,263,0.597,264,0.597,265,0.507,266,0.597,267,0.467,268,0.429,269,0.772,270,1.128,271,1.079,272,0.597,273,0.507,274,0.467,275,0.507,276,0.851,277,1.269,278,0.467,279,0.597,280,0.507,281,0.597,282,0.467,283,0.597,284,0.429,285,0.467,286,0.429,287,0.507,288,0.467,289,0.597,290,0.507,291,0.55,292,0.597,293,0.507,294,0.507,295,1.135,296,1.317,297,1.174,298,0.467,299,0.55,300,0.597,301,0.467,302,0.55,303,0.467,304,1.395,305,0.55,306,0.55,307,0.597,308,0.018,309,0.015,312,1.845,320,0.55,324,1.269,325,2.86,326,2.019,329,0.759,348,2.502,352,1.845,354,2.02,360,1.845,361,2.02,362,2.02,369,2.076,373,1.751,376,1.509,377,1.384,381,1.652,382,2.606,383,2.606,394,1.509,396,1.176,397,1.702,399,1.176,400,2.121,401,1.176,403,0.976,405,1.306,416,2.019,417,2.076,418,0.823,419,1.509,422,1.775,423,2.86,424,2.598,425,2.345,431,2.019,435,1.509,436,1.273,437,2.245,439,1.751,440,1.819,444,1.069,445,0.976,446,0.597,447,1.069,448,0.976,449,0.976,451,1.069,452,1.069,453,0.895,454,1.069,455,1.306,456,0.823,461,2.598,462,1.819,463,1.819,467,2.273,479,2.27,480,2.598,481,2.778,482,2.502,483,2.502,488,2.273,491,3.57,503,1.306,522,0.895,549,1.273,566,1.819,568,2.778,570,2.86,575,1.509,613,1.176,626,2.245,637,2.469,644,2.458,695,2.373,698,2.469,711,2.088,712,2.019,760,2.27,778,1.069,844,2.019,857,1.509,879,1.176,880,2.606,884,2.019,885,2.019,886,2.469,887,2.469,889,2.469,892,3.186,899,2.019,901,2.598,902,2.27,905,2.469,916,2.606,917,2.606,919,2.469,922,1.686,924,3.175,930,4.509,941,1.306,942,2.224,945,2.019,946,1.686,949,3.123,953,1.306,955,1.686,956,2.27,957,1.686,958,4.414,962,1.686,964,1.686,968,2.606,970,1.686,972,2.606,974,2.606,980,1.686,983,1.306,991,1.176,996,2.019,997,2.606,999,1.819,1012,2.469,1013,2.778,1017,1.176,1018,1.686,1028,2.27,1032,2.27,1033,2.27,1034,3.123,1042,1.468,1149,2.606,1180,1.686,1203,2.776,1211,1.686,1212,1.686,1226,1.686,1228,1.686,1230,2.27,1232,1.686,1233,2.273,1236,1.686,1237,1.686,1238,1.306,1296,1.468,1298,1.468,1299,1.468,1300,2.019,1301,2.776,1303,1.468,1348,3.585,1349,3.585,1370,1.652,1477,5.198,1478,5.198,1479,3.585,1480,3.585,1481,3.585,1482,3.585,1483,3.81,1484,3.81,1485,3.57,1486,2.016,1487,3.116,1488,2.016,1489,4.287,1490,2.016,1491,2.016,1492,2.016,1493,2.016,1494,2.016,1495,2.016,1496,2.016,1497,3.186,1498,3.116,1499,3.116,1500,3.585,1501,2.606,1502,1.686,1503,1.686,1504,1.686,1505,1.686,1506,3.81,1507,2.016,1508,2.016,1509,2.016,1510,2.016,1511,2.016,1512,2.016,1513,2.016,1514,3.116,1515,2.016,1516,2.016,1517,3.116,1518,2.016,1519,2.016,1520,2.016,1521,2.016,1522,2.016,1523,2.016,1524,2.016,1525,2.016,1526,3.116,1527,3.116,1528,3.116]],["title/components/PageNotFoundComponent.html",[0,0.112,298,0.744]],["body/components/PageNotFoundComponent.html",[0,0.206,1,0.879,2,1.231,3,0.449,4,0.35,5,1.123,6,1.123,7,1.123,8,0.399,12,0.879,15,0.955,34,1.123,35,1.798,36,1.658,38,1.335,39,1.601,41,2.036,42,1.878,47,1.335,49,1.335,51,0.303,61,0.871,83,0.399,84,0.032,88,0.718,92,1.123,128,0.557,129,0.953,148,0.502,149,0.568,150,0.557,201,0.889,205,0.74,207,1.429,208,1.123,209,1.319,214,0.449,215,0.093,258,1.037,259,1.447,260,1.151,261,1.123,262,1.69,263,1.123,264,1.123,265,0.955,266,1.123,267,0.879,268,0.808,269,0.64,270,1.601,271,0.955,272,1.123,273,0.955,274,0.879,275,0.955,276,1.335,277,1.69,278,0.879,279,1.123,280,0.955,281,1.123,282,0.879,283,1.123,284,0.808,285,0.879,286,0.808,287,0.955,288,0.879,289,1.123,290,0.955,291,1.037,292,1.123,293,0.955,294,0.955,295,0.879,296,0.808,297,0.676,298,1.323,299,1.798,300,1.123,301,0.879,302,1.037,303,0.879,304,1.037,305,1.037,306,1.037,307,1.123,308,0.023,309,0.023,312,2.619,320,1.037,329,1.429,339,3.208,353,3.504,374,4.408,407,3.562,408,4.161,409,3.168,410,3.168,411,3.168,436,1.997,450,2.46,456,1.551,474,2.765,475,2.765,476,2.765,575,2.368,852,5.06,901,2.592,1529,4.523,1530,4.523,1531,3.175,1532,4.889,1533,4.889,1534,4.889,1535,5.711,1536,3.175,1537,3.796,1538,3.796,1539,4.889,1540,4.889,1541,4.089,1542,4.089,1543,4.889,1544,4.889,1545,4.889,1546,4.889,1547,4.889,1548,4.889,1549,4.889,1550,4.889]],["title/classes/Point.html",[215,0.079,446,0.951]],["body/classes/Point.html",[3,0.289,4,0.225,8,0.256,12,1.296,51,0.195,52,0.529,55,2.553,61,0.641,77,2.757,78,3.416,80,0.628,83,0.619,84,0.032,85,1.091,86,0.817,88,0.911,90,3.416,92,1.72,94,4.409,96,0.983,97,0.906,99,2.572,104,1.237,128,0.937,136,3.626,145,1.514,148,0.721,149,0.572,150,0.801,174,3.702,184,1.985,185,3.702,191,1.154,199,3.416,214,0.289,215,0.088,216,2.94,222,1.691,239,1.269,308,0.017,309,0.017,320,0.666,324,1.56,334,2.04,376,2.287,377,2.895,386,1.743,439,0.996,446,2.007,497,1.083,500,1.58,509,3.84,528,2.101,532,5.241,536,2.622,540,3.289,543,3.06,549,2.535,550,3.865,554,1.908,562,2.622,608,3.416,628,2.332,631,2.622,639,2.332,640,3.01,754,4.409,759,4.124,821,3.626,825,3.626,928,3.01,1026,3.116,1036,3.01,1040,3.95,1041,3.416,1091,2.101,1092,3.95,1094,2.622,1189,3.84,1198,2.622,1363,3.95,1370,3.029,1398,3.01,1500,3.01,1541,4.68,1551,2.04,1552,5.271,1553,5.596,1554,3.599,1555,4.723,1556,4.723,1557,2.439,1558,2.439,1559,3.599,1560,3.599,1561,2.439,1562,2.439,1563,3.599,1564,2.439,1565,5.811,1566,2.439,1567,4.723,1568,2.439,1569,5.596,1570,5.157,1571,3.599,1572,2.439,1573,5.271,1574,2.439,1575,3.599,1576,2.439,1577,3.599,1578,3.599,1579,3.599,1580,3.599,1581,3.599,1582,2.439,1583,4.409,1584,3.599,1585,2.439,1586,2.439,1587,3.599,1588,2.439,1589,3.599,1590,2.439,1591,3.599,1592,2.439,1593,5.452,1594,5.714,1595,5.037,1596,5.037,1597,2.439,1598,2.439,1599,2.439,1600,2.439,1601,2.439,1602,2.439,1603,3.599,1604,2.439,1605,2.439,1606,2.439]],["title/components/ShapeBitmapEditorComponent.html",[0,0.112,301,0.744]],["body/components/ShapeBitmapEditorComponent.html",[0,0.168,1,0.704,2,1.06,3,0.36,4,0.28,5,0.899,6,0.899,7,0.899,8,0.319,15,0.765,31,2.729,34,0.899,35,1.758,36,1.621,38,1.15,39,1.431,47,1.15,49,1.15,51,0.243,52,0.619,61,0.75,83,0.442,84,0.032,85,1.235,88,0.71,92,1.805,96,1.15,104,1.375,122,2.458,128,0.619,129,0.821,148,0.402,149,0.508,150,0.446,174,1.968,176,2.541,184,2.021,191,0.974,201,0.71,205,0.592,208,0.899,214,0.36,215,0.074,239,0.896,258,0.83,259,1.247,260,1.029,261,0.899,262,1.545,263,0.899,264,0.899,265,0.765,266,0.899,267,0.704,268,0.646,269,0.757,270,1.431,271,0.765,272,0.899,273,0.765,274,0.704,275,0.765,276,1.15,277,1.545,278,0.704,279,0.899,280,0.765,281,0.899,282,0.704,283,0.899,284,0.646,285,0.704,286,0.896,287,0.765,288,0.704,289,0.899,290,0.765,291,0.83,292,0.899,293,0.765,294,0.765,295,0.704,296,0.646,297,0.541,298,0.704,299,0.83,300,0.899,301,1.21,302,1.589,303,0.704,304,0.83,305,1.32,306,0.83,307,0.899,308,0.02,309,0.02,346,1.968,355,3.068,356,3.068,522,1.349,594,1.61,618,2.118,619,3.233,621,3.389,694,1.968,744,2.729,747,2.541,778,1.61,788,2.541,789,3.523,810,4.366,911,1.61,1201,3.522,1210,3.804,1233,2.563,1238,1.968,1248,2.213,1370,2.233,1435,2.541,1607,4.366,1608,4.366,1609,4.835,1610,4.212,1611,4.212,1612,3.038,1613,5.484,1614,5.484,1615,3.038,1616,3.038,1617,3.038,1618,4.835,1619,4.212,1620,3.038,1621,3.038,1622,3.038,1623,3.038,1624,5.221,1625,3.038,1626,4.835,1627,3.038,1628,3.038,1629,3.523,1630,3.523,1631,3.523,1632,3.038,1633,5.221,1634,5.221,1635,5.221,1636,5.221,1637,5.221,1638,5.221,1639,3.038,1640,3.038,1641,3.038,1642,4.835,1643,3.038,1644,3.038,1645,2.541,1646,4.835,1647,3.038,1648,3.038,1649,3.038,1650,3.038,1651,3.038,1652,3.038,1653,3.038,1654,3.038,1655,3.038,1656,3.038,1657,3.038,1658,3.038,1659,3.038,1660,3.038,1661,3.038,1662,4.212,1663,3.038,1664,3.038,1665,3.038,1666,3.038,1667,3.038,1668,3.038,1669,3.038,1670,3.523,1671,3.038,1672,3.038,1673,3.038,1674,3.038,1675,5.221,1676,4.212,1677,3.038,1678,3.038,1679,3.038,1680,4.212,1681,3.038,1682,3.038,1683,3.038,1684,3.038,1685,3.038,1686,3.038,1687,3.038,1688,3.038,1689,3.038,1690,3.038,1691,5.674,1692,5.221,1693,4.835,1694,4.835,1695,4.835,1696,4.212,1697,3.038,1698,3.038,1699,3.038,1700,3.038,1701,3.038,1702,3.038]],["title/components/StructuringElementEditorComponent.html",[0,0.112,303,0.744]],["body/components/StructuringElementEditorComponent.html",[0,0.17,1,0.529,2,0.862,3,0.27,4,0.21,5,0.675,6,0.675,7,0.675,8,0.24,12,0.953,15,0.574,32,1.479,34,0.675,35,1.696,36,1.563,38,0.935,39,1.217,40,1.68,41,1.548,42,1.428,45,1.827,47,0.935,49,0.935,51,0.182,52,0.671,61,0.61,80,0.719,83,0.64,84,0.032,85,1.07,86,0.794,87,1.548,88,0.907,92,1.353,96,1.405,97,1.439,99,1.867,100,2.423,102,1.937,104,0.973,107,3.183,114,1.659,116,1.999,128,0.806,129,1.171,145,1.3,148,0.544,149,0.514,150,0.604,151,2.03,174,1.479,184,1.19,189,2.22,198,1.098,201,0.889,205,0.445,206,0.932,207,0.859,208,0.675,209,0.793,213,0.932,214,0.27,215,0.056,222,1.217,239,0.973,258,0.623,259,1.014,260,1.416,261,0.675,262,1.353,263,0.675,264,0.675,265,0.574,266,0.675,267,0.529,268,0.486,269,0.745,270,1.217,271,1.15,272,0.675,273,0.574,274,0.529,275,0.574,276,0.935,277,1.353,278,0.529,279,0.675,280,0.574,281,0.675,282,0.529,283,0.675,284,0.486,285,0.529,286,0.486,287,0.574,288,0.529,289,0.675,290,0.574,291,0.623,292,0.675,293,0.574,294,0.574,295,0.529,296,0.486,297,0.406,298,0.529,299,1.123,300,0.675,301,0.529,302,0.623,303,1.192,304,1.724,305,1.123,306,0.623,307,0.675,308,0.016,309,0.016,320,0.623,329,0.859,339,1.816,346,1.479,352,1.992,353,2.665,354,2.18,355,2.495,356,2.495,359,2.812,360,1.992,361,2.18,362,2.18,363,2.579,364,4.302,365,4.302,366,2.865,367,3.822,368,3.822,369,2.658,371,1.908,373,0.932,374,4.089,376,1.659,377,1.522,384,2.865,386,1.659,387,2.865,388,2.865,389,2.865,391,1.999,392,2.865,393,2.865,394,2.213,396,2.668,397,1.986,398,2.495,399,2.668,400,2.066,401,3.002,402,2.865,403,2.213,404,2.865,405,2.962,407,3.33,408,3.33,409,2.22,410,2.22,411,2.22,413,2.865,414,2.865,416,2.22,417,1.659,418,0.932,419,1.659,420,2.865,422,1.428,425,1.014,426,1.908,427,2.22,428,1.908,429,2.996,431,2.22,434,1.908,435,1.659,436,1.867,437,1.659,438,1.908,439,1.867,440,1.999,444,1.21,445,1.105,446,1.579,447,1.21,448,1.105,449,1.105,450,1.479,451,1.21,452,1.21,453,1.014,454,1.21,455,2.665,456,0.932,457,1.908,461,2.597,464,2.495,466,3.568,467,1.21,468,2.865,469,1.908,470,3.439,471,2.865,473,3.439,474,1.662,475,1.662,476,1.662,478,1.908,479,3.33,480,1.816,481,2.22,482,1.999,483,1.999,484,2.865,485,2.865,486,2.865,487,2.495,488,2.423,489,2.495,490,2.495,491,2.495,492,2.865,493,3.33,494,2.865,495,2.865,496,2.865,540,1.816,644,1.522,899,2.22,901,2.727,941,2.962,942,1.999,945,2.22,951,2.865,999,2.859,1017,1.332,1198,4.089,1300,1.479,1370,1.816,1485,3.747,1501,2.865,1502,1.908,1503,1.908,1504,1.908,1505,1.908,1536,1.908,1703,5.193,1704,5.193,1705,3.425,1706,2.282,1707,2.282,1708,2.282,1709,2.282,1710,2.282,1711,2.282,1712,3.425,1713,2.282,1714,2.282,1715,3.425,1716,2.282,1717,2.282,1718,2.282,1719,2.282,1720,2.282,1721,2.282,1722,3.425,1723,4.57,1724,2.282,1725,2.282,1726,4.112,1727,2.282,1728,2.282,1729,2.282,1730,2.282,1731,2.282,1732,2.282,1733,2.282,1734,2.282,1735,2.282]],["title/injectables/ThemeService.html",[318,2.082,835,1.556]],["body/injectables/ThemeService.html",[3,0.431,4,0.335,8,0.382,12,1.102,30,4.094,36,1.197,51,0.291,52,0.699,53,1.918,55,2.567,61,0.847,80,0.778,83,0.499,84,0.032,86,0.859,88,0.908,99,2.554,113,3.083,114,2.304,127,3.466,128,0.878,129,1.096,140,3.466,144,2.522,145,1.102,148,0.481,149,0.382,150,0.534,151,2.113,168,3.978,201,0.778,205,0.71,214,0.431,215,0.143,222,1.077,239,1.012,308,0.023,309,0.023,311,2.358,318,3.083,320,1.447,324,1.569,381,2.98,417,2.897,558,3.978,618,1.952,711,1.487,835,2.304,836,2.358,842,3.876,851,4.094,857,2.304,859,3.466,860,2.651,881,3.876,913,3.466,937,4.094,991,2.124,1080,3.861,1118,3.044,1121,3.978,1189,3.466,1408,2.651,1736,3.044,1737,5.441,1738,4.757,1739,5.3,1740,5.3,1741,5.62,1742,5.62,1743,4.757,1744,5.62,1745,4.757,1746,6.662,1747,4.757,1748,4.503,1749,3.639,1750,4.44,1751,3.639,1752,4.7,1753,4.757,1754,3.639,1755,3.639,1756,3.639,1757,4.757,1758,5.62,1759,4.757,1760,5.3,1761,3.639,1762,4.757,1763,4.757,1764,3.639,1765,4.757,1766,3.639,1767,3.639,1768,3.639,1769,3.639,1770,3.639,1771,3.639,1772,4.757,1773,5.3,1774,3.639,1775,3.639,1776,3.639,1777,3.639,1778,3.639,1779,4.757,1780,3.639]],["title/classes/UndoRedo.html",[215,0.079,1781,2.341]],["body/classes/UndoRedo.html",[3,0.455,4,0.355,8,0.404,12,1.261,51,0.307,52,0.724,53,1.947,61,0.878,80,0.724,83,0.603,84,0.032,85,1.204,86,0.93,88,0.892,90,3.195,91,3.965,116,3.831,128,0.935,129,0.962,145,1.407,148,0.652,149,0.518,150,0.843,214,0.455,215,0.094,222,1.459,297,1.022,308,0.023,309,0.023,320,1.05,376,2.388,377,2.19,391,2.878,409,3.719,418,2.58,433,3.965,456,1.572,497,1.709,503,3.526,693,4.8,1091,3.649,1136,4.124,1137,3.217,1138,3.217,1190,5.474,1191,5.229,1261,2.802,1309,4.638,1542,4.124,1781,4.181,1782,3.217,1783,3.847,1784,3.847,1785,3.847,1786,6.525,1787,3.847,1788,6.525,1789,5.442,1790,5.442,1791,5.74,1792,3.847,1793,4.931,1794,4.124,1795,3.847,1796,4.931,1797,3.847,1798,4.931,1799,4.931,1800,4.931,1801,3.847,1802,5.442,1803,3.847,1804,4.551,1805,3.847,1806,4.931,1807,3.847,1808,4.931,1809,3.847,1810,3.847]],["title/coverage.html",[1811,3.661]],["body/coverage.html",[0,0.228,1,0.882,8,0.4,9,3.183,10,2.018,11,3.183,83,0.4,84,0.032,104,1.352,122,3.709,145,0.882,215,0.154,260,1.042,265,0.958,267,0.882,269,0.7,271,0.958,273,0.958,274,0.882,276,1.561,278,0.882,280,0.958,282,0.882,284,0.81,286,1.217,287,0.958,288,0.882,290,0.958,293,0.958,295,0.882,297,0.872,298,0.882,301,0.882,303,0.882,308,0.023,309,0.023,310,3.183,318,2.466,344,3.183,345,3.183,346,3.704,373,1.555,422,1.322,446,1.126,453,1.691,498,4.096,587,2.466,688,2.773,689,3.183,690,4.661,735,2.222,776,2.773,777,2.773,835,2.622,837,3.183,838,3.183,847,3.183,877,3.183,878,3.183,879,3.452,986,2.773,992,2.773,1037,3.183,1038,3.183,1073,3.183,1076,2.773,1077,3.183,1124,3.183,1199,3.568,1200,3.568,1233,2.018,1359,3.183,1390,2.773,1391,2.773,1422,3.183,1423,3.183,1464,3.183,1465,3.183,1477,3.183,1478,3.183,1485,2.773,1529,3.183,1530,3.183,1531,3.183,1551,3.183,1607,3.183,1608,3.183,1645,5.576,1703,3.183,1704,3.183,1736,3.183,1781,2.773,1782,3.183,1811,3.183,1812,3.183,1813,3.806,1814,4.897,1815,3.183,1816,4.096,1817,3.183,1818,5.717,1819,3.183,1820,2.466,1821,3.806,1822,3.806,1823,3.806,1824,3.806,1825,3.806,1826,3.806,1827,3.806,1828,3.806,1829,3.806,1830,3.806,1831,3.806,1832,3.806,1833,3.806,1834,3.806,1835,3.806,1836,3.806,1837,3.806,1838,3.806,1839,3.806,1840,3.806,1841,3.806,1842,3.806,1843,3.806,1844,3.806,1845,4.897,1846,3.806,1847,3.806,1848,3.806,1849,4.529,1850,6.355,1851,3.183,1852,5.064,1853,3.183,1854,3.183,1855,3.183,1856,3.183,1857,3.806,1858,3.806,1859,3.806,1860,3.806,1861,3.806,1862,3.806,1863,3.183,1864,3.806,1865,3.806,1866,3.806]],["title/dependencies.html",[1867,2.247,1868,3.231]],["body/dependencies.html",[84,0.032,205,0.949,206,1.988,308,0.027,309,0.027,329,1.832,994,4.069,995,3.152,1140,4.069,1141,4.069,1171,4.069,1187,4.069,1188,4.069,1244,3.544,1868,4.069,1869,4.865,1870,5.695,1871,4.865,1872,6.53,1873,4.865,1874,4.865,1875,5.695,1876,4.763,1877,4.865,1878,4.865,1879,4.865,1880,4.865,1881,4.865,1882,4.865,1883,4.865,1884,4.865,1885,4.865,1886,4.865,1887,4.865,1888,4.865,1889,4.865,1890,4.865,1891,4.865,1892,4.865]],["title/miscellaneous/enumerations.html",[1893,1.425,1894,3.231]],["body/miscellaneous/enumerations.html",[51,0.359,80,0.984,84,0.032,86,0.73,146,4.421,198,1.443,268,1.157,269,0.533,296,0.958,297,0.802,308,0.026,309,0.026,342,2.916,400,1.694,436,1.839,508,3.278,526,3.278,564,2.829,566,2.627,644,1.999,695,2.633,711,1.839,713,3.961,834,3.961,881,2.916,989,3.523,990,3.523,1026,3.961,1027,4.547,1257,2.916,1356,4.421,1373,3.278,1479,4.547,1480,4.547,1481,4.547,1482,4.547,1497,4.547,1737,4.886,1748,3.961,1750,3.961,1893,2.386,1894,3.764,1895,6.313,1896,4.5,1897,6.313,1898,4.547,1899,4.547,1900,4.547,1901,3.764,1902,3.764,1903,4.547,1904,4.547,1905,4.5,1906,4.5,1907,4.547,1908,4.547]],["title/miscellaneous/functions.html",[1162,2.814,1893,1.425]],["body/miscellaneous/functions.html",[4,0.307,12,1.423,51,0.266,80,0.949,83,0.645,84,0.031,85,1.245,86,0.88,87,1.256,96,1.386,97,1.13,104,0.71,114,2.744,122,2.962,128,0.902,129,0.65,145,1.04,148,0.813,149,0.652,150,0.902,191,1.07,198,1.817,203,3.698,268,0.71,269,0.747,308,0.026,309,0.021,324,1.906,377,1.482,396,2.621,400,2.358,403,1.615,418,1.363,422,1.886,437,1.615,501,2.43,508,4.252,509,3.271,510,2.79,526,3.955,528,3.169,537,3.518,540,1.768,553,2.79,554,1.768,564,3.007,566,1.947,568,2.161,569,5.31,570,2.962,575,1.615,637,2.161,639,3.289,644,1.994,679,3.755,690,4.625,691,2.79,695,2.629,711,2.631,712,3.289,713,2.43,753,2.621,776,3.271,777,3.271,793,2.79,834,2.43,840,2.79,924,2.909,989,3.782,990,3.782,995,2.161,1028,2.43,1078,4.088,1139,4.541,1145,2.79,1157,2.161,1160,3.755,1162,3.955,1233,2.38,1257,2.161,1356,3.271,1373,3.271,1390,3.271,1391,3.271,1408,2.43,1629,3.755,1630,3.755,1631,3.755,1748,3.698,1750,4.128,1752,4.541,1816,4.541,1849,2.79,1851,3.755,1852,2.79,1853,3.755,1854,4.245,1855,3.755,1856,3.755,1863,2.79,1893,1.768,1898,2.79,1899,2.79,1900,2.79,1901,3.755,1902,4.739,1903,2.79,1904,2.79,1907,2.79,1908,2.79,1909,5.836,1910,5.075,1911,3.336,1912,3.336,1913,5.667,1914,3.336,1915,3.336,1916,3.336,1917,3.336,1918,3.336,1919,3.336,1920,3.336,1921,3.336,1922,3.336,1923,4.49,1924,3.336,1925,3.336,1926,3.336,1927,3.336,1928,3.336,1929,3.336,1930,4.49,1931,3.336,1932,3.336,1933,3.336,1934,3.336,1935,3.336,1936,3.336,1937,3.336,1938,4.49,1939,3.336,1940,4.49,1941,4.49,1942,4.49,1943,4.49,1944,3.336,1945,3.336,1946,3.336,1947,3.336,1948,3.336,1949,3.336,1950,3.336,1951,3.336,1952,3.336,1953,3.336,1954,3.336,1955,3.336,1956,3.336,1957,3.336]],["title/index.html",[51,0.257,1958,3.213]],["body/index.html",[0,0.199,2,1.072,4,0.393,13,3.104,15,1.072,17,3.563,19,3.831,21,3.563,23,2.761,24,3.104,84,0.025,86,0.691,111,3.563,137,3.563,145,0.987,146,3.104,148,0.564,269,0.504,275,1.072,285,0.987,286,0.907,294,1.072,296,0.907,297,0.937,299,1.163,306,1.163,308,0.025,309,0.025,325,3.329,326,3.696,328,3.104,341,2.761,342,2.761,347,3.563,427,2.761,489,4.155,490,3.831,537,3.407,625,3.563,676,3.563,678,3.563,841,3.104,842,2.761,857,2.063,881,3.859,995,3.964,1042,3.104,1048,3.104,1094,3.104,1103,3.563,1151,4.981,1164,3.563,1166,3.563,1459,3.563,1570,4.397,1583,5.211,1670,3.563,1794,3.563,1804,3.563,1812,3.563,1876,3.563,1959,4.26,1960,5.703,1961,4.26,1962,4.26,1963,4.26,1964,4.26,1965,4.26,1966,4.26,1967,3.563,1968,4.26,1969,4.26,1970,4.26,1971,4.26,1972,4.26,1973,4.26,1974,4.26,1975,4.26,1976,4.26,1977,4.26,1978,4.26,1979,4.26,1980,4.26,1981,4.26,1982,4.26,1983,4.26,1984,4.26,1985,4.26,1986,4.26,1987,4.26,1988,4.26,1989,4.26,1990,4.26,1991,4.26,1992,4.26,1993,4.26,1994,5.258,1995,5.703,1996,6.118,1997,6.118,1998,4.26,1999,5.258,2000,4.26,2001,4.26,2002,4.26,2003,4.26,2004,4.26,2005,4.26,2006,4.26,2007,4.26,2008,5.258,2009,5.258,2010,5.703,2011,4.26,2012,4.26,2013,4.26,2014,4.26,2015,4.26,2016,4.26,2017,4.26,2018,4.26,2019,4.26,2020,4.26,2021,4.26,2022,4.26,2023,4.26,2024,5.258,2025,4.26,2026,4.26,2027,4.26,2028,4.26,2029,5.258,2030,5.955,2031,4.26,2032,4.26,2033,4.26,2034,4.26,2035,4.26,2036,4.26,2037,4.26,2038,3.104,2039,4.26]],["title/modules.html",[2040,3.661]],["body/modules.html",[84,0.028,308,0.028,309,0.028,2040,4.38]],["title/overview.html",[2038,3.189]],["body/overview.html",[2,1.307,84,0.028,104,1.105,308,0.028,309,0.028,424,2.753,497,2.307,836,3.365,1370,2.753,2038,3.783,2041,5.193]],["title/properties.html",[52,0.567,1867,2.247]],["body/properties.html",[52,0.766,84,0.029,308,0.028,309,0.028,2042,5.218,2043,5.218]],["title/routes.html",[1820,2.837]],["body/routes.html",[84,0.028,308,0.028,309,0.028,1820,3.393]],["title/miscellaneous/variables.html",[1157,2.503,1893,1.425]],["body/miscellaneous/variables.html",[0,0.229,51,0.345,80,0.779,83,0.557,84,0.032,86,0.86,97,1.335,120,2.799,260,0.919,267,1.229,268,1.129,273,1.335,274,1.001,275,1.087,278,1.001,280,1.087,282,1.001,284,0.919,285,1.001,286,0.919,293,1.087,294,1.087,295,1.001,296,0.919,297,0.77,298,1.001,301,1.001,302,1.18,303,1.001,304,1.18,305,1.567,308,0.025,309,0.025,336,3.147,339,2.812,341,2.799,342,3.436,1157,2.799,1815,3.613,1817,4.435,1819,3.613,1820,3.719,1893,2.29,1967,3.613,2044,4.32,2045,4.32,2046,4.32,2047,4.32,2048,4.32,2049,4.32,2050,4.32,2051,5.739,2052,4.32,2053,4.32,2054,4.32,2055,4.32,2056,5.303,2057,4.32,2058,4.32,2059,4.32,2060,4.32,2061,4.32,2062,4.32,2063,4.32,2064,4.32,2065,4.32,2066,4.32,2067,4.32,2068,4.32,2069,4.32,2070,4.32,2071,6.606,2072,5.303,2073,4.32,2074,4.32,2075,4.32]]],"invertedIndex":[["",{"_index":84,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":104,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["0.0.0",{"_index":2043,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":180,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.15.0",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":181,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.5",{"_index":182,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["0.75",{"_index":183,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.99;//7512",{"_index":1678,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["0/1",{"_index":1818,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1829,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":92,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/MatrixDisplayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["1/1",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":186,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{}}}],["100",{"_index":1645,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1625,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["120",{"_index":1634,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["128",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["13/24",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1306,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["15/15",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1642,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["16",{"_index":442,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["16/16",{"_index":1822,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2041,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":1872,"title":{},"body":{"dependencies.html":{}}}],["19.2.19",{"_index":1870,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["1][col",{"_index":1476,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["1][x",{"_index":1695,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["2",{"_index":184,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["2.0.2",{"_index":1883,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":737,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["200",{"_index":1633,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["222",{"_index":729,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["23/23",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["244",{"_index":1949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["248",{"_index":1948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["25",{"_index":1105,"title":{},"body":{"injectables/HistoryService.html":{}}}],["25/25",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":176,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["255",{"_index":87,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["26/26",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["27/27",{"_index":1828,"title":{},"body":{"coverage.html":{}}}],["280",{"_index":1640,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["29/29",{"_index":1821,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":500,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["3",{"_index":1370,"title":{},"body":{"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"overview.html":{}}}],["3.0.0",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1882,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1345,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["30/30",{"_index":1825,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["31/31",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["3x3",{"_index":1449,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["4",{"_index":174,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["4.0.0",{"_index":1885,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1879,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":480,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["400",{"_index":1646,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["404",{"_index":1539,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40?'30px':'0",{"_index":1351,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["40?\\'30px\\':\\'0",{"_index":1357,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["5",{"_index":185,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["5/5",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":433,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"classes/UndoRedo.html":{}}}],["500",{"_index":1627,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["54",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["59/59",{"_index":1827,"title":{},"body":{"coverage.html":{}}}],["5x5",{"_index":1450,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["636363ff",{"_index":1517,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["650px",{"_index":1002,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["66",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["74777f",{"_index":717,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["75",{"_index":1715,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["7x7",{"_index":1451,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["8/8",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1635,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["9",{"_index":424,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"overview.html":{}}}],["9/9",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":1474,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["_currentspeedindex",{"_index":54,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_divider",{"_index":1360,"title":{},"body":{"classes/Kernel.html":{}}}],["_dragarea",{"_index":642,"title":{},"body":{"classes/Bitmap.html":{}}}],["_height",{"_index":513,"title":{},"body":{"classes/Bitmap.html":{}}}],["_id",{"_index":357,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["_interval",{"_index":56,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_kernel",{"_index":1361,"title":{},"body":{"classes/Kernel.html":{}}}],["_matrix",{"_index":514,"title":{},"body":{"classes/Bitmap.html":{}}}],["_selected",{"_index":641,"title":{},"body":{"classes/Bitmap.html":{}}}],["_size",{"_index":1362,"title":{},"body":{"classes/Kernel.html":{}}}],["_speeds",{"_index":57,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_storagekey",{"_index":843,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["_timeoutid",{"_index":58,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_width",{"_index":515,"title":{},"body":{"classes/Bitmap.html":{}}}],["a.votes",{"_index":1341,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["above",{"_index":804,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["absolute",{"_index":1354,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["access",{"_index":380,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{}}}],["accessed",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{}}}],["accessing",{"_index":501,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["accessors",{"_index":523,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["action",{"_index":1087,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["actions",{"_index":492,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["activated",{"_index":379,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["activatedroute",{"_index":371,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["actual_component",{"_index":307,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["add",{"_index":1092,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{}}}],["add(other",{"_index":1563,"title":{},"body":{"classes/Point.html":{}}}],["added",{"_index":1916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":624,"title":{},"body":{"classes/Bitmap.html":{}}}],["address",{"_index":1543,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["adds",{"_index":628,"title":{},"body":{"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["addtohistory",{"_index":1081,"title":{},"body":{"injectables/HistoryService.html":{}}}],["addtohistory(action",{"_index":1085,"title":{},"body":{"injectables/HistoryService.html":{}}}],["adjustment",{"_index":22,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["advanced",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["advances",{"_index":916,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["afterviewinit",{"_index":1201,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["against",{"_index":768,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["algorithm",{"_index":1977,"title":{},"body":{"index.html":{}}}],["algorithms",{"_index":1971,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":23,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["along",{"_index":1457,"title":{},"body":{"classes/Line.html":{}}}],["alpha",{"_index":1666,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["analysis",{"_index":1973,"title":{},"body":{"index.html":{}}}],["angular",{"_index":995,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/cdk",{"_index":1869,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1871,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1873,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":205,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":206,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1874,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":207,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/card",{"_index":208,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/checkbox",{"_index":451,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/dialog",{"_index":984,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["angular/material/divider",{"_index":450,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/form",{"_index":448,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/icon",{"_index":209,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/input",{"_index":210,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["angular/material/list",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["angular/material/menu",{"_index":211,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["angular/material/select",{"_index":212,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["angular/material/sidenav",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/slider",{"_index":213,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/tabs",{"_index":1245,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["angular/material/toolbar",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":1875,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":1877,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":62,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation",{"_index":15,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["animation'},{'name",{"_index":277,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["animation.component.css",{"_index":885,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.html",{"_index":884,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts",{"_index":879,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animation.component.ts:105",{"_index":1488,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:106",{"_index":947,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:118",{"_index":1486,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:122",{"_index":1222,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:126",{"_index":950,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:134",{"_index":915,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:162",{"_index":1213,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:167",{"_index":943,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:169",{"_index":1493,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:175",{"_index":925,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:184",{"_index":1225,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:191",{"_index":920,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:196",{"_index":1491,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:205",{"_index":954,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:217",{"_index":936,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:233",{"_index":931,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:257",{"_index":1214,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:260",{"_index":1215,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:263",{"_index":1219,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:267",{"_index":1223,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:280",{"_index":1221,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:289",{"_index":1462,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:290",{"_index":1463,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:41",{"_index":1496,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:43",{"_index":1495,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:44",{"_index":1227,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:45",{"_index":1232,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:46",{"_index":1229,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:47",{"_index":1228,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:49",{"_index":957,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:50",{"_index":1231,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:51",{"_index":960,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:52",{"_index":1237,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:53",{"_index":969,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:54",{"_index":1236,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:55",{"_index":1235,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:56",{"_index":1234,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:57",{"_index":981,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:58",{"_index":1226,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:59",{"_index":959,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:60",{"_index":1212,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:62",{"_index":962,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:64",{"_index":980,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:66",{"_index":970,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:68",{"_index":964,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:70",{"_index":1220,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:71",{"_index":1494,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:73",{"_index":968,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:75",{"_index":976,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:77",{"_index":977,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:79",{"_index":979,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:81",{"_index":973,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:83",{"_index":971,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:88",{"_index":906,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:92",{"_index":1492,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:99",{"_index":1490,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation/convolutional",{"_index":878,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["animation/hough",{"_index":1200,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["animation/median",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["animation/morphological",{"_index":1478,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animationcontrollercomponent",{"_index":1,"title":{"components/AnimationControllerComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["animationindex",{"_index":886,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["another",{"_index":1565,"title":{},"body":{"classes/Point.html":{}}}],["app",{"_index":36,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["app.component.css",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":265,"title":{"components/AppComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":881,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["applicationconfig",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":924,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["appliedbitmap",{"_index":1483,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["applies",{"_index":568,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply",{"_index":570,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply(apply",{"_index":1487,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["apply(bitmap",{"_index":1372,"title":{},"body":{"classes/Kernel.html":{}}}],["applyfilter",{"_index":895,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applyfilter(length",{"_index":918,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applying",{"_index":566,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["area",{"_index":589,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["area.ts",{"_index":1038,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["area.ts:10",{"_index":1049,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:12",{"_index":1058,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:14",{"_index":1055,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:20",{"_index":1062,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:32",{"_index":1060,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:6",{"_index":1057,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:8",{"_index":1050,"title":{},"body":{"classes/DragArea.html":{}}}],["around",{"_index":939,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["array",{"_index":504,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{}}}],["array(math.ceil(256",{"_index":682,"title":{},"body":{"classes/Bitmap.html":{}}}],["array(thetas.length).fill(0",{"_index":1310,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(new",{"_index":1312,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(point.zero",{"_index":1314,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(w).fill(infinity",{"_index":1686,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["array(width).fill(defaultvalue",{"_index":595,"title":{},"body":{"classes/Bitmap.html":{}}}],["array.from",{"_index":594,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["array.from(this._selected).map(pos",{"_index":649,"title":{},"body":{"classes/Bitmap.html":{}}}],["arrow_back",{"_index":1545,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["artifacts",{"_index":2019,"title":{},"body":{"index.html":{}}}],["asterisk",{"_index":1035,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["auto",{"_index":1033,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["automatically",{"_index":2003,"title":{},"body":{"index.html":{}}}],["available",{"_index":1804,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["axis",{"_index":1676,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["b",{"_index":1339,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["b(x",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["b(y",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["b.votes",{"_index":1340,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["back",{"_index":408,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["background",{"_index":723,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["backward",{"_index":162,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["base",{"_index":1028,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":114,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["beginning",{"_index":170,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["begin{bmatrix",{"_index":1411,"title":{},"body":{"classes/Kernel.html":{}}}],["behavior",{"_index":111,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["being",{"_index":419,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["believe",{"_index":1549,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["better",{"_index":756,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["between",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{}}}],["binary",{"_index":268,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["binarybitmapeditorcomponent",{"_index":267,"title":{"components/BinaryBitmapEditorComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmap",{"_index":269,"title":{"classes/Bitmap.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bitmap'},{'name",{"_index":272,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap.cells().foreach(p",{"_index":1315,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.dragarea.button",{"_index":798,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.get(row",{"_index":791,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.getbinary(p",{"_index":1316,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.height",{"_index":463,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmap.isdragged(cell",{"_index":784,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.down",{"_index":818,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.left",{"_index":824,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.right",{"_index":828,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.up",{"_index":808,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isselected(cell",{"_index":786,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.width",{"_index":1308,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap/bitmap.component",{"_index":444,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap_storage",{"_index":372,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapcomponent",{"_index":271,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmapcomponenttick",{"_index":358,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapeditorcomponent",{"_index":273,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmapkey",{"_index":887,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmaprenderer",{"_index":688,"title":{"classes/BitmapRenderer.html":{}},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["bitmaps",{"_index":348,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorage",{"_index":905,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorageservice",{"_index":373,"title":{"injectables/BitmapStorageService.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmaptick",{"_index":1203,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["black",{"_index":349,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["blank",{"_index":392,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["body",{"_index":1408,"title":{},"body":{"classes/Kernel.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["body.classlist.add(`${theme",{"_index":1777,"title":{},"body":{"injectables/ThemeService.html":{}}}],["body.classlist.remove('light",{"_index":1776,"title":{},"body":{"injectables/ThemeService.html":{}}}],["boolean",{"_index":96,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["bordercolor",{"_index":1289,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["both",{"_index":1094,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{},"index.html":{}}}],["bottom",{"_index":815,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["boundaries",{"_index":967,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["bounds",{"_index":509,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1876,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["brzegu",{"_index":1688,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["build",{"_index":489,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["buildthis",{"_index":2017,"title":{},"body":{"index.html":{}}}],["built",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["button",{"_index":1043,"title":{},"body":{"classes/DragArea.html":{}}}],["buttons",{"_index":402,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["c",{"_index":599,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["c1cce5",{"_index":720,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["calculated",{"_index":673,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculates",{"_index":672,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculating",{"_index":635,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculations",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":493,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cansave",{"_index":364,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["canvas",{"_index":694,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1248,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.height",{"_index":1626,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.width",{"_index":1624,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvasref",{"_index":1609,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvasrenderingcontext2d",{"_index":741,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["catch",{"_index":876,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["ccc",{"_index":738,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ceil",{"_index":1908,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":397,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cell.col",{"_index":600,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cell.row",{"_index":607,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cellclicked)=\"oncellclicked($event",{"_index":1034,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["cellclicked)=\"oncellentered($event",{"_index":485,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cellentered)=\"oncellentered($event",{"_index":484,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cells",{"_index":516,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["center",{"_index":830,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["centered",{"_index":938,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["change",{"_index":1802,"title":{},"body":{"classes/UndoRedo.html":{}}}],["changes",{"_index":30,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["chart",{"_index":1204,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart(ctx",{"_index":1250,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart.js",{"_index":1244,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"dependencies.html":{}}}],["chart.register(linecontroller",{"_index":1246,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["check",{"_index":575,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":507,"title":{},"body":{"classes/Bitmap.html":{}}}],["checks",{"_index":386,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["chroma",{"_index":1880,"title":{},"body":{"dependencies.html":{}}}],["chroma.js",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":215,"title":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["classes",{"_index":497,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{},"overview.html":{}}}],["classroom",{"_index":1991,"title":{},"body":{"index.html":{}}}],["cleaning_services",{"_index":479,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cleans",{"_index":135,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["clear",{"_index":365,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clearhistory",{"_index":1082,"title":{},"body":{"injectables/HistoryService.html":{}}}],["clears",{"_index":391,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["clearselection",{"_index":670,"title":{},"body":{"classes/Bitmap.html":{}}}],["cleartimeout(this._timeoutid",{"_index":245,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["cli",{"_index":2010,"title":{},"body":{"index.html":{}}}],["click",{"_index":942,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clicked",{"_index":945,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clip",{"_index":1292,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["clipboard",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{}}}],["clipping",{"_index":1903,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":1363,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["clone._divider",{"_index":1400,"title":{},"body":{"classes/Kernel.html":{}}}],["close",{"_index":1428,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["closing",{"_index":1482,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":2008,"title":{},"body":{"index.html":{}}}],["col",{"_index":608,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MatrixDisplayComponent.html":{},"classes/Point.html":{}}}],["colindex",{"_index":1403,"title":{},"body":{"classes/Kernel.html":{}}}],["color",{"_index":711,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale",{"_index":695,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale.binary",{"_index":1230,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["colorscale.grayscale",{"_index":709,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["column",{"_index":550,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["columns",{"_index":533,"title":{},"body":{"classes/Bitmap.html":{}}}],["command",{"_index":2030,"title":{},"body":{"index.html":{}}}],["commit",{"_index":491,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["compare",{"_index":1573,"title":{},"body":{"classes/Point.html":{}}}],["comparison",{"_index":975,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["compile",{"_index":2018,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2013,"title":{},"body":{"index.html":{}}}],["complex",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodocadditional",{"_index":2033,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":263,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["compute",{"_index":935,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["computes",{"_index":932,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["concepts",{"_index":1966,"title":{},"body":{"index.html":{}}}],["considered",{"_index":553,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["console.log(dist.length",{"_index":1672,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["console.log(medial",{"_index":1684,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["const",{"_index":618,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["constants",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["constructor(bitmapstorage",{"_index":1211,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["constructor(dialog",{"_index":903,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["constructor(dialogref",{"_index":1430,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["constructor(limit",{"_index":1792,"title":{},"body":{"classes/UndoRedo.html":{}}}],["constructor(private",{"_index":456,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["constructor(public",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"classes/Point.html":{}}}],["constructor(rho",{"_index":1461,"title":{},"body":{"classes/Line.html":{}}}],["constructor(route",{"_index":370,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["constructor(router",{"_index":1536,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["constructor(row",{"_index":1557,"title":{},"body":{"classes/Point.html":{}}}],["constructor(size",{"_index":1366,"title":{},"body":{"classes/Kernel.html":{}}}],["constructor(themeservice",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(width",{"_index":524,"title":{},"body":{"classes/Bitmap.html":{}}}],["containing",{"_index":403,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["context",{"_index":745,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["continue",{"_index":788,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["continuously",{"_index":27,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["contrasting",{"_index":1939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control",{"_index":25,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller",{"_index":37,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller'},{'name",{"_index":264,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["controller.component",{"_index":983,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["controller.component.css",{"_index":50,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.html",{"_index":48,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts",{"_index":11,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:102",{"_index":173,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:109",{"_index":164,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:115",{"_index":166,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:122",{"_index":167,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:131",{"_index":152,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:136",{"_index":157,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:141",{"_index":130,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:145",{"_index":133,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:154",{"_index":112,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:170",{"_index":134,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":192,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:38",{"_index":193,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:40",{"_index":196,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:43",{"_index":98,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:46",{"_index":93,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:48",{"_index":89,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:50",{"_index":101,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":105,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:55",{"_index":106,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":188,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":187,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:64",{"_index":175,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":177,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:71",{"_index":139,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:79",{"_index":143,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":163,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:96",{"_index":160,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller/animation",{"_index":10,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["controls",{"_index":14,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{}}}],["convert",{"_index":559,"title":{},"body":{"classes/Bitmap.html":{}}}],["converts",{"_index":1591,"title":{},"body":{"classes/Point.html":{}}}],["convolution",{"_index":929,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["convolutional",{"_index":275,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["convolutionalfilteranimationcomponent",{"_index":274,"title":{"components/ConvolutionalFilterAnimationComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":754,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/Point.html":{}}}],["coordinates",{"_index":759,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["copied",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["copies",{"_index":531,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["copy",{"_index":536,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["corresponding",{"_index":558,"title":{},"body":{"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["cos",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{}}}],["counter",{"_index":430,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["course",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1811,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["creatediagonalpattern",{"_index":699,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creatediagonalpattern(size",{"_index":731,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creates",{"_index":376,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["crossword",{"_index":1526,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["css",{"_index":1752,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["csv",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{}}}],["ctrl",{"_index":1052,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["ctrlkey",{"_index":1044,"title":{},"body":{"classes/DragArea.html":{}}}],["ctx",{"_index":744,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.beginpath",{"_index":810,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.closepath",{"_index":1638,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(120",{"_index":1643,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(200",{"_index":1632,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(280",{"_index":1639,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(290",{"_index":1641,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fill",{"_index":1637,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(300",{"_index":1647,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(350",{"_index":1648,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(500",{"_index":1644,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(math.round((col",{"_index":803,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.fillrect(x",{"_index":1685,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillstyle",{"_index":789,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.getimagedata(0",{"_index":1653,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.imagesmoothingenabled",{"_index":1628,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.linejoin",{"_index":833,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(((col",{"_index":813,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(math.round((col",{"_index":820,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.moveto(((col",{"_index":811,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.moveto(math.round((col",{"_index":819,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.stroke",{"_index":814,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.strokestyle",{"_index":790,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.textalign",{"_index":829,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.textbaseline",{"_index":831,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["current",{"_index":99,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["currently",{"_index":194,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["cursor",{"_index":761,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["custom",{"_index":1915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["czy",{"_index":1657,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["d",{"_index":1691,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dane",{"_index":1650,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dark",{"_index":1750,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["dark)').matches",{"_index":1770,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkpattern",{"_index":795,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["data",{"_index":911,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["data[idx",{"_index":1664,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["datapoints",{"_index":1275,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datapoints.map(p",{"_index":1281,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datasets",{"_index":1251,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["declarecustomfunctions",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarecustomfunctions(parser",{"_index":1912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declares",{"_index":1914,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":1435,"title":{},"body":{"components/KernelDialogComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["decreases",{"_index":153,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["deeper",{"_index":1981,"title":{},"body":{"index.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulting",{"_index":1747,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultvalue",{"_index":526,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":88,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["demonstrations",{"_index":1992,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1868,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["deselecting",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{}}}],["deselects",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{}}}],["designed",{"_index":1963,"title":{},"body":{"index.html":{}}}],["destination",{"_index":919,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.isout(pixel.cell",{"_index":1522,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.set(pixel.cell",{"_index":1524,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destroyed",{"_index":138,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["detailed",{"_index":2035,"title":{},"body":{"index.html":{}}}],["details",{"_index":405,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["determines",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["development",{"_index":1994,"title":{},"body":{"index.html":{}}}],["devicepixelratio",{"_index":1253,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diaglen",{"_index":1324,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diagonal",{"_index":734,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["dialog",{"_index":912,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialog'},{'name",{"_index":289,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["dialog.component",{"_index":987,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["dialog.component.css",{"_index":1427,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.html",{"_index":1426,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1423,"title":{},"body":{"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:30",{"_index":1438,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1439,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1441,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1432,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1437,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1433,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1434,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog/kernel",{"_index":986,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":1000,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1006,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["dialogs/kernel",{"_index":985,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["difference",{"_index":1500,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["different",{"_index":146,"title":{},"body":{"components/AnimationControllerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["dilation",{"_index":1479,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dimensions",{"_index":511,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":261,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["directives",{"_index":306,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["directory",{"_index":2020,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":1003,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display",{"_index":436,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display'},{'name",{"_index":292,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["display.component",{"_index":993,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display.component.css",{"_index":1467,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.html",{"_index":1466,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts",{"_index":1465,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:11",{"_index":1470,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts:13",{"_index":1471,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display/matrix",{"_index":992,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["displayed",{"_index":100,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["displaying",{"_index":972,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["dist",{"_index":1670,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"index.html":{}}}],["dist[y",{"_index":1694,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dist[y][x",{"_index":1693,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distance",{"_index":1669,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distancetransform",{"_index":1610,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distancetransform(isinside",{"_index":1611,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["divider",{"_index":1365,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["divider(value",{"_index":1394,"title":{},"body":{"classes/Kernel.html":{}}}],["document's",{"_index":1957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document.body",{"_index":1775,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.getelementbyid('bitmapchart",{"_index":1247,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["documentation",{"_index":1812,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["down",{"_index":1553,"title":{},"body":{"classes/Point.html":{}}}],["dołu",{"_index":1699,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["drag",{"_index":588,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["drag_area",{"_index":648,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragarea",{"_index":587,"title":{"classes/DragArea.html":{}},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"coverage.html":{}}}],["dragarea(drag_area",{"_index":647,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragend",{"_index":1045,"title":{},"body":{"classes/DragArea.html":{}}}],["draggable",{"_index":1039,"title":{},"body":{"classes/DragArea.html":{}}}],["dragged",{"_index":653,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragging",{"_index":627,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragstart",{"_index":1046,"title":{},"body":{"classes/DragArea.html":{}}}],["draw",{"_index":747,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawgrid",{"_index":700,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawgrid(ctx",{"_index":740,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawing",{"_index":719,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawn",{"_index":716,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["draws",{"_index":743,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstring",{"_index":701,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstring(ctx",{"_index":748,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["duplicates",{"_index":1089,"title":{},"body":{"injectables/HistoryService.html":{}}}],["during",{"_index":1054,"title":{},"body":{"classes/DragArea.html":{}}}],["dynamic",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["e.g",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":435,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["edge",{"_index":1027,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit",{"_index":949,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["edit/:id",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edited",{"_index":420,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editing",{"_index":347,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"index.html":{}}}],["editor",{"_index":305,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'name",{"_index":270,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.css",{"_index":356,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.html",{"_index":355,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts",{"_index":346,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:104",{"_index":1707,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:106",{"_index":415,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:108",{"_index":1615,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":1713,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":1706,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":1710,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:130",{"_index":1714,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1620,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":1617,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":426,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":428,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":1718,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":434,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":441,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":438,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1717,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":443,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":1716,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":432,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":1719,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":375,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":1705,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":395,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":1709,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":390,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":1708,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:88",{"_index":412,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:92",{"_index":1711,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:94",{"_index":385,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":406,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor/binary",{"_index":345,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/bitmap",{"_index":1824,"title":{},"body":{"coverage.html":{}}}],["editor/shape",{"_index":1608,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/structuring",{"_index":1704,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["educational",{"_index":1961,"title":{},"body":{"index.html":{}}}],["effect",{"_index":202,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["effects",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":260,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":1618,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["emits",{"_index":147,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["emitted",{"_index":108,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["enabled",{"_index":120,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/variables.html":{}}}],["enabling",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["end",{"_index":172,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/DragArea.html":{}}}],["ending",{"_index":1056,"title":{},"body":{"classes/DragArea.html":{}}}],["endpoints",{"_index":1460,"title":{},"body":{"classes/Line.html":{}}}],["end{bmatrix",{"_index":1412,"title":{},"body":{"classes/Kernel.html":{}}}],["ensure",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensuring",{"_index":1088,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enter",{"_index":398,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entered",{"_index":404,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entries",{"_index":1107,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enumeration",{"_index":1897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1894,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumerator",{"_index":1468,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["enums",{"_index":590,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/Kernel.html":{}}}],["eps",{"_index":1677,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["equal",{"_index":1036,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["equals",{"_index":1554,"title":{},"body":{"classes/Point.html":{}}}],["equals(other",{"_index":1571,"title":{},"body":{"classes/Point.html":{}}}],["equivalent",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["erosion",{"_index":1480,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1550,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["eval",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["evaluate",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":107,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["event.cell",{"_index":1725,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["eventcoalescing",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":399,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["example",{"_index":1583,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["examples",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["exceeds",{"_index":1799,"title":{},"body":{"classes/UndoRedo.html":{}}}],["execute",{"_index":2025,"title":{},"body":{"index.html":{}}}],["exists",{"_index":411,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["experiment",{"_index":1975,"title":{},"body":{"index.html":{}}}],["exploring",{"_index":1969,"title":{},"body":{"index.html":{}}}],["export",{"_index":214,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["expr",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["expression",{"_index":1078,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"miscellaneous/functions.html":{}}}],["expressions",{"_index":1104,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["expressionvalidator",{"_index":1854,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":623,"title":{},"body":{"classes/Bitmap.html":{}}}],["factor",{"_index":746,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["false",{"_index":191,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["fast",{"_index":1884,"title":{},"body":{"dependencies.html":{}}}],["faster",{"_index":200,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["features",{"_index":625,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["field",{"_index":449,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["files",{"_index":2007,"title":{},"body":{"index.html":{}}}],["fillcolor",{"_index":792,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["filter",{"_index":276,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":923,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filteredbitmap",{"_index":888,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filtering",{"_index":963,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filters",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":1540,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["first",{"_index":95,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{}}}],["first_page",{"_index":246,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["flippeddata",{"_index":1280,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["floor",{"_index":1907,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["following",{"_index":2029,"title":{},"body":{"index.html":{}}}],["fontset",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["for(let",{"_index":613,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["format",{"_index":639,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["forms",{"_index":1921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":45,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["formulas",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{}}}],["forward",{"_index":165,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["forward/backward",{"_index":20,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["found",{"_index":852,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":300,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["found.component.css",{"_index":1534,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1533,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1531,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1537,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:26",{"_index":1538,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1530,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["frame",{"_index":26,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["frequency",{"_index":126,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["friendly",{"_index":1987,"title":{},"body":{"index.html":{}}}],["full",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":122,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":629,"title":{},"body":{"classes/Bitmap.html":{}}}],["functions",{"_index":1162,"title":{"miscellaneous/functions.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["fundamental",{"_index":1983,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1980,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["generates",{"_index":926,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["generic",{"_index":1784,"title":{},"body":{"classes/UndoRedo.html":{}}}],["get(cell",{"_index":545,"title":{},"body":{"classes/Bitmap.html":{}}}],["getareacells",{"_index":1047,"title":{},"body":{"classes/DragArea.html":{}}}],["getbinary",{"_index":517,"title":{},"body":{"classes/Bitmap.html":{}}}],["getbinary(cell",{"_index":551,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcanvasheight",{"_index":1207,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcanvaswidth",{"_index":1208,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcellindex",{"_index":518,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcellindex(cell",{"_index":555,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcontrastcolor",{"_index":776,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontrastcolor(color",{"_index":1937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcontrastcolor(selectioncolor",{"_index":796,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell",{"_index":702,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell(x",{"_index":757,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getdivider",{"_index":1387,"title":{},"body":{"classes/Kernel.html":{}}}],["getequation",{"_index":896,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["getheight",{"_index":585,"title":{},"body":{"classes/Bitmap.html":{}}}],["gethistory",{"_index":1083,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryreversed",{"_index":1084,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getindexcell",{"_index":519,"title":{},"body":{"classes/Bitmap.html":{}}}],["getindexcell(index",{"_index":560,"title":{},"body":{"classes/Bitmap.html":{}}}],["getkernel",{"_index":1385,"title":{},"body":{"classes/Kernel.html":{}}}],["getoffsetx",{"_index":703,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getoffsety",{"_index":704,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getresultkernel",{"_index":897,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gets",{"_index":543,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["getsize",{"_index":1383,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["getsourcekernel",{"_index":898,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gettheme",{"_index":1741,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemeclass",{"_index":1742,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":506,"title":{},"body":{"classes/Bitmap.html":{}}}],["getvar",{"_index":1233,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvar(variable",{"_index":1955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getwidth",{"_index":583,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding",{"_index":520,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding(cell",{"_index":563,"title":{},"body":{"classes/Bitmap.html":{}}}],["given",{"_index":753,"title":{},"body":{"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["goback",{"_index":1535,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["grayscale",{"_index":713,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["grid",{"_index":439,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["grid_on",{"_index":1025,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["gridcolor",{"_index":696,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["group",{"_index":674,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize",{"_index":677,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize)).fill(0",{"_index":683,"title":{},"body":{"classes/Bitmap.html":{}}}],["góry",{"_index":1701,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["h",{"_index":1614,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["handle",{"_index":839,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["handled",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":396,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":1901,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["has(id",{"_index":845,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["hasbackdrop",{"_index":1004,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["hashlocationstrategy",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":722,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["headercolor",{"_index":697,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["headers",{"_index":488,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["heatmap",{"_index":1898,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["height",{"_index":359,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["height}}px",{"_index":495,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"miscellaneous/variables.html":{}}}],["help'},{'name",{"_index":279,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help.component.css",{"_index":1075,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.html",{"_index":1074,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpbuilding",{"_index":2016,"title":{},"body":{"index.html":{}}}],["helpcomponent",{"_index":278,"title":{"components/HelpComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":1655,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["helpers",{"_index":1342,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["hiderequiredmarker",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":159,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["highlight",{"_index":1499,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["highlighted",{"_index":643,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlightedelement",{"_index":645,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlighting",{"_index":633,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["highlights",{"_index":1712,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["histogram",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"classes/Bitmap.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["histogram'},{'name",{"_index":281,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["histogram(groupsize",{"_index":681,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogram[math.trunc(pixel.value",{"_index":687,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogramcomponent",{"_index":280,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["histograms",{"_index":636,"title":{},"body":{"classes/Bitmap.html":{}}}],["history",{"_index":410,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/HistoryService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.back",{"_index":475,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.length",{"_index":474,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["historylimit",{"_index":1079,"title":{},"body":{"injectables/HistoryService.html":{}}}],["historyservice",{"_index":1076,"title":{"injectables/HistoryService.html":{}},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["home",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":283,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["home.component.css",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":282,"title":{"components/HomeComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hough",{"_index":285,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["houghtransformanimationcomponent",{"_index":284,"title":{"components/HoughTransformAnimationComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":259,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["htmlcanvaselement",{"_index":739,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["http://localhost:4200",{"_index":2002,"title":{},"body":{"index.html":{}}}],["https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":388,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["i=$index",{"_index":1453,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["id",{"_index":189,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/StructuringElementEditorComponent.html":{}}}],["identifier",{"_index":847,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["idx",{"_index":1663,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["if(!issel(cell",{"_index":787,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(!this.bitmap.getbinary(cell",{"_index":1516,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(!this.structuringelement.geterosion(this.bitmap",{"_index":1519,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if($event.event.buttons",{"_index":470,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if((issel(cell)&&!issel(cell.down",{"_index":816,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.left",{"_index":822,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.right",{"_index":826,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.up",{"_index":805,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(apply",{"_index":1510,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(bitmap",{"_index":460,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["if(isdark(fillcolor",{"_index":794,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(issel(cell",{"_index":797,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(kernel.divider",{"_index":1420,"title":{},"body":{"classes/Kernel.html":{}}}],["if(kernel.kernel",{"_index":1418,"title":{},"body":{"classes/Kernel.html":{}}}],["if(line.min.col",{"_index":1268,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(max[ridx][tidx].col",{"_index":1332,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(min[ridx][tidx].col>p.col",{"_index":1329,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(showvalue",{"_index":257,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.bitmap.isout($event.cell",{"_index":469,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if(this.chart",{"_index":1258,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(this.history.includes(action",{"_index":1110,"title":{},"body":{"injectables/HistoryService.html":{}}}],["if(this.isout(cell",{"_index":611,"title":{},"body":{"classes/Bitmap.html":{}}}],["if(this.operation===morphologicaloperations.dilation",{"_index":1514,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.operation===morphologicaloperations.erosion",{"_index":1518,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.playing",{"_index":242,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.value",{"_index":243,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["image",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["imageprocessinglecturesupportsystem",{"_index":1959,"title":{},"body":{"index.html":{}}}],["images",{"_index":351,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["imgdata",{"_index":1652,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["imgdata.data",{"_index":1654,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["implementation",{"_index":1787,"title":{},"body":{"classes/UndoRedo.html":{}}}],["implements",{"_index":31,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["import",{"_index":201,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["importprovidersfrom(mathjaxmodule.forroot",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":38,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["include",{"_index":676,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["included",{"_index":680,"title":{},"body":{"classes/Bitmap.html":{}}}],["includes",{"_index":1048,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["includes(cell",{"_index":1061,"title":{},"body":{"classes/DragArea.html":{}}}],["including",{"_index":17,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["incorrect",{"_index":1544,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["increases",{"_index":158,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["incrementing/decrementing",{"_index":103,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["increments",{"_index":118,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1051,"title":{},"body":{"classes/DragArea.html":{}}}],["indices",{"_index":762,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["individual",{"_index":678,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["inf",{"_index":1689,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["information",{"_index":1459,"title":{},"body":{"classes/Line.html":{},"index.html":{}}}],["inicjalizacja",{"_index":1687,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["initial",{"_index":910,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initialize",{"_index":907,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initializes",{"_index":140,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["inject",{"_index":1442,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1436,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["injectable",{"_index":835,"title":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":836,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["input",{"_index":203,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{},"miscellaneous/functions.html":{}}}],["input(1",{"_index":218,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(255",{"_index":219,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(true",{"_index":217,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input.required",{"_index":1472,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["inputs",{"_index":76,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["inst",{"_index":873,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["instance",{"_index":377,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["interactions",{"_index":914,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["interactive",{"_index":427,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["interactivebitmap",{"_index":422,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interactivebitmap(16",{"_index":423,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(bitmap.width",{"_index":462,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.bitmap.width",{"_index":1013,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.width",{"_index":473,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["interface",{"_index":1988,"title":{},"body":{"index.html":{}}}],["interval",{"_index":178,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["invalid",{"_index":853,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["iscursoroncell",{"_index":705,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncell(x",{"_index":766,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader",{"_index":706,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader(x",{"_index":769,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader",{"_index":707,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader(x",{"_index":771,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdark",{"_index":1851,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdark(color",{"_index":1950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevmode",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdragged(cell",{"_index":654,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.down",{"_index":817,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.left",{"_index":823,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.right",{"_index":827,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.up",{"_index":806,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isinside",{"_index":1616,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["isinside(x",{"_index":1662,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["isout",{"_index":521,"title":{},"body":{"classes/Bitmap.html":{}}}],["isout(cell",{"_index":573,"title":{},"body":{"classes/Bitmap.html":{}}}],["issel",{"_index":785,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isselected(cell",{"_index":656,"title":{},"body":{"classes/Bitmap.html":{}}}],["item",{"_index":1113,"title":{},"body":{"injectables/HistoryService.html":{}}}],["j=$index",{"_index":1454,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["jest",{"_index":1659,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["js",{"_index":1881,"title":{},"body":{"dependencies.html":{}}}],["json.parse(history",{"_index":1122,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.parse(raw",{"_index":868,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["json.stringify(bitmap",{"_index":862,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["json.stringify(this",{"_index":1415,"title":{},"body":{"classes/Kernel.html":{}}}],["json.stringify(this.history",{"_index":1119,"title":{},"body":{"injectables/HistoryService.html":{}}}],["jump",{"_index":944,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kana",{"_index":1667,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["karma",{"_index":2026,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1108,"title":{},"body":{"injectables/HistoryService.html":{}}}],["kernel",{"_index":288,"title":{"classes/Kernel.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["kernel().kernel[row",{"_index":1475,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["kernel(3",{"_index":961,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kernel(result.size",{"_index":1009,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kernel(value",{"_index":1446,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kernel.divider",{"_index":1421,"title":{},"body":{"classes/Kernel.html":{}}}],["kernel.kernel",{"_index":1419,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["kerneldialogcomponent",{"_index":287,"title":{"components/KernelDialogComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["key",{"_index":857,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["keyboard_double_arrow_left",{"_index":252,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["keyboard_double_arrow_right",{"_index":254,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["kształtu",{"_index":1661,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["label",{"_index":1285,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["last",{"_index":91,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["last_page",{"_index":251,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["latex",{"_index":927,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["layout",{"_index":1255,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["learning",{"_index":1965,"title":{},"body":{"index.html":{}}}],["left",{"_index":821,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["legend",{"_index":258,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["length",{"_index":522,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["less",{"_index":117,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["level",{"_index":156,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["levels",{"_index":132,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["lewej",{"_index":1702,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["library",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{}}}],["liczymy",{"_index":1668,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["light",{"_index":1748,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["light/dark",{"_index":1738,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":1091,"title":{},"body":{"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}}}],["limit(max",{"_index":1575,"title":{},"body":{"classes/Point.html":{}}}],["limited",{"_index":1580,"title":{},"body":{"classes/Point.html":{}}}],["limits",{"_index":1577,"title":{},"body":{"classes/Point.html":{}}}],["line",{"_index":735,"title":{"classes/Line.html":{}},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["line.max.col",{"_index":1269,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.min.col",{"_index":1271,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.rho",{"_index":1264,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta",{"_index":1274,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta*math.pi/180",{"_index":1265,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.votes",{"_index":1288,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linear",{"_index":557,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linearscale",{"_index":1242,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linecontroller",{"_index":1239,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lineelement",{"_index":1240,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linepoint",{"_index":1209,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["linepoint(x",{"_index":1216,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines",{"_index":715,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.push(new",{"_index":1333,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.sort((a",{"_index":1338,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linewidth",{"_index":732,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["list",{"_index":1103,"title":{},"body":{"injectables/HistoryService.html":{},"index.html":{}}}],["literal",{"_index":394,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["lmb",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{}}}],["load",{"_index":844,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["load(id",{"_index":848,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["load(storagekey",{"_index":1377,"title":{},"body":{"classes/Kernel.html":{}}}],["loaded",{"_index":421,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{}}}],["loading",{"_index":382,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["loads",{"_index":850,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["local",{"_index":842,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["localstorage.getitem(storagekey",{"_index":1416,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.getitem(this._storagekey",{"_index":865,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.getitem(this.storagekey",{"_index":1121,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.removeitem(this.storagekey",{"_index":1123,"title":{},"body":{"injectables/HistoryService.html":{}}}],["localstorage.setitem(storagekey",{"_index":1414,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.setitem(this._storagekey",{"_index":861,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.setitem(this.storagekey",{"_index":1118,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["located",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["locationstrategy",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lokalna",{"_index":1673,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["loop",{"_index":59,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["looping",{"_index":29,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["lower",{"_index":155,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["luminance",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":1254,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["make",{"_index":1989,"title":{},"body":{"index.html":{}}}],["maksymalno",{"_index":1674,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["manage",{"_index":913,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["managing",{"_index":190,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{}}}],["manipulate",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{}}}],["manipulating",{"_index":502,"title":{},"body":{"classes/Bitmap.html":{}}}],["manipulation",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mat",{"_index":1629,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["mat_dialog_data",{"_index":1444,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_icon_default_options",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":41,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matbuttontogglemodule",{"_index":1424,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matcardmodule",{"_index":39,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matcheckboxmodule",{"_index":354,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matching",{"_index":309,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":904,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["matdialogmodule",{"_index":1425,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matdialogref",{"_index":1431,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matdividermodule",{"_index":353,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["material",{"_index":1967,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":352,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["math",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["math.cos(theta",{"_index":1320,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.max(0",{"_index":235,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.max(min.col",{"_index":1604,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.col",{"_index":1600,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.dragstart.col",{"_index":1072,"title":{},"body":{"classes/DragArea.html":{}}}],["math.max(this.dragstart.row",{"_index":1067,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(d",{"_index":1692,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.min(max.col",{"_index":1605,"title":{},"body":{"classes/Point.html":{}}}],["math.min(max.row",{"_index":1602,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this._speeds.length",{"_index":238,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.min(this.col",{"_index":1598,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this.dragstart.col",{"_index":1069,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.dragstart.row",{"_index":1064,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.origin.col",{"_index":1734,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["math.pi",{"_index":1636,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.round(((col+1",{"_index":799,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(((row+1",{"_index":801,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((col",{"_index":800,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((row",{"_index":802,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(p.col",{"_index":1319,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.round(value",{"_index":1396,"title":{},"body":{"classes/Kernel.html":{}}}],["math.sin(theta",{"_index":1322,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.sqrt2",{"_index":1696,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.trunc((size",{"_index":1023,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["math.trunc((this._size",{"_index":1397,"title":{},"body":{"classes/Kernel.html":{}}}],["math.trunc(index",{"_index":620,"title":{},"body":{"classes/Bitmap.html":{}}}],["mathematical",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mathjax",{"_index":994,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{}}}],["mathjaxmodule",{"_index":883,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["maticonmodule",{"_index":42,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matinputmodule",{"_index":44,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["matlistmodule",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["matmenumodule",{"_index":46,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["matrix",{"_index":291,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matrixdisplaycomponent",{"_index":290,"title":{"components/MatrixDisplayComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["matselectmodule",{"_index":43,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["matsidenavmodule",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["matslidermodule",{"_index":40,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mattabsmodule",{"_index":1202,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["mattoolbarmodule",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["max",{"_index":77,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["max(other",{"_index":1581,"title":{},"body":{"classes/Point.html":{}}}],["max[r][t",{"_index":1337,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx",{"_index":1327,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx].max(p",{"_index":1328,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["maximum",{"_index":90,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}}}],["maxspeed",{"_index":63,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["medial",{"_index":1675,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["medial.push([x",{"_index":1682,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["median",{"_index":294,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["medianfilteranimationcomponent",{"_index":293,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":1095,"title":{},"body":{"injectables/HistoryService.html":{}}}],["menu",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1532,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":34,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["method",{"_index":567,"title":{},"body":{"classes/Bitmap.html":{}}}],["methods",{"_index":61,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["middle",{"_index":832,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["milliseconds",{"_index":179,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["min",{"_index":78,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["min(other",{"_index":1584,"title":{},"body":{"classes/Point.html":{}}}],["min(width",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["min[r][t",{"_index":1336,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx",{"_index":1325,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx].col",{"_index":1330,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx].min(p",{"_index":1326,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["minimum",{"_index":94,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Point.html":{}}}],["minspeed",{"_index":64,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["miscellaneous",{"_index":1893,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmb",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":569,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["model",{"_index":110,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["model(0",{"_index":220,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["modes",{"_index":1906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modifications",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["modify",{"_index":2006,"title":{},"body":{"index.html":{}}}],["modular",{"_index":1984,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2040,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modulo",{"_index":1904,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["more",{"_index":2034,"title":{},"body":{"index.html":{}}}],["morphological",{"_index":296,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["morphologicaloperations",{"_index":1497,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["morphologicaloperations.erosion",{"_index":1498,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["morphologicaloperationsanimationcomponent",{"_index":295,"title":{"components/MorphologicalOperationsAnimationComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mouse",{"_index":401,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mouseevent",{"_index":468,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["moved",{"_index":1541,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/Point.html":{}}}],["moves",{"_index":1569,"title":{},"body":{"classes/Point.html":{}}}],["multiplier",{"_index":197,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["multiplying",{"_index":933,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["n",{"_index":1410,"title":{},"body":{"classes/Kernel.html":{}}}],["na",{"_index":1680,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["name",{"_index":149,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":2012,"title":{},"body":{"index.html":{}}}],["nan",{"_index":1924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navigate",{"_index":2001,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":407,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["navigation",{"_index":384,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["necessary",{"_index":908,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["neighborhood",{"_index":940,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["new",{"_index":145,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["next",{"_index":154,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["ng",{"_index":1997,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1210,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ngondestroy",{"_index":65,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["ngoninit",{"_index":66,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["noise",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["none",{"_index":1356,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nothing",{"_index":582,"title":{},"body":{"classes/Bitmap.html":{}}}],["notify",{"_index":1762,"title":{},"body":{"injectables/ThemeService.html":{}}}],["npm",{"_index":2032,"title":{},"body":{"index.html":{}}}],["null",{"_index":418,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":85,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number,y",{"_index":1612,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["number.isinteger(cell.col",{"_index":602,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isinteger(cell.row",{"_index":601,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isnan(pixel.value",{"_index":686,"title":{},"body":{"classes/Bitmap.html":{}}}],["numbers",{"_index":505,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["numerical",{"_index":726,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["obj",{"_index":867,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["obj._height",{"_index":871,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._matrix",{"_index":872,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._width",{"_index":870,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object",{"_index":548,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.assign(inst",{"_index":875,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.create(bitmap.prototype",{"_index":874,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object.create(kernel.prototype",{"_index":1417,"title":{},"body":{"classes/Kernel.html":{}}}],["objects",{"_index":544,"title":{},"body":{"classes/Bitmap.html":{}}}],["obrazu",{"_index":1651,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["observable",{"_index":1758,"title":{},"body":{"injectables/ThemeService.html":{}}}],["observe",{"_index":1976,"title":{},"body":{"index.html":{}}}],["od",{"_index":1698,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["offset",{"_index":764,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsetx",{"_index":782,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsety",{"_index":783,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ok",{"_index":1455,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["old",{"_index":529,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldest",{"_index":1800,"title":{},"body":{"classes/UndoRedo.html":{}}}],["oldmatrix",{"_index":525,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldmatrix?._matrix?.foreach((row",{"_index":596,"title":{},"body":{"classes/Bitmap.html":{}}}],["oncellclicked",{"_index":899,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellclicked($event",{"_index":941,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered",{"_index":366,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered($event",{"_index":393,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["ondestroy",{"_index":33,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["one",{"_index":532,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["oninit",{"_index":32,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["onto",{"_index":693,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/UndoRedo.html":{}}}],["open",{"_index":2000,"title":{},"body":{"index.html":{}}}],["open_in_new",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{}}}],["opendialog",{"_index":900,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["opening",{"_index":1481,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["opens",{"_index":948,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["operation",{"_index":930,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["operations",{"_index":297,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["operators",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["optimizes",{"_index":2022,"title":{},"body":{"index.html":{}}}],["optional",{"_index":150,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":28,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["order",{"_index":1099,"title":{},"body":{"injectables/HistoryService.html":{}}}],["origin",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["original",{"_index":958,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["other.col",{"_index":1596,"title":{},"body":{"classes/Point.html":{}}}],["other.row",{"_index":1595,"title":{},"body":{"classes/Point.html":{}}}],["otherwise",{"_index":554,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":508,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["outofrange",{"_index":1374,"title":{},"body":{"classes/Kernel.html":{}}}],["outofrangehandle",{"_index":1390,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["outofrangehandle(value",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["outofrangehandling",{"_index":989,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["output",{"_index":204,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outputs",{"_index":81,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outside",{"_index":966,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["over",{"_index":440,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["overrides",{"_index":109,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["overview",{"_index":2038,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oy",{"_index":1399,"title":{},"body":{"classes/Kernel.html":{}}}],["p.col",{"_index":1331,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.row",{"_index":1321,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.x",{"_index":1282,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.y",{"_index":1283,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1",{"_index":1262,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.col",{"_index":1276,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.row",{"_index":1277,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2",{"_index":1266,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.col",{"_index":1278,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.row",{"_index":1279,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["package",{"_index":1867,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padded",{"_index":572,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding",{"_index":564,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["padding.defaultvalue",{"_index":571,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding.edge",{"_index":606,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["page",{"_index":299,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":298,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":1350,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["param",{"_index":222,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["parameters",{"_index":148,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parseandapply",{"_index":1855,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseandapply(expression",{"_index":1925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1913,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parses",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pass",{"_index":1697,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["paste",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["path",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":736,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["pause",{"_index":248,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["paused",{"_index":195,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["perform",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["performance",{"_index":2023,"title":{},"body":{"index.html":{}}}],["piksel",{"_index":1658,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["pipes",{"_index":2015,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":400,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pixel.value===0).foreach(pixel",{"_index":1521,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["pixels",{"_index":437,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["pixelsize",{"_index":360,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixelsize}}px",{"_index":496,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixel’s",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["play",{"_index":115,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play/pause",{"_index":18,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play_arrow",{"_index":249,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playback",{"_index":16,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playing",{"_index":60,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["plugins",{"_index":1256,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pobieramy",{"_index":1649,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["point",{"_index":446,"title":{"classes/Point.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["point's",{"_index":1578,"title":{},"body":{"classes/Point.html":{}}}],["point((rho",{"_index":1346,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(0",{"_index":562,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["point(1",{"_index":1560,"title":{},"body":{"classes/Point.html":{}}}],["point(height",{"_index":1313,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.max.row",{"_index":1272,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.min.row",{"_index":1270,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(math.max(min.row",{"_index":1601,"title":{},"body":{"classes/Point.html":{}}}],["point(math.max(this.row",{"_index":1599,"title":{},"body":{"classes/Point.html":{}}}],["point(math.min(this.origin.row",{"_index":1733,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["point(math.min(this.row",{"_index":1597,"title":{},"body":{"classes/Point.html":{}}}],["point(r",{"_index":616,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(row",{"_index":610,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(this.row",{"_index":1593,"title":{},"body":{"classes/Point.html":{}}}],["point(x",{"_index":622,"title":{},"body":{"classes/Bitmap.html":{}}}],["point.zero",{"_index":1579,"title":{},"body":{"classes/Point.html":{}}}],["pointelement",{"_index":1241,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pointer",{"_index":1355,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["pointradius",{"_index":1291,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["points",{"_index":1041,"title":{},"body":{"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["polar",{"_index":1456,"title":{},"body":{"classes/Line.html":{}}}],["pos.split(',').map(number",{"_index":650,"title":{},"body":{"classes/Bitmap.html":{}}}],["position",{"_index":752,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["powerful",{"_index":2011,"title":{},"body":{"index.html":{}}}],["prawej",{"_index":1700,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["predefined",{"_index":131,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{}}}],["prefersdark",{"_index":1767,"title":{},"body":{"injectables/ThemeService.html":{}}}],["prefix",{"_index":858,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["pressed",{"_index":1053,"title":{},"body":{"classes/DragArea.html":{}}}],["previous",{"_index":409,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["primary",{"_index":1631,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":53,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["procedural",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["process",{"_index":922,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processed",{"_index":956,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processes",{"_index":882,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["processing",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["producing",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2021,"title":{},"body":{"index.html":{}}}],["project",{"_index":1960,"title":{},"body":{"index.html":{}}}],["properties",{"_index":52,"title":{"properties.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"properties.html":{}}}],["property",{"_index":579,"title":{},"body":{"classes/Bitmap.html":{}}}],["protected",{"_index":512,"title":{},"body":{"classes/Bitmap.html":{}}}],["provide",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":530,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["providedin",{"_index":860,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["providerouter(routes",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":13,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"index.html":{}}}],["provideserviceworker('ngsw",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":216,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["push",{"_index":1791,"title":{},"body":{"classes/UndoRedo.html":{}}}],["push(state",{"_index":1796,"title":{},"body":{"classes/UndoRedo.html":{}}}],["pushes",{"_index":1798,"title":{},"body":{"classes/UndoRedo.html":{}}}],["quantization",{"_index":1373,"title":{},"body":{"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle",{"_index":1391,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle(value",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizationmode",{"_index":990,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantized",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizing",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quit",{"_index":367,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["r",{"_index":597,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{}}}],["random",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{}}}],["range",{"_index":1902,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["raw",{"_index":864,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["re",{"_index":982,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["reaches",{"_index":119,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["reaching",{"_index":171,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["readme",{"_index":1958,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":55,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{}}}],["real",{"_index":1978,"title":{},"body":{"index.html":{}}}],["reapplying",{"_index":952,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["recent",{"_index":1100,"title":{},"body":{"injectables/HistoryService.html":{}}}],["recognized",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rectangle",{"_index":1623,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["redirectto",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redo",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoes",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoing",{"_index":1803,"title":{},"body":{"classes/UndoRedo.html":{}}}],["redostack",{"_index":1789,"title":{},"body":{"classes/UndoRedo.html":{}}}],["reference",{"_index":2039,"title":{},"body":{"index.html":{}}}],["references",{"_index":2036,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":901,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["refreshes",{"_index":951,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["registerwhenstable:30000",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":2004,"title":{},"body":{"index.html":{}}}],["removed",{"_index":1542,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/UndoRedo.html":{}}}],["render",{"_index":708,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["render(ctx",{"_index":773,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendered",{"_index":728,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendering",{"_index":692,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["renders",{"_index":775,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["repeat",{"_index":256,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["repeat_on",{"_index":255,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["represent",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["representation",{"_index":928,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["represented",{"_index":547,"title":{},"body":{"classes/Bitmap.html":{}}}],["representing",{"_index":540,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["represents",{"_index":499,"title":{},"body":{"classes/Bitmap.html":{},"classes/Line.html":{}}}],["required",{"_index":1469,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["resets",{"_index":121,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["resize",{"_index":368,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resizes",{"_index":413,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resources",{"_index":137,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["respecting",{"_index":1090,"title":{},"body":{"injectables/HistoryService.html":{}}}],["responsive",{"_index":1252,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["restart",{"_index":169,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["result",{"_index":199,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["resultbitmap",{"_index":889,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["resultkernel",{"_index":890,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["results",{"_index":308,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":840,"title":{},"body":{"injectables/BitmapStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrieve",{"_index":1956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":937,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["retrieving",{"_index":510,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["return",{"_index":239,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["returns",{"_index":128,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1098,"title":{},"body":{"injectables/HistoryService.html":{}}}],["reversed",{"_index":1101,"title":{},"body":{"injectables/HistoryService.html":{}}}],["revert",{"_index":1527,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["reverts",{"_index":1489,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["rgb(249",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(26",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rho",{"_index":1217,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos.length",{"_index":1311,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos[r",{"_index":1334,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["ridx",{"_index":1323,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["right",{"_index":825,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["rmb",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["rodku",{"_index":1690,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["root",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":266,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["round",{"_index":834,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rounded",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":378,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["router",{"_index":374,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["routermodule",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routes",{"_index":1820,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":549,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["row,col",{"_index":640,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["row.foreach((value",{"_index":598,"title":{},"body":{"classes/Bitmap.html":{}}}],["row.join",{"_index":1407,"title":{},"body":{"classes/Kernel.html":{}}}],["row/column",{"_index":978,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["row=0;row",{"_index":614,"title":{},"body":{"classes/Bitmap.html":{}}}],["row[colindex",{"_index":1405,"title":{},"body":{"classes/Kernel.html":{}}}],["rows",{"_index":534,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["rows.join",{"_index":1409,"title":{},"body":{"classes/Kernel.html":{}}}],["run",{"_index":1996,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2028,"title":{},"body":{"index.html":{}}}],["running",{"_index":1999,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/subject",{"_index":1764,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rysujemy",{"_index":1683,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["równości",{"_index":1681,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["same",{"_index":1567,"title":{},"body":{"classes/Point.html":{}}}],["save",{"_index":369,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["save(id",{"_index":854,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["save(storagekey",{"_index":1379,"title":{},"body":{"classes/Kernel.html":{}}}],["saved",{"_index":387,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["savedtheme",{"_index":1765,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saves",{"_index":416,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["saving",{"_index":383,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["scaffolding",{"_index":2009,"title":{},"body":{"index.html":{}}}],["scale",{"_index":712,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["scale)+0.5",{"_index":812,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["scalecolor",{"_index":777,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scalecolor(value",{"_index":793,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["scaled",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scales",{"_index":1257,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["scaling",{"_index":1952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schematics",{"_index":2014,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1769,"title":{},"body":{"injectables/ThemeService.html":{}}}],["see",{"_index":851,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["seed",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":659,"title":{},"body":{"classes/Bitmap.html":{}}}],["select(cell",{"_index":660,"title":{},"body":{"classes/Bitmap.html":{}}}],["select_col_end",{"_index":1071,"title":{},"body":{"classes/DragArea.html":{}}}],["select_col_start",{"_index":1068,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_end",{"_index":1066,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_start",{"_index":1063,"title":{},"body":{"classes/DragArea.html":{}}}],["selected",{"_index":637,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["selectedcolorscale",{"_index":891,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedcolorscale]=\"colorscale",{"_index":1528,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectedcolorscale]=\"selectedcolorscale",{"_index":1031,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedonly",{"_index":679,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["selecting",{"_index":630,"title":{},"body":{"classes/Bitmap.html":{}}}],["selection",{"_index":626,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor",{"_index":698,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor]=\"selectioncolor",{"_index":1349,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selector",{"_index":35,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["selects",{"_index":658,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["serveonce",{"_index":1998,"title":{},"body":{"index.html":{}}}],["server",{"_index":1995,"title":{},"body":{"index.html":{}}}],["service",{"_index":381,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["services",{"_index":909,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["services/bitmap",{"_index":452,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["services/theme/theme.service",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":151,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["set(cell",{"_index":580,"title":{},"body":{"classes/Bitmap.html":{}}}],["setdivider(value",{"_index":1388,"title":{},"body":{"classes/Kernel.html":{}}}],["sets",{"_index":144,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["setselection(cell",{"_index":666,"title":{},"body":{"classes/Bitmap.html":{}}}],["setsize(value",{"_index":1440,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["settheme",{"_index":1743,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":1753,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setting",{"_index":127,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["settings",{"_index":414,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["setvalue",{"_index":67,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalue(value",{"_index":142,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalues",{"_index":902,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["setvalues(length",{"_index":953,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shape",{"_index":302,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["shapebitmapeditorcomponent",{"_index":301,"title":{"components/ShapeBitmapEditorComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showbase",{"_index":892,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showdifference",{"_index":1484,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showgrid",{"_index":361,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showgrid]=\"showgrid",{"_index":482,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showheaders",{"_index":362,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shown",{"_index":974,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shownumbers]=\"false",{"_index":481,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shownumbers]=\"shownumbervalues&&pixelsize>=40",{"_index":1029,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["shownumbervalues",{"_index":893,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["showvalue",{"_index":79,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sidenav.opened",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":1783,"title":{},"body":{"classes/UndoRedo.html":{}}}],["simplex",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["simplex(x",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["sin",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":102,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["size(value",{"_index":1445,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["skip_next",{"_index":250,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["skip_previous",{"_index":247,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["slw",{"_index":807,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["slwc/2",{"_index":809,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source.get(pixel.cell",{"_index":1525,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["source.isout(pixel.cell",{"_index":1523,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["sourcekernel",{"_index":894,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specific",{"_index":634,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specified",{"_index":528,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["spectral",{"_index":1899,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["speed",{"_index":21,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["speedcontrol",{"_index":233,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speeddown",{"_index":68,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speedup",{"_index":69,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speed}}x",{"_index":253,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sprawd",{"_index":1656,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["sprawdzamy",{"_index":1665,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["src",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1910,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":1895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../expression",{"_index":1909,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../style",{"_index":1911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/animation",{"_index":9,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["src/app/components/binary",{"_index":344,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/bitmap",{"_index":1823,"title":{},"body":{"coverage.html":{}}}],["src/app/components/bitmap/bitmap.component.ts",{"_index":1826,"title":{},"body":{"coverage.html":{}}}],["src/app/components/convolutional",{"_index":877,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/kernel",{"_index":1422,"title":{},"body":{"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/help/help.component.ts",{"_index":1073,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["src/app/components/histogram/histogram.component.ts",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1124,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/hough",{"_index":1199,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["src/app/components/matrix",{"_index":1464,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["src/app/components/median",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["src/app/components/morphological",{"_index":1477,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1529,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/shape",{"_index":1607,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/structuring",{"_index":1703,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["src/app/services/bitmap",{"_index":837,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts",{"_index":1077,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts:11",{"_index":1106,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:13",{"_index":1109,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:19",{"_index":1086,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:33",{"_index":1097,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:40",{"_index":1096,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:49",{"_index":1093,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:9",{"_index":1102,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/theme/theme.service.ts",{"_index":1736,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme/theme.service.ts:11",{"_index":1756,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:13",{"_index":1761,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:15",{"_index":1745,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:33",{"_index":1754,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:45",{"_index":1749,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:52",{"_index":1751,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:57",{"_index":1755,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/static/bitmap.ts",{"_index":498,"title":{},"body":{"classes/Bitmap.html":{},"coverage.html":{}}}],["src/app/static/bitmap.ts:113",{"_index":581,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:120",{"_index":542,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:13",{"_index":541,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:130",{"_index":578,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:147",{"_index":561,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:15",{"_index":539,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:159",{"_index":556,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:166",{"_index":576,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:17",{"_index":527,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:43",{"_index":584,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:49",{"_index":586,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:57",{"_index":574,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:64",{"_index":546,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:73",{"_index":552,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:83",{"_index":565,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/color",{"_index":1849,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/drag",{"_index":1037,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["src/app/static/enums.ts",{"_index":1896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/static/expression",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/kernel.ts",{"_index":1359,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{}}}],["src/app/static/kernel.ts:10",{"_index":1384,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:11",{"_index":1386,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:12",{"_index":1389,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:13",{"_index":1367,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:22",{"_index":1375,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:33",{"_index":1382,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:37",{"_index":1376,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:44",{"_index":1381,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:56",{"_index":1380,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:60",{"_index":1378,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:7",{"_index":1368,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:8",{"_index":1369,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:9",{"_index":1371,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/point.ts",{"_index":1551,"title":{},"body":{"classes/Point.html":{},"coverage.html":{}}}],["src/app/static/point.ts:13",{"_index":1566,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:2",{"_index":1558,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:20",{"_index":1564,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:27",{"_index":1588,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:35",{"_index":1585,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:43",{"_index":1582,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:49",{"_index":1574,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:55",{"_index":1586,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:61",{"_index":1592,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:67",{"_index":1568,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:7",{"_index":1559,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:75",{"_index":1576,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:82",{"_index":1572,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:88",{"_index":1590,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:92",{"_index":1562,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:94",{"_index":1561,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/render",{"_index":689,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["src/app/static/structuringelement.ts",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["src/app/static/style",{"_index":1863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/undoredo.ts",{"_index":1782,"title":{},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["src/app/static/undoredo.ts:18",{"_index":1797,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:29",{"_index":1805,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:4",{"_index":1795,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:40",{"_index":1801,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:6",{"_index":1793,"title":{},"body":{"classes/UndoRedo.html":{}}}],["stack",{"_index":1786,"title":{},"body":{"classes/UndoRedo.html":{}}}],["start",{"_index":1042,"title":{},"body":{"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["starting",{"_index":1059,"title":{},"body":{"classes/DragArea.html":{}}}],["starts",{"_index":141,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["state",{"_index":116,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["statements",{"_index":1813,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1788,"title":{},"body":{"classes/UndoRedo.html":{}}}],["static",{"_index":1552,"title":{},"body":{"classes/Point.html":{}}}],["static/bitmap",{"_index":445,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/enums",{"_index":991,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["static/kernel",{"_index":988,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["static/point",{"_index":447,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/structuringelement",{"_index":1502,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/style",{"_index":1238,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["step",{"_index":19,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["stepbackward",{"_index":70,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepfirst",{"_index":71,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepforward",{"_index":72,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steplast",{"_index":73,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steps",{"_index":161,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["storage",{"_index":417,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["storage.service",{"_index":454,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["storage.service.ts",{"_index":838,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":856,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:18",{"_index":855,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:26",{"_index":846,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:35",{"_index":849,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage/bitmap",{"_index":453,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["storagekey",{"_index":1080,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Kernel.html":{},"injectables/ThemeService.html":{}}}],["store",{"_index":1794,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["stored",{"_index":503,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/UndoRedo.html":{}}}],["stores",{"_index":921,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["storing",{"_index":859,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["strategies",{"_index":1905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":965,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["stream",{"_index":1759,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["string=\"kernel",{"_index":1413,"title":{},"body":{"classes/Kernel.html":{}}}],["strings",{"_index":638,"title":{},"body":{"classes/Bitmap.html":{}}}],["stroke",{"_index":750,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["stroked",{"_index":755,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["structure",{"_index":1985,"title":{},"body":{"index.html":{}}}],["structuring",{"_index":304,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["structuringelement",{"_index":1485,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["structuringelement(3",{"_index":1501,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["structuringelement(this.bitmap.width",{"_index":1735,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["structuringelementeditorcomponent",{"_index":303,"title":{"components/StructuringElementEditorComponent.html":{}},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":1993,"title":{},"body":{"index.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?'30px':'0",{"_index":1352,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?\\'30px\\':\\'0",{"_index":1358,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style=\"margin",{"_index":1032,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["style=\"position",{"_index":1353,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["styleurl",{"_index":49,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["subject",{"_index":1760,"title":{},"body":{"injectables/ThemeService.html":{}}}],["submit",{"_index":1429,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["subscribers",{"_index":1763,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subtract",{"_index":1555,"title":{},"body":{"classes/Point.html":{}}}],["subtract(other",{"_index":1587,"title":{},"body":{"classes/Point.html":{}}}],["subtracts",{"_index":1589,"title":{},"body":{"classes/Point.html":{}}}],["such",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["suitable",{"_index":1990,"title":{},"body":{"index.html":{}}}],["sum",{"_index":1398,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["super(width",{"_index":651,"title":{},"body":{"classes/Bitmap.html":{}}}],["support",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["symbols",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{}}}],["sys",{"_index":1630,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["t",{"_index":1309,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["tabindex",{"_index":1205,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["table",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":955,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["teaching",{"_index":1964,"title":{},"body":{"index.html":{}}}],["techniques",{"_index":1972,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["templateurl",{"_index":47,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tension",{"_index":1290,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["test",{"_index":2027,"title":{},"body":{"index.html":{}}}],["testdocumentation",{"_index":2031,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2024,"title":{},"body":{"index.html":{}}}],["text",{"_index":749,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["theme",{"_index":1746,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechanged",{"_index":1739,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechangedsource",{"_index":1740,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":1737,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["themes.dark",{"_index":1772,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes.light",{"_index":1773,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":318,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.gettheme()=='light'?'dark_mode':'light_mode",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["themeservice.gettheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["theta",{"_index":1286,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetarad",{"_index":1218,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas",{"_index":1307,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas.foreach((theta",{"_index":1317,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas[t]*180/math.pi",{"_index":1335,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetastep",{"_index":1305,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this._currentspeedindex",{"_index":234,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._divider",{"_index":1395,"title":{},"body":{"classes/Kernel.html":{}}}],["this._dragarea",{"_index":646,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._dragarea.dragging&&this._dragarea.includes(cell",{"_index":655,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._height",{"_index":592,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._id",{"_index":457,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this._interval",{"_index":244,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._kernel",{"_index":1393,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel.map(row",{"_index":1404,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel[0].map((_",{"_index":1402,"title":{},"body":{"classes/Kernel.html":{}}}],["this._matrix",{"_index":593,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row]?.[cell.col",{"_index":604,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row][cell.col",{"_index":612,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected",{"_index":652,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.add(cell.tostring",{"_index":661,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.clear",{"_index":671,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.delete(cell.tostring",{"_index":665,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.has(cell.tostring",{"_index":657,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._size",{"_index":1392,"title":{},"body":{"classes/Kernel.html":{}}}],["this._speeds[0",{"_index":241,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._currentspeedindex",{"_index":237,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._speeds.length",{"_index":240,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._width",{"_index":591,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.animate",{"_index":221,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.animationindex",{"_index":1016,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.appliedbitmap",{"_index":1506,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.appliedbitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell",{"_index":1511,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.applyfilter(this.bitmap.length",{"_index":1015,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap",{"_index":461,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.clearselection",{"_index":1017,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.button",{"_index":1728,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragend",{"_index":1730,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragging",{"_index":1731,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragstart",{"_index":1729,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.getindexcell(index",{"_index":1024,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap.getindexcell(this.animationindex",{"_index":1296,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmap.height",{"_index":467,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.highlightedelement",{"_index":1300,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getcellindex(p.cell",{"_index":1297,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(cell",{"_index":1302,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(this.origin",{"_index":1727,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.set($event.cell",{"_index":471,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.width",{"_index":465,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap_storage.load(this._id",{"_index":459,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmap_storage.save(this._id",{"_index":477,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapcomponenttick",{"_index":472,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapstorage.load(this.bitmapkey",{"_index":996,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmapstorage.save(this.bitmapkey",{"_index":997,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmaptick",{"_index":1304,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.canvasref.nativeelement",{"_index":1622,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["this.chart",{"_index":1249,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets",{"_index":1259,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets.push",{"_index":1284,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.resize(this.getcanvaswidth()*2",{"_index":1293,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.update",{"_index":1295,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.col",{"_index":1594,"title":{},"body":{"classes/Point.html":{}}}],["this.dialog.open(kerneldialogcomponent",{"_index":1001,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.dialogref.close",{"_index":1447,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.dialogref.close(this.kernel",{"_index":1448,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.distancetransform(isinside",{"_index":1671,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["this.dragend.col",{"_index":1070,"title":{},"body":{"classes/DragArea.html":{}}}],["this.dragend.row",{"_index":1065,"title":{},"body":{"classes/DragArea.html":{}}}],["this.filteredbitmap",{"_index":1014,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.get(cell",{"_index":605,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.get(new",{"_index":609,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.getcanvasheight()*2",{"_index":1294,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.getcursorcell(x",{"_index":779,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.gethistory().slice().reverse",{"_index":1120,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.getoffsetx",{"_index":780,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getoffsety",{"_index":781,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getresultkernel",{"_index":1021,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.getsourcekernel",{"_index":1020,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.gettheme",{"_index":1779,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.height",{"_index":466,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.history",{"_index":1111,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.filter(item",{"_index":1112,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.length",{"_index":1115,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.push(action",{"_index":1114,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.shift",{"_index":1117,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.historylimit",{"_index":1116,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.isout(cell",{"_index":603,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.isselected(pixel.cell",{"_index":685,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.kernel",{"_index":1007,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.kernel().size",{"_index":1473,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["this.kernel.clone",{"_index":1005,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.load(\"kernel",{"_index":998,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.save(\"kernel",{"_index":1011,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.size",{"_index":1022,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.length",{"_index":617,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.limit",{"_index":1261,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["this.linepoint(line.max.col",{"_index":1267,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.linepoint(line.min.col",{"_index":1263,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.load(this._storagekey",{"_index":863,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["this.loop",{"_index":232,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.operation",{"_index":1508,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.operation===morphologicaloperations.erosion",{"_index":1520,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.origin",{"_index":1723,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.origin.clone",{"_index":1726,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.pixels().foreach",{"_index":684,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.pixelsize",{"_index":1343,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.playing",{"_index":229,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.quit",{"_index":478,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.redostack",{"_index":1810,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.refresh",{"_index":999,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.resultbitmap",{"_index":1012,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.clearselection",{"_index":1299,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.highlightedelement",{"_index":1515,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.pixels().filter(p=>p.value===0).foreach(p",{"_index":1512,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.select(cell",{"_index":1303,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.set(p.cell",{"_index":1298,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultkernel",{"_index":1010,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":458,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.router.navigate",{"_index":476,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.row",{"_index":1603,"title":{},"body":{"classes/Point.html":{}}}],["this.row},${this.col",{"_index":1606,"title":{},"body":{"classes/Point.html":{}}}],["this.select(cell",{"_index":667,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.selectioncolor",{"_index":1301,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.settheme(current",{"_index":1780,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(prefersdark",{"_index":1771,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(savedtheme",{"_index":1766,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(themes.light",{"_index":1774,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setvalue(math.max(this.min",{"_index":227,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(math.min(this.max",{"_index":230,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.max",{"_index":231,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.min",{"_index":226,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalues(index+1",{"_index":1019,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.setvalues(this.animationindex+1",{"_index":1513,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showbase?this.bitmap:undefined",{"_index":1018,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showdifference",{"_index":1509,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showheaders",{"_index":1344,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.sourcekernel",{"_index":1008,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.speed",{"_index":236,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.step",{"_index":228,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.structuringelement",{"_index":1722,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.applycomplex(this.bitmap",{"_index":1507,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.structuringelement.height",{"_index":1721,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.load",{"_index":1504,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.origin",{"_index":1724,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.save",{"_index":1505,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.set(point.one",{"_index":1503,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.width",{"_index":1720,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.themechangedsource.asobservable",{"_index":1757,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themechangedsource.next(theme",{"_index":1778,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.tick",{"_index":1732,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.toline(line.rho",{"_index":1273,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.transform(this.resultbitmap).slice(0",{"_index":1260,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.undostack.length",{"_index":1808,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.push(state",{"_index":1807,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.shift",{"_index":1809,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.unselect(cell",{"_index":668,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.value",{"_index":223,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.value.set(value",{"_index":224,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.valuechanged.emit(value",{"_index":225,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.width",{"_index":464,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{}}}],["threshold",{"_index":1206,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["through",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["tick",{"_index":429,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tick]=\"bitmaptick",{"_index":1348,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["tick]=\"tick",{"_index":1030,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["tidx",{"_index":1318,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["time",{"_index":1979,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":124,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["tip",{"_index":1547,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["tips_and_updates",{"_index":1546,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["title",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tmp",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["together",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["toggle",{"_index":1443,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["toggleloop",{"_index":74,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggleplay",{"_index":75,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggles",{"_index":168,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/ThemeService.html":{}}}],["toggletheme",{"_index":1744,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tolatex",{"_index":1364,"title":{},"body":{"classes/Kernel.html":{}}}],["tolerancja",{"_index":1679,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["tools",{"_index":490,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["tooltip",{"_index":1243,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tostring",{"_index":1556,"title":{},"body":{"classes/Point.html":{}}}],["total",{"_index":577,"title":{},"body":{"classes/Bitmap.html":{}}}],["track",{"_index":1452,"title":{},"body":{"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["transform",{"_index":286,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["transform(bitmap",{"_index":1224,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["transformations",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["transposed",{"_index":1401,"title":{},"body":{"classes/Kernel.html":{}}}],["transposed.map(row",{"_index":1406,"title":{},"body":{"classes/Kernel.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["trigger",{"_index":431,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["true",{"_index":97,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":866,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["tslib",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":486,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["two",{"_index":1040,"title":{},"body":{"classes/DragArea.html":{},"classes/Point.html":{}}}],["type",{"_index":83,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":869,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["typically",{"_index":1951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unary",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":425,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["under",{"_index":760,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["understanding",{"_index":1982,"title":{},"body":{"index.html":{}}}],["undo",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undo/redo",{"_index":1785,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undoes",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoing",{"_index":1806,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undone",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoredo",{"_index":1781,"title":{"classes/UndoRedo.html":{}},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["undostack",{"_index":1790,"title":{},"body":{"classes/UndoRedo.html":{}}}],["uninitialized",{"_index":538,"title":{},"body":{"classes/Bitmap.html":{}}}],["unit",{"_index":1570,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["unselect",{"_index":663,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselect(cell",{"_index":664,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselecting",{"_index":669,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselects",{"_index":662,"title":{},"body":{"classes/Bitmap.html":{}}}],["unsets",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{}}}],["unused",{"_index":946,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["up",{"_index":136,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["update",{"_index":125,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["updates",{"_index":113,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["updating",{"_index":917,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["url",{"_index":1548,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["use",{"_index":537,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":644,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":1986,"title":{},"body":{"index.html":{}}}],["users",{"_index":24,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["userselect]=\"false",{"_index":483,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["uses",{"_index":123,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["usevalue",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":841,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["utility",{"_index":691,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["utils",{"_index":778,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["utils.ts",{"_index":690,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils.ts:111",{"_index":751,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:12",{"_index":714,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:125",{"_index":742,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:14",{"_index":725,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:153",{"_index":733,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:16",{"_index":724,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:18",{"_index":710,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:181",{"_index":774,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:21",{"_index":718,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:23",{"_index":721,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:25",{"_index":730,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:36",{"_index":767,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:52",{"_index":758,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:67",{"_index":770,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:80",{"_index":772,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:9",{"_index":727,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:93",{"_index":763,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:99",{"_index":765,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["v",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid",{"_index":389,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["validate",{"_index":1936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateexpression",{"_index":1856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateexpression(expression",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":1932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":1920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":1919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":1917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validity",{"_index":1918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":80,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanged",{"_index":82,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["values",{"_index":198,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["values.push({cell",{"_index":615,"title":{},"body":{"classes/Bitmap.html":{}}}],["var",{"_index":262,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["variable",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":1157,"title":{"miscellaneous/variables.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1970,"title":{},"body":{"index.html":{}}}],["version",{"_index":2042,"title":{},"body":{"properties.html":{}}}],["view",{"_index":455,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["viewchild",{"_index":1621,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["viewchild('canvas",{"_index":1619,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["viridis",{"_index":1900,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["visibility",{"_index":487,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/StructuringElementEditorComponent.html":{}}}],["visit",{"_index":2037,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1974,"title":{},"body":{"index.html":{}}}],["visualizations",{"_index":1968,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":880,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["void",{"_index":129,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["votes",{"_index":1287,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["voting",{"_index":1458,"title":{},"body":{"classes/Line.html":{}}}],["w",{"_index":1613,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["web",{"_index":1962,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":934,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["well",{"_index":632,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["wewnątrz",{"_index":1660,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["whenever",{"_index":2005,"title":{},"body":{"index.html":{}}}],["whether",{"_index":675,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["white",{"_index":350,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["whole",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{}}}],["width",{"_index":363,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["width}}px",{"_index":494,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["window.matchmedia('(prefers",{"_index":1768,"title":{},"body":{"injectables/ThemeService.html":{}}}],["within",{"_index":631,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["without",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":1878,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["write",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":619,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["x*math.cos(thetarad))/math.sin(thetarad",{"_index":1347,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["x/width*255",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":621,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["y)*1.1",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["yes",{"_index":535,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["z",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["zero",{"_index":1026,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["zone.js",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AnimationControllerComponent.html":{"url":"components/AnimationControllerComponent.html","title":"component - AnimationControllerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AnimationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/animation-controller/animation-controller.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\nIt allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animation-controller\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSelectModule\n                            MatInputModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animation-controller.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animation-controller.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentSpeedIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                _interval\n                            \n                            \n                                    Private\n                                    Readonly\n                                _speeds\n                            \n                            \n                                    Private\n                                _timeoutId\n                            \n                            \n                                loop\n                            \n                            \n                                playing\n                            \n                            \n                                speed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                maxSpeed\n                            \n                            \n                                minSpeed\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                            \n                                speedDown\n                            \n                            \n                                speedUp\n                            \n                            \n                                stepBackward\n                            \n                            \n                                stepFirst\n                            \n                            \n                                stepForward\n                            \n                            \n                                stepLast\n                            \n                            \n                                toggleLoop\n                            \n                            \n                                togglePlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                step\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:48\n                            \n                        \n                \n                    \n                        Maximum value (last frame) of the animation\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value (first frame) of the animation\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:43\n                            \n                        \n                \n                    \n                        If true, the value (current frame) is displayed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:50\n                            \n                        \n                \n                    \n                        Step size for incrementing/decrementing the value (frame)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:53\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:53\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChanged\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:55\n                            \n                        \n                \n                    \n                        Event emitted when the value (frame) changes, overrides default model behavior\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Continuously updates the animation frame based on the current speed and play state.\nIf the animation is playing and the current value is less than the maximum value, it increments the value.\nIf the current value reaches the maximum and looping is enabled, it resets to the minimum value.\nThe function uses a timeout to control the update frequency based on the speed setting.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSpeed\n                        \n                    \n                \n            \n            \n                \nmaxSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Returns the maximum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minSpeed\n                        \n                    \n                \n            \n            \n                \nminSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Returns the minimum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Cleans up resources when the component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes the component and starts the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Sets the current value (frame) of the animation.\nIf the new value is different from the current value, it updates the value and emits the valueChanged event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value (frame) to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedDown\n                        \n                    \n                \n            \n            \n                \nspeedDown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Decreases the animation speed to the next lower predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedUp\n                        \n                    \n                \n            \n            \n                \nspeedUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Increases the animation speed to the next higher predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepBackward\n                        \n                    \n                \n            \n            \n                \nstepBackward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Steps backward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepFirst\n                        \n                    \n                \n            \n            \n                \nstepFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Steps to the first frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepForward\n                        \n                    \n                \n            \n            \n                \nstepForward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Steps forward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepLast\n                        \n                    \n                \n            \n            \n                \nstepLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Steps to the last frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoop\n                        \n                    \n                \n            \n            \n                \ntoggleLoop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Toggles the looping behavior of the animation.\nWhen enabled, the animation will restart from the beginning after reaching the end.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlay\n                        \n                    \n                \n            \n            \n                \ntogglePlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Toggles the play/pause state of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentSpeedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:64\n                        \n                    \n\n            \n                \n                    Current index in the predefined speed levels\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 250\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:66\n                        \n                    \n\n            \n                \n                    Interval in milliseconds for animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _speeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:62\n                        \n                    \n\n            \n                \n                    Predefined speed levels for the animation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _timeoutId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:60\n                        \n                    \n\n            \n                \n                    Timeout ID for managing animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:34\n                        \n                    \n\n            \n                \n                    If true, the animation will loop continuously\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the animation is currently playing.\nWhen false, the animation is paused.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:40\n                        \n                    \n\n            \n                \n                    Speed multiplier for the animation playback. Higher values result in faster playback.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, input, model, OnDestroy, OnInit, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\n\n/** \n * A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\n * It allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n */\n@Component({\n  selector: 'app-animation-controller',\n  imports: [\n    MatCardModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatInputModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './animation-controller.component.html',\n  styleUrl: './animation-controller.component.css'\n})\nexport class AnimationControllerComponent implements OnInit, OnDestroy {\n  //public\n  \n  /** If true, the animation will loop continuously */\n  loop: boolean = false;\n  /** If true, the animation is currently playing.\n   * When false, the animation is paused.\n   */\n  playing: boolean = false;\n  /** Speed multiplier for the animation playback. Higher values result in faster playback. */\n  speed: number = 1;\n  \n  /** If true, the value (current frame) is displayed */\n  showValue = input(true);\n\n  /** Minimum value (first frame) of the animation */\n  min = input(1);\n  /** Maximum value (last frame) of the animation */\n  max = input(255);\n  /** Step size for incrementing/decrementing the value (frame) */\n  step = input(1);\n\n  /** Current value (frame) of the animation */\n  value = model(0);\n  /** Event emitted when the value (frame) changes, **overrides default model behavior** */\n  valueChanged = output();\n\n  //private\n\n  /** Timeout ID for managing animation updates */\n  private _timeoutId: any;\n  /** Predefined speed levels for the animation */\n  private readonly _speeds = [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10];\n  /** Current index in the predefined speed levels */\n  private _currentSpeedIndex = 4;\n  /** Interval in milliseconds for animation updates */\n  private readonly _interval = 250;\n\n  /**\n   * Initializes the component and starts the animation.\n   */\n  ngOnInit(): void {\n    this.animate();\n  }\n\n  /** Sets the current value (frame) of the animation.\n   * If the new value is different from the current value, it updates the value and emits the `valueChanged` event.\n   * @param value The new value (frame) to set.\n   */\n  setValue(value: number): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n      this.valueChanged.emit(value);\n    }\n  }\n\n  /**\n   * Steps to the first frame of the animation.\n   */\n  stepFirst(): void {\n    this.setValue(this.min());\n  }\n  \n  /**\n   * Steps backward in the animation.\n   */\n  stepBackward(): void {\n    this.setValue(Math.max(this.min(), this.value() - this.step()));\n  }\n  /**\n   * Toggles the play/pause state of the animation.\n   */\n  togglePlay(): void {\n    this.playing = !this.playing;\n    this.animate();\n  }\n  /**\n   * Steps forward in the animation.\n   */\n  stepForward(): void {\n    this.setValue(Math.min(this.max(), this.value() + this.step()));\n  }\n  /**\n   * Steps to the last frame of the animation.\n   */\n  stepLast(): void {\n    this.setValue(this.max());\n  }\n\n  /** Toggles the looping behavior of the animation.\n   * When enabled, the animation will restart from the beginning after reaching the end.\n   */\n  toggleLoop(): void {\n    this.loop = !this.loop;\n  }\n\n\n\n  //speedControl\n\n  /** Decreases the animation speed to the next lower predefined speed level. */\n  speedDown(): void {\n    this._currentSpeedIndex = Math.max(0, this._currentSpeedIndex - 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Increases the animation speed to the next higher predefined speed level. */\n  speedUp(): void {\n    this._currentSpeedIndex = Math.min(this._speeds.length - 1, this._currentSpeedIndex + 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Returns the maximum speed value from the predefined speed levels. */\n  maxSpeed(): number {\n    return this._speeds[this._speeds.length - 1];\n  }\n  /** Returns the minimum speed value from the predefined speed levels. */\n  minSpeed(): number {\n    return this._speeds[0];\n  }\n\n  /** Continuously updates the animation frame based on the current speed and play state.\n   * If the animation is playing and the current value is less than the maximum value, it increments the value.\n   * If the current value reaches the maximum and looping is enabled, it resets to the minimum value.\n   * The function uses a timeout to control the update frequency based on the speed setting.\n   */\n  animate(): void {\n    if(this.playing){\n      if(this.value() {\n        this.animate();\n      }, this._interval / this.speed);\n    }\n  }\n\n  /** Cleans up resources when the component is destroyed.\n   */\n  ngOnDestroy(): void{\n    clearTimeout(this._timeoutId);\n  }\n}\n\n    \n\n    \n        \n\n    \n        first_page\n    \n    \n    \n        skip_previous\n    \n    \n    \n        {{ playing ? 'pause' : 'play_arrow' }}\n    \n    \n    \n        skip_next\n    \n     \n        \n        last_page\n    \n\n\n    \n        speed\n    \n\n    \n        \n\n            \n                \n                    keyboard_double_arrow_left\n                \n            \n            \n                {{speed}}x\n            \n            = maxSpeed()\">\n                \n                    keyboard_double_arrow_right\n                \n            \n\n        \n    \n\n\n    \n        {{ loop ? 'repeat_on' : 'repeat' }}\n    \n\n    @if(showValue()){\n        \n            {{value()}}\n        \n    }\n    \n    \n\n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            first_page                    skip_previous                    {{ playing ? \\'pause\\' : \\'play_arrow\\' }}                    skip_next                         last_page                speed                                                                keyboard_double_arrow_left                                                        {{speed}}x                        = maxSpeed()\">                                    keyboard_double_arrow_right                                                    {{ loop ? \\'repeat_on\\' : \\'repeat\\' }}        @if(showValue()){                    {{value()}}            }                                '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                            MatButtonModule\n                            MatSliderModule\n                            MatToolbarModule\n                            MatSidenavModule\n                            MatCardModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThemeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Image Processing Course Support'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ThemeService } from './services/theme/theme.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n  ],    \n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Image Processing Course Support';\n\n  constructor(public themeService: ThemeService) {}\n}\n\n    \n\n    \n        \n  \n    menu\n  \n\n  \n    {{title}}\n  \n  \n\n  \n    help\n  \n\n  \n    {{themeService.getTheme()=='light'?'dark_mode':'light_mode'}}\n  \n\n\n\n\n\n  \n    \n\n      @if (sidenav.opened) {\n      \n        Home\n        Help -->\n        Bitmap Editor\n        Shape Editor #tmp\n        Binary Bitmap Editor #tmp -->\n        Histogram\n        Median Filters\n        Convolutional Filters\n        Morphological Operations\n        Hough Transform\n      \n      }\n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        {{title}}          help        {{themeService.getTheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode\\'}}              @if (sidenav.opened) {              Home        Help -->        Bitmap Editor        Shape Editor #tmp        Binary Bitmap Editor #tmp -->        Histogram        Median Filters        Convolutional Filters        Morphological Operations        Hough Transform            }              '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BinaryBitmapEditorComponent.html":{"url":"components/BinaryBitmapEditorComponent.html","title":"component - BinaryBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BinaryBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing binary bitmaps (black and white images).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-binary-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./binary-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./binary-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapComponentTick\n                            \n                            \n                                height\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bitmap_storage: BitmapStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of the BinaryBitmapEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The activated route to access route parameters.\n\n                                                        \n                                                \n                                                \n                                                        bitmap_storage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks if the bitmap can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                        \n                    \n\n            \n                \n                    The ID of the bitmap being edited, if loaded from storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapComponentTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Tick counter to trigger bitmap component updates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 9\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:50\n                        \n                    \n\n            \n                \n                    Height of the bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:43\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:48\n                        \n                    \n\n            \n                \n                    Width and height of the bitmap being edited.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { Point } from '../../static/point';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\n\n/** Component for editing binary bitmaps (black and white images). */\n@Component({\n  selector: 'app-binary-bitmap-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n],\n  templateUrl: './binary-bitmap-editor.component.html',\n  styleUrl: './binary-bitmap-editor.component.css'\n})\nexport class BinaryBitmapEditorComponent {\n  /** The interactive bitmap being edited. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Tick counter to trigger bitmap component updates. */\n  bitmapComponentTick: number = 0;\n  \n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 50;\n  /** If true, pixel values are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  \n  /** Width and height of the bitmap being edited. */\n  width: number = 16;\n  /** Height of the bitmap being edited. */\n  height: number = 9;\n\n  /** The ID of the bitmap being edited, if loaded from storage. */\n  private _id: string | null = null;\n\n  /** Creates an instance of the BinaryBitmapEditorComponent.\n   * @param route The activated route to access route parameters.\n   * @param bitmap_storage The service for loading and saving bitmaps.\n   * @param router The router for navigation.\n   */\n  constructor(private route: ActivatedRoute, private bitmap_storage: BitmapStorageService, private router: Router) {\n    this._id = this.route.snapshot.paramMap.get('id');\n    let bitmap = this.bitmap_storage.load(this._id);\n    if(bitmap) \n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    this.width = this.bitmap.width;\n    this.height = this.bitmap.height;\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Checks if the bitmap can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return this._id !== null;\n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current bitmap to storage and navigates back. */\n  save(): void {\n    if (this._id !== null) {\n      this.bitmap_storage.save(this._id, this.bitmap);\n      this.quit();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BinaryBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bitmap.html":{"url":"classes/Bitmap.html","title":"class - Bitmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bitmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/bitmap.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\nThe bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\nThe class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\nand retrieving the dimensions of the bitmap.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _height\n                            \n                            \n                                    Protected\n                                _matrix\n                            \n                            \n                                    Protected\n                                _width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cells\n                            \n                            \n                                get\n                            \n                            \n                                getBinary\n                            \n                            \n                                getCellIndex\n                            \n                            \n                                getIndexCell\n                            \n                            \n                                getWithPadding\n                            \n                            \n                                isOut\n                            \n                            \n                                length\n                            \n                            \n                                pixels\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/bitmap.ts:17\n                            \n                        \n\n                \n                    \n                            Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\nIf an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The width of the bitmap (number of columns). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The height of the bitmap (number of rows). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        oldMatrix\n                                                  \n                                                        \n                                                                        Bitmap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                An optional old Bitmap instance to copy values from.\n\n                                                        \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default pixel value to use for uninitialized pixels. Default is 0.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:15\n                        \n                    \n\n            \n                \n                    The height of the bitmap (number of rows).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _matrix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:17\n                        \n                    \n\n            \n                \n                    The 2D array representing the bitmap, where each element is a pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:13\n                        \n                    \n\n            \n                \n                    The width of the bitmap (number of columns).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cells\n                        \n                    \n                \n            \n            \n                \ncells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:120\n                        \n                    \n\n\n            \n                \n                        Gets all cells in the bitmap as an array of Point objects.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Point objects representing all cells in the bitmap.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number | undefined\n\n                        \n                            \n                                The pixel value at the specified cell, or undefined if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBinary\n                        \n                    \n                \n            \n            \n                \ngetBinary(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the binary value (0 or 1) at the specified cell.\nA value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the binary value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the pixel value is 0, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellIndex\n                        \n                    \n                \n            \n            \n                \ngetCellIndex(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:159\n                        \n                    \n\n\n            \n                \n                        Gets the linear index corresponding to the specified cell (Point).\nIf the cell is out of bounds, it returns 0.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell (Point) to convert to a linear index.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexCell\n                        \n                    \n                \n            \n            \n                \ngetIndexCell(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:147\n                        \n                    \n\n\n            \n                \n                        Gets the cell (Point) corresponding to the specified linear index.\nIf the index is out of bounds, it returns a Point(0, 0).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The linear index to convert to a cell (Point).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWithPadding\n                        \n                    \n                \n            \n            \n                \ngetWithPadding(cell: Point, padding: Padding, defaultValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\nIf the cell is out of bounds, the method applies the specified padding mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The padding mode to apply if the cell is out of bounds.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    255\n                                            \n\n                                            \n                                                    The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOut\n                        \n                    \n                \n            \n            \n                \nisOut(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:57\n                        \n                    \n\n\n            \n                \n                        Checks if the specified cell is out of the bounds of the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to check, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is out of bounds, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:166\n                        \n                    \n\n\n            \n                \n                        Gets the total number of pixels in the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total number of pixels in the bitmap (width * height).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixels\n                        \n                    \n                \n            \n            \n                \npixels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:130\n                        \n                    \n\n\n            \n                \n                        Gets all pixels in the bitmap as an array of objects containing the cell (Point) and its value.\n\n\n                        \n                            Returns :     literal type[]\n\n                        \n                            \n                                An array of objects, each containing a 'cell' property (Point) and a 'value' property (number).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(cell: Point, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets the pixel value at the specified cell.\nIf the cell is out of bounds, the method does nothing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to set the pixel value at, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to set at the specified cell.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:43\n                                \n                            \n                    \n                        \n                                Gets the width of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:49\n                                \n                            \n                    \n                        \n                                Gets the height of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { DragArea } from \"./drag-area\";\nimport { Padding } from \"./enums\";\nimport { Point } from \"./point\";\n\n\n/** * Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\n * The bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\n * The class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\n * and retrieving the dimensions of the bitmap.\n */   \nexport class Bitmap{\n  /** The width of the bitmap (number of columns). */\n  protected _width: number;\n  /** The height of the bitmap (number of rows). */\n  protected _height: number;\n  /** The 2D array representing the bitmap, where each element is a pixel value. */\n  protected _matrix: number[][];\n\n  /** Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * @param width The width of the bitmap (number of columns). Default is 10.\n   * @param height The height of the bitmap (number of rows). Default is 10.\n   * @param oldMatrix An optional old Bitmap instance to copy values from.\n   * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 0.\n   */\n  constructor(width: number = 10, height: number = 10, oldMatrix?: Bitmap, defaultValue: number = 0) {\n    this._width = width;\n    this._height = height;\n    this._matrix = Array.from({ length: height }, () => Array(width).fill(defaultValue));\n\n    oldMatrix?._matrix?.forEach((row, r) => {\n      row.forEach((value, c) => {\n        if (r = this._height || cell.col = this._width || !Number.isInteger(cell.row) || !Number.isInteger(cell.col);\n  }\n  /** Gets the pixel value at the specified cell.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @returns The pixel value at the specified cell, or undefined if the cell is out of bounds.\n   */\n  get(cell: Point): number | undefined {\n    if (this.isOut(cell)) return undefined;\n    return this._matrix[cell.row]?.[cell.col];\n  }\n  /** Gets the binary value (0 or 1) at the specified cell.\n   * A value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n   * @param cell The cell to get the binary value from, represented as a Point object with row and column properties.\n   * @returns True if the pixel value is 0, false otherwise.\n   */\n  getBinary(cell: Point): boolean {\n    return this._matrix[cell.row]?.[cell.col] === 0;\n  }\n  /** Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\n   * If the cell is out of bounds, the method applies the specified padding mode.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @param padding The padding mode to apply if the cell is out of bounds.\n   * @param defaultValue The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n   * @returns The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n   */\n  getWithPadding(cell: Point, padding: Padding, defaultValue: number = 255): number {\n    if (!this.isOut(cell))\n      return this.get(cell) ?? 0;\n\n    if (padding == Padding.Edge) {\n      let row = cell.row;\n      let col = cell.col;\n\n      if (row = this.height)\n        row = this.height - 1;\n\n      if (col = this.width)\n        col = this.width - 1;\n      return this.get(new Point(row, col)) ?? 0;\n    }\n    else if (padding == Padding.DefaultValue){\n      return defaultValue;\n    }\n    return 0;\n  }\n\n  /** Sets the pixel value at the specified cell.\n    * If the cell is out of bounds, the method does nothing.\n    * @param cell The cell to set the pixel value at, represented as a Point object with row and column properties.\n    * @param value The pixel value to set at the specified cell.\n  */\n  set(cell: Point, value: number): void {\n    if(this.isOut(cell)) return;\n    this._matrix[cell.row][cell.col] = value;\n  }\n  /** Gets all cells in the bitmap as an array of Point objects.\n   * @returns An array of Point objects representing all cells in the bitmap.\n   */\n  cells(): Point[]{\n    let values: Point[] = [];\n    for(let row=0;row {\n      row.forEach((value, c) => {\n        values.push({cell: new Point(r, c), value});\n      });\n    });\n    \n    return values;\n  }\n\n  /** Gets the cell (Point) corresponding to the specified linear index.\n   * If the index is out of bounds, it returns a Point(0, 0).\n   * @param index The linear index to convert to a cell (Point).\n   * @returns A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n   */\n  getIndexCell(index: number): Point {\n    if (index = this.length()) return new Point(0, 0);\n    const x = Math.trunc(index / this.width);\n    const y = index % this.width;\n    return new Point(x, y);\n  }\n  /** Gets the linear index corresponding to the specified cell (Point).\n   * If the cell is out of bounds, it returns 0.\n   * @param cell The cell (Point) to convert to a linear index.\n   * @returns The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n   */\n  getCellIndex(cell: Point): number {\n    if (this.isOut(cell)) return 0;\n    return cell.row * this.width + cell.col;\n  }\n  /** Gets the total number of pixels in the bitmap.\n   * @returns The total number of pixels in the bitmap (width * height).\n   */\n  length(): number {\n    return this.width * this.height;\n  }\n}\n\n\n\n/** * Represents an interactive bitmap that extends the Bitmap class with additional features for selection and dragging.\n * This class adds functionality for selecting and dragging cells within the bitmap, as well as highlighting a specific element.\n * It also provides methods for managing the selection state and calculating histograms based on the selected pixels.\n * @extends Bitmap\n */\nexport class InteractiveBitmap extends Bitmap {\n  /** The set of selected cells, represented as strings in the format \"row,col\". */\n  private _selected: Set;\n  /** The drag area for managing dragging operations within the bitmap. */\n  private _dragArea: DragArea;  \n  /** The currently highlighted element, or null if no element is highlighted. Used in morphological operations. */\n  highlightedElement: Point | null = null;\n\n  /** Gets the drag area for managing dragging operations within the bitmap. */\n  get dragArea(): DragArea {\n    return this._dragArea;\n  }\n  /** Sets the drag area for managing dragging operations within the bitmap. */\n  set dragArea(drag_area: DragArea) {\n    this._dragArea = drag_area;\n  }\n  /** Gets the currently selected cells as an array of Point objects.\n   * @returns An array of Point objects representing the selected cells.\n   */\n  get selected(): Point[] {\n    return Array.from(this._selected).map(pos => {\n      const [row, col] = pos.split(',').map(Number);\n      return new Point(row, col);\n    });\n  }\n\n  /** Creates a new InteractiveBitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * Initializes the selection set and drag area.\n    * @param width The width of the bitmap (number of columns).\n    * @param height The height of the bitmap (number of rows).\n    * @param oldMatrix An optional old Bitmap instance to copy values from.\n    * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 255 (white). \n  */\n  constructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number = 255) {\n    super(width, height, oldMatrix, defaultValue);\n    this._selected = new Set();\n    this._dragArea = new DragArea();\n  }\n\n  /** Checks if the specified cell is currently being dragged.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is being dragged, false otherwise.\n   */\n  isDragged(cell: Point): boolean {\n    return this._dragArea.dragging&&this._dragArea.includes(cell);\n  }\n  /** Checks if the specified cell is currently selected.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is selected, false otherwise.\n   */\n  isSelected(cell: Point): boolean {\n    if (this.isOut(cell)) \n      return false;\n    return this._selected.has(cell.toString());\n  }\n\n  /** Selects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to select, represented as a Point object with row and column properties.\n   */\n  select(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.add(cell.toString());\n  }\n  /** Unselects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to unselect, represented as a Point object with row and column properties.\n   */\n  unselect(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.delete(cell.toString());\n  }\n  /** Sets the selection state of the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to set the selection state for, represented as a Point object with row and column properties.\n   * @param value True to select the cell, false to unselect it.\n   */\n  setSelection(cell: Point, value: boolean): void {\n    if (value) \n      this.select(cell);\n    else \n      this.unselect(cell);\n  }\n  /** Clears the current selection, unselecting all selected cells. */\n  clearSelection(): void {\n    this._selected.clear();\n  }\n  /** Calculates the histogram of pixel values in the bitmap.\n   * The histogram is calculated based on the specified group size and whether to include only selected pixels.\n   * @param groupSize The size of each group in the histogram. Default is 1 (individual pixel values).\n   * @param selectedOnly If true, only selected pixels are included in the histogram.\n   * @returns An array representing the histogram of pixel values.\n   */\n  histogram(groupSize: number = 1, selectedOnly: boolean): number[] {\n    let histogram = Array(Math.ceil(256 / groupSize)).fill(0);\n\n    this.pixels().forEach(\n      pixel => {\n        if (!selectedOnly || (selectedOnly && this.isSelected(pixel.cell)))\n          if (!Number.isNaN(pixel.value))\n            histogram[Math.trunc(pixel.value / groupSize)]++;\n      }\n    );\n\n    return histogram;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BitmapRenderer.html":{"url":"classes/BitmapRenderer.html","title":"class - BitmapRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BitmapRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/render-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class for rendering bitmaps onto a canvas.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorScale\n                            \n                            \n                                grid\n                            \n                            \n                                gridColor\n                            \n                            \n                                headerColor\n                            \n                            \n                                headers\n                            \n                            \n                                numbers\n                            \n                            \n                                pixelSize\n                            \n                            \n                                selectionColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createDiagonalPattern\n                            \n                            \n                                drawGrid\n                            \n                            \n                                drawString\n                            \n                            \n                                getCursorCell\n                            \n                            \n                                    Private\n                                getOffsetX\n                            \n                            \n                                    Private\n                                getOffsetY\n                            \n                            \n                                isCursorOnCell\n                            \n                            \n                                isCursorOnColHeader\n                            \n                            \n                                isCursorOnRowHeader\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:18\n                        \n                    \n\n            \n                \n                    Color scale used for rendering the bitmap. Default is Grayscale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:12\n                        \n                    \n\n            \n                \n                    If true, the grid lines will be drawn. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#74777f'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:21\n                        \n                    \n\n            \n                \n                    Color used for drawing the grid lines. Default is '#74777f'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#c1cce5'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:23\n                        \n                    \n\n            \n                \n                    Color used for the header background. Default is '#c1cce5'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:16\n                        \n                    \n\n            \n                \n                    If true, row and column headers will be displayed. Default is false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:14\n                        \n                    \n\n            \n                \n                    If true, the numerical values of each cell will be displayed. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:9\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap when rendered on the canvas. Default is 50.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#222\"\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:25\n                        \n                    \n\n            \n                \n                    Color used for selection highlighting. Default is '#222'.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDiagonalPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiagonalPattern(size: number, lineWidth: number, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:153\n                        \n                    \n\n\n            \n                \n                        Creates a diagonal line pattern for selection highlighting.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    The size of the pattern canvas. Default is 20.\n\n                                            \n                                        \n                                        \n                                                lineWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    The width of the diagonal lines. Default is 2.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '#ccc'\n                                            \n\n                                            \n                                                    The color of the diagonal lines. Default is '#ccc'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                A canvas element containing the diagonal line pattern.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawGrid\n                        \n                    \n                \n            \n            \n                \ndrawGrid(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:125\n                        \n                    \n\n\n            \n                \n                        Draws the grid lines on the canvas for the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to draw the grid for.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color of the grid lines.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawString\n                        \n                    \n                \n            \n            \n                \ndrawString(ctx: CanvasRenderingContext2D, scale: number, text: string, x: number, y: number, color: string, stroke: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:111\n                        \n                    \n\n\n            \n                \n                        Draws a string on the canvas at the specified position with the given scale and color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The scale factor for the text size.\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text string to be drawn.\n\n                                            \n                                        \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The x-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The y-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The color of the text.\n\n                                            \n                                        \n                                        \n                                                stroke\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    If true, the text will be stroked for better visibility. Default is false.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCursorCell\n                        \n                    \n                \n            \n            \n                \ngetCursorCell(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:52\n                        \n                    \n\n\n            \n                \n                        Gets the cell coordinates (row and column) under the cursor.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing the row and column indices of the cell under the cursor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetX\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetX()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets the X offset (row headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The X offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetY\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetY()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:99\n                        \n                    \n\n\n            \n                \n                        Gets the Y offset (column headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The Y offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnCell\n                        \n                    \n                \n            \n            \n                \nisCursorOnCell(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:36\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over a specific cell in the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over a cell in the bitmap, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnColHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnColHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the column header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the column header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnRowHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnRowHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:80\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the row header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the row header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:181\n                        \n                    \n\n\n            \n                \n                        Renders the bitmap onto the provided canvas context with the specified scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to be rendered.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Bitmap, InteractiveBitmap } from \"./bitmap\";\nimport { getContrastColor, scaleColor } from \"./color-utils\";\nimport { ColorScale } from \"./enums\";\nimport { Point } from \"./point\";\n\n/** Utility class for rendering bitmaps onto a canvas. */\nexport class BitmapRenderer {\n    /** Size of each pixel in the bitmap when rendered on the canvas. Default is 50. */\n    pixelSize: number = 50;\n    \n    /** If true, the grid lines will be drawn. Default is true. */\n    grid: boolean = true;\n    /** If true, the numerical values of each cell will be displayed. Default is true. */\n    numbers: boolean = true;\n    /** If true, row and column headers will be displayed. Default is false. */\n    headers: boolean = false;\n    /** Color scale used for rendering the bitmap. Default is Grayscale. */\n    colorScale: ColorScale = ColorScale.Grayscale;\n    \n    /** Color used for drawing the grid lines. Default is '#74777f'. */\n    gridColor: string = '#74777f';\n    /** Color used for the header background. Default is '#c1cce5'. */\n    headerColor: string = '#c1cce5';\n    /** Color used for selection highlighting. Default is '#222'. */\n    selectionColor: string = \"#222\";\n\n\n    //cursor\n\n    /** Checks if the cursor is over a specific cell in the bitmap.\n     * @param x The x-coordinate of the cursor.\n     * @param y The y-coordinate of the cursor.\n     * @param bitmap The bitmap to check against.\n     * @returns True if the cursor is over a cell in the bitmap, false otherwise.\n     */\n    isCursorOnCell(x: number, y: number, bitmap: Bitmap): boolean {\n       let cell = this.getCursorCell(x, y);\n       return (\n           x >= this.getOffsetX() &&\n           y >= this.getOffsetY() &&\n           cell.row >= 0 &&\n           cell.row = 0 &&\n           cell.col = offsetX && x = offsetY && y  bitmap.isDragged(cell);\n                const isSel = (cell: Point) => bitmap.isSelected(cell) || bitmap.isDragged(cell);\n                if(!isSel(cell)) continue;\n\n\n                \n                ctx.fillStyle = pattern;\n                ctx.strokeStyle = selectionColor;\n\n                // const value = bitmap.get(row, col);\n                // const fillColor = scaleColor(value, colorScale); \n                // if(isDark(fillColor)){\n                // }\n                // else{\n                //     ctx.fillStyle = darkPattern;\n                //     ctx.strokeStyle = getContrastColor(selectionColor);\n                // }\n                if(isSel(cell) && (bitmap.dragArea.button != 2 || !isDragged(cell))){\n                    const width = Math.round(((col+1) * pixelSize + offsetX) * scale)-Math.round((col * pixelSize + offsetX) * scale);\n                    const height = Math.round(((row+1) * pixelSize + offsetY) * scale)-Math.round((row * pixelSize + offsetY) * scale);\n                    ctx.fillRect(Math.round((col * pixelSize + offsetX) * scale), Math.round((row * pixelSize + offsetY) * scale), width, height);\n                }\n\n\n                //above\n                if((isSel(cell)&&!isSel(cell.up())) || (isDragged(cell)&&!isDragged(cell.up()))) {\n                    let slw = bitmap.isOut(cell.up()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(((col * pixelSize + offsetX) * scale)+0.5,               Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.lineTo(((col * pixelSize + offsetX + pixelSize) * scale)-0.5,   Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //bottom\n                if((isSel(cell)&&!isSel(cell.down())) || (isDragged(cell)&&!isDragged(cell.down()))) {\n                    let slw = bitmap.isOut(cell.down()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX) * scale)+0.5,             Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + pixelSize + offsetX) * scale)-0.5, Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.stroke();\n                }\n                //left\n                if((isSel(cell)&&!isSel(cell.left())) || (isDragged(cell)&&!isDragged(cell.left()))) {\n                    let slw = bitmap.isOut(cell.left()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + pixelSize + offsetY) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //right\n                if((isSel(cell)&&!isSel(cell.right())) || (isDragged(cell)&&!isDragged(cell.right()))) {\n                    let slw = bitmap.isOut(cell.right()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY + pixelSize) * scale)-0.5);\n                    ctx.stroke();\n                }\n\n            }\n        }\n       \n        \n\n        //numbers\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.lineJoin = 'round';\n        if (numbers) {\n            for (let row = 0; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BitmapStorageService.html":{"url":"injectables/BitmapStorageService.html","title":"injectable - BitmapStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BitmapStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bitmap-storage/bitmap-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle storage and retrieval of bitmaps using local storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                has\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if a bitmap with the given ID exists in storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the bitmap exists, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Loads a bitmap from local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier of the bitmap to load.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap | null\n\n                        \n                            \n                                The loaded bitmap, or null if not found or invalid.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(id: string, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Saves a bitmap to local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier for the bitmap.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bitmap-storage-'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:11\n                        \n                    \n\n            \n                \n                    Key prefix for storing bitmaps in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\n\n\n/** Service to handle storage and retrieval of bitmaps using local storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BitmapStorageService {\n  /** Key prefix for storing bitmaps in local storage. */\n  private _storageKey: string = 'bitmap-storage-';\n\n  /** Saves a bitmap to local storage.\n   * @param id The identifier for the bitmap.\n   * @param bitmap The bitmap to save.\n   * @see Bitmap\n   */\n  save(id: string, bitmap: Bitmap) {\n    localStorage.setItem(this._storageKey + id, JSON.stringify(bitmap));\n  }\n\n  /** Checks if a bitmap with the given ID exists in storage.\n   * @param id The identifier to check.\n   * @returns True if the bitmap exists, false otherwise.\n   */\n  has(id: string): boolean {\n    return this.load(this._storageKey + id) !== null;\n  }\n\n  /** Loads a bitmap from local storage.\n   * @param id The identifier of the bitmap to load.\n   * @returns The loaded bitmap, or null if not found or invalid.\n   * @see Bitmap\n   */\n  load(id: string | null): Bitmap | null {\n    if (!id) return null;\n    const raw = localStorage.getItem(this._storageKey + id);\n    if (!raw) return null;\n\n    try {\n      const obj = JSON.parse(raw) as any;\n      if (!obj || typeof obj !== \"object\") return null;\n      if (typeof obj._width !== \"number\" || typeof obj._height !== \"number\" || obj._matrix === undefined || obj._matrix === null) return null;\n      const inst = Object.create(Bitmap.prototype) as Bitmap;\n      return Object.assign(inst, obj);\n    } catch {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConvolutionalFilterAnimationComponent.html":{"url":"components/ConvolutionalFilterAnimationComponent.html","title":"component - ConvolutionalFilterAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ConvolutionalFilterAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate the application of a convolutional filter on a bitmap image.\nIt allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-convolutional-filter-animation\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSliderModule\n                            RouterModule\n                            MatFormFieldModule\n                            MatMenuModule\n                                BitmapComponent\n                            FormsModule\n                                AnimationControllerComponent\n                            MatCheckboxModule\n                            MatSelectModule\n                            MathjaxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./convolutional-filter-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./convolutional-filter-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                filteredBitmap\n                            \n                            \n                                kernel\n                            \n                            \n                                padding\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                resultKernel\n                            \n                            \n                                selectedColorScale\n                            \n                            \n                                showBase\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                showNumberValues\n                            \n                            \n                                sourceKernel\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                getEquation\n                            \n                            \n                                    Private\n                                getResultKernel\n                            \n                            \n                                    Private\n                                getSourceKernel\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                openDialog\n                            \n                            \n                                refresh\n                            \n                            \n                                    Private\n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                            \n                        \n\n                \n                    \n                            Constructor to initialize the component with necessary services and load initial data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage dialog interactions.\n\n                                                        \n                                                \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to load and save bitmaps in storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFilter(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Applies the convolutional filter to the source bitmap and stores the result in the destination bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the filtered result is stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the convolutional filter is applied.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEquation\n                        \n                    \n                \n            \n            \n                \ngetEquation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Generates a LaTeX representation of the convolution operation for display.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getResultKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResultKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Computes the result kernel by multiplying the convolutional kernel with the source kernel.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the weighted values used to compute the filtered pixel value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Retrieves the kernel of pixel values centered around the current animation index.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the pixel values in the neighborhood.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to jump to a specific pixel in the animation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Opens a dialog to edit the convolutional kernel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValues(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Sets pixel values from the source bitmap to the destination bitmap up to a specified length.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to set.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the pixel values are set.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap from which the pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the convolutional filter is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"convolutional-filter\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:59\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:51\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the convolutional filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    The convolutional kernel used for filtering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Padding\n\n                    \n                \n                \n                    \n                        Default value : Padding.Edge\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Padding strategy used when accessing pixels outside the bitmap boundaries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:53\n                        \n                    \n\n            \n                \n                    The result bitmap after the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    The kernel representing the weighted values used to compute the filtered pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedColorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:83\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:81\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result for comparison.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:75\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:77\n                        \n                    \n\n            \n                \n                    If true, headers (row/column indices) are displayed around the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNumberValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:79\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    The kernel representing the current neighborhood of pixels being processed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:57\n                        \n                    \n\n            \n                \n                    Used to trigger re-rendering of the bitmap component when the bitmap changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KernelDialogComponent } from '../dialogs/kernel-dialog/kernel-dialog.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Kernel } from '../../static/kernel';\nimport { ColorScale, OutOfRangeHandling, Padding, QuantizationMode } from '../../static/enums';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Point } from '../../static/point';\nimport { MatrixDisplayComponent } from \"../matrix-display/matrix-display.component\";\nimport { MathjaxModule } from 'mathjax-angular';\nimport { MatSelectModule } from '@angular/material/select';\n\n/** Component to visualize and animate the application of a convolutional filter on a bitmap image.\n * It allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n */\n@Component({\n  selector: 'app-convolutional-filter-animation',\n  imports: [\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSliderModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    BitmapComponent,\n    FormsModule,\n    AnimationControllerComponent,\n    MatCheckboxModule,\n    MatSelectModule,\n    MathjaxModule,\n],\n  templateUrl: './convolutional-filter-animation.component.html',\n  styleUrl: './convolutional-filter-animation.component.css'\n})\nexport class ConvolutionalFilterAnimationComponent {\n  /** The original bitmap image to which the convolutional filter is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the convolutional filter. */\n  filteredBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the animation. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n\n\n  /** Used to trigger re-rendering of the bitmap component when the bitmap changes. */\n  tick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = \"convolutional-filter\";\n\n  /** The convolutional kernel used for filtering. */\n  kernel: Kernel = new Kernel(3);\n  /** The kernel representing the current neighborhood of pixels being processed. */\n  sourceKernel: Kernel = new Kernel(3);\n  /** The kernel representing the weighted values used to compute the filtered pixel value. */\n  resultKernel: Kernel = new Kernel(3);\n  /** Padding strategy used when accessing pixels outside the bitmap boundaries. */\n  padding: Padding = Padding.Edge;\n\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers (row/column indices) are displayed around the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, pixel values are displayed on the bitmap. */\n  showNumberValues: boolean = true;\n  /** If true, the original bitmap is shown under the result for comparison. */\n  showBase: boolean = false;\n  /** Color scale used for displaying the bitmap. */\n  selectedColorScale: ColorScale = ColorScale.Grayscale;\n  \n  \n  //controls\n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n\n  /** Constructor to initialize the component with necessary services and load initial data. \n   * @param dialog Service to manage dialog interactions.\n   * @param bitmapStorage Service to load and save bitmaps in storage.\n  */\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n    \n    this.kernel.load(\"kernel\");\n    this.refresh();\n  }\n\n  /** Opens a dialog to edit the convolutional kernel. */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(KernelDialogComponent, {\n      width: '650px',\n      disableClose: true,\n      // hasBackdrop: false,\n      data: this.kernel.clone()\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.kernel = result;\n        this.sourceKernel = new Kernel(result.size);\n        this.resultKernel = new Kernel(result.size);\n        this.kernel.save(\"kernel\");\n        this.refresh();\n      }\n    });\n  }\n  \n  /** Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation. */\n  refresh(): void {\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.filteredBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.applyFilter(this.bitmap.length(), this.filteredBitmap, this.bitmap);\n    this.animate();\n  }\n\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    const index = this.animationIndex;\n    this.bitmap.clearSelection();\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.setValues(index+1, this.resultBitmap, this.filteredBitmap);\n    \n\n    this.sourceKernel = this.getSourceKernel()\n    this.resultKernel = this.getResultKernel();\n\n    const size = this.kernel.size;\n    const r = Math.trunc((size - 1) / 2);\n    const cell = this.bitmap.getIndexCell(index);\n\n    if (index \n    \n\n    \n        \n\n    \n        \n            edit\n            Edit\n        \n        \n            grid_on\n            Kernel\n        \n        \n        \n            Padding\n            \n                Zero\n                Edge\n            \n        \n        \n        Pixel Size\n        \n            \n        \n        \n        \n            Numbers\n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Base\n        \n        \n        \n        \n    \n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"\n                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"\n                    (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"\n                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n    \n\n    \n        \n             -->\n            \n                asterisk\n             -->\n\n             -->\n            \n            \n            \n                equal\n             -->\n\n             -->\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        edit            Edit                            grid_on            Kernel                                    Padding                            Zero                Edge                                    Pixel Size                                                        Numbers                            Grid                            Headers                            Base                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"                    (cellClicked)=\"onCellClicked($event)\">                                                                        =40\" [showGrid]=\"showGrid\"                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">                                                                 -->                            asterisk             -->             -->                                                    equal             -->             -->            '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConvolutionalFilterAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragArea.html":{"url":"classes/DragArea.html","title":"class - DragArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/drag-area.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a draggable area defined by two points (start and end).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                ctrlKey\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragging\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAreaCells\n                            \n                            \n                                includes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:10\n                        \n                    \n\n            \n                \n                    Mouse button used for dragging (0: left, 1: middle, 2: right).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ctrlKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:8\n                        \n                    \n\n            \n                \n                    Indicates whether the Ctrl key is pressed during the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:14\n                        \n                    \n\n            \n                \n                    Ending point of the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:6\n                        \n                    \n\n            \n                \n                    Indicates whether the area is currently being dragged.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:12\n                        \n                    \n\n            \n                \n                    Starting point of the drag operation.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAreaCells\n                        \n                    \n                \n            \n            \n                \ngetAreaCells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets all cells within the dragged area.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Points representing all cells within the dragged area.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includes\n                        \n                    \n                \n            \n            \n                \nincludes(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:20\n                        \n                    \n\n\n            \n                \n                        Checks if a given cell is within the dragged area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is within the dragged area, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from \"./point\";\n\n/** Class representing a draggable area defined by two points (start and end). */\nexport class DragArea{\n    /** Indicates whether the area is currently being dragged. */\n    dragging: boolean = false;\n    /** Indicates whether the Ctrl key is pressed during the drag operation. */\n    ctrlKey: boolean = false;\n    /** Mouse button used for dragging (0: left, 1: middle, 2: right). */\n    button: number = 0;\n    /** Starting point of the drag operation. */\n    dragStart: Point = new Point(0, 0);\n    /** Ending point of the drag operation. */\n    dragEnd: Point = new Point(0, 0);\n\n    /** Checks if a given cell is within the dragged area.\n     * @param cell The Point to check.\n     * @returns True if the cell is within the dragged area, false otherwise.\n     */\n    includes(cell: Point): boolean {\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n        return cell.row = select_row_start && cell.col = select_col_start;\n    }\n\n    /** Gets all cells within the dragged area.\n     * @returns An array of Points representing all cells within the dragged area.\n     */\n    getAreaCells(): Point[] {\n        const cells: Point[] = [];\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n\n        for(let row = select_row_start; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n            \n                styleUrl\n                ./help.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-help',\n  imports: [\n    MatCardModule\n  ],\n  templateUrl: './help.component.html',\n  styleUrl: './help.component.css'\n})\nexport class HelpComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history/history.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage applied expression history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                history\n                            \n                            \n                                    Private\n                                historyLimit\n                            \n                            \n                                    Private\n                                storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToHistory\n                            \n                            \n                                clearHistory\n                            \n                            \n                                getHistory\n                            \n                            \n                                getHistoryReversed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToHistory\n                        \n                    \n                \n            \n            \n                \naddToHistory(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Adds an action to the history, ensuring no duplicates and respecting the history limit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The action (expression) to add to the history.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHistory\n                        \n                    \n                \n            \n            \n                \nclearHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Clears the history both in memory and in local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves the history.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The history array.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistoryReversed\n                        \n                    \n                \n            \n            \n                \ngetHistoryReversed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the history in reverse order (most recent first).\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The reversed history array.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:9\n                        \n                    \n\n            \n                \n                    List of applied expressions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        historyLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:11\n                        \n                    \n\n            \n                \n                    Maximum number of history entries to keep.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'history'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:13\n                        \n                    \n\n            \n                \n                    Key for storing the history in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Service to manage applied expression history. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  /** List of applied expressions. */\n  private history: string[] = [];\n  /** Maximum number of history entries to keep. */\n  private historyLimit: number = 25;\n  /** Key for storing the history in local storage. */\n  private storageKey: string = 'history';\n\n\n  /** Adds an action to the history, ensuring no duplicates and respecting the history limit.\n   * @param action The action (expression) to add to the history.\n   */\n  addToHistory(action: string): void {\n    if(this.history.includes(action)) \n      this.history = this.history.filter(item => item !== action);\n    \n    this.history.push(action);\n    if (this.history.length > this.historyLimit) {\n      this.history.shift();\n    }\n    localStorage.setItem(this.storageKey, JSON.stringify(this.history));\n  }\n\n  /** Retrieves the history in reverse order (most recent first).\n   * @returns The reversed history array.\n   */\n  getHistoryReversed(): string[] {\n    return this.getHistory().slice().reverse();\n  }\n\n  /** Retrieves the history.\n   * @returns The history array.\n   */\n  getHistory(): string[] {\n    const history = localStorage.getItem(this.storageKey);\n    if (history) {\n      this.history = JSON.parse(history);\n    }\n    return this.history;\n  }\n\n  /** Clears the history both in memory and in local storage. */\n  clearHistory(): void {\n    this.history = [];\n    localStorage.removeItem(this.storageKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatDividerModule\n                            MatIconModule\n                            MatListModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  imports: [\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n        Bitmap Editor\n        open_in_new\n    \n\n    \n        \n        Bitmap element controls\n    \n\n    \n        \n            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:\n        \n        \n            \n                Left-click on a cell: Selects the clicked cell.\n            \n            \n                Right-click on a selected cell: Deselects the clicked cell.\n            \n            \n                Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.\n            \n            \n                Click on a column header: Selects or deselects the whole column.\n            \n            \n                Click on a row header: Selects or deselects the whole row.\n            \n            \n                Ctrl + A: Selects all cells in the editor.\n            \n            \n                Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.\n            \n            \n                Ctrl + Z: Undoes the last action.\n            \n            \n                Ctrl + Y: Redoes the last undone action.\n            \n        \n        \n    \n\n\n    \n        Expression\n    \n    \n        \n            The editor includes support for mathematical expressions using the expr-eval library, enabling\n            advanced manipulation of pixel values.\n            You can write formulas to apply color transformations, perform calculations for each pixel, or generate\n            procedural effects.\n        \n            \n        \n            Each pixel’s position can be accessed through the variables x (column index) and y (row index).\n            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,\n            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.\n                \n        \n        \n            Expressions can use these variables and functions together with built-in math functions such as\n            sin(), cos(), max(), and random()\n            to create dynamic and complex image modifications.\n        \n        \n    \n\n    \n        Expression Examples\n    \n\n    \n        \n            \n                \n                    255\n                \n            \n            \n                \n                    b(x, y)*1.1\n                \n            \n            \n                \n                    b(y, min(WIDTH, HEIGHT)-1-x)\n                \n            \n            \n                \n                    x/WIDTH*255\n                \n            \n            \n                \n                    simplex(x, y, RANDOM) * 128 + 128\n                \n            \n        \n        \n    \n\n    \n    \n        Expression Syntax\n    \n\n    \n        \n            \n                Variables\n                \n                    x: The column index of the pixel being processed (0 to WIDTH-1).\n                    y: The row index of the pixel being processed (0 to HEIGHT-1).\n                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).\n                \n            \n            \n                Operators\n            \n            \n                Unary Operators\n            \n            \n                Predefined Functions\n                \n                    b(x, y): Returns the value of the pixel at (x, y).\n                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.\n                \n            \n            \n                Constants\n                \n                    WIDTH: The width of the bitmap.\n                    HEIGHT: The height of the bitmap.\n                    RANDOM: Random value between 0 and 255.\n\n                \n            \n        \n        \n    \n\n    \n    \n    \n        Binary Bitmap Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n        \n    \n\n    \n\n    \n        Structuring Element Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n            MMB: Sets the origin of the structuring element\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitmap Editor        open_in_new                        Bitmap element controls                            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:                                            Left-click on a cell: Selects the clicked cell.                                        Right-click on a selected cell: Deselects the clicked cell.                                        Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.                                        Click on a column header: Selects or deselects the whole column.                                        Click on a row header: Selects or deselects the whole row.                                        Ctrl + A: Selects all cells in the editor.                                        Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.                                        Ctrl + Z: Undoes the last action.                                        Ctrl + Y: Redoes the last undone action.                                            Expression                            The editor includes support for mathematical expressions using the expr-eval library, enabling            advanced manipulation of pixel values.            You can write formulas to apply color transformations, perform calculations for each pixel, or generate            procedural effects.                                        Each pixel’s position can be accessed through the variables x (column index) and y (row index).            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.                                            Expressions can use these variables and functions together with built-in math functions such as            sin(), cos(), max(), and random()            to create dynamic and complex image modifications.                                Expression Examples                                                                255                                                                            b(x, y)*1.1                                                                            b(y, min(WIDTH, HEIGHT)-1-x)                                                                            x/WIDTH*255                                                                            simplex(x, y, RANDOM) * 128 + 128                                                                Expression Syntax                                            Variables                                    x: The column index of the pixel being processed (0 to WIDTH-1).                    y: The row index of the pixel being processed (0 to HEIGHT-1).                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).                                                        Operators                                        Unary Operators                                        Predefined Functions                                    b(x, y): Returns the value of the pixel at (x, y).                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.                                                        Constants                                    WIDTH: The width of the bitmap.                    HEIGHT: The height of the bitmap.                    RANDOM: Random value between 0 and 255.                                                                    Binary Bitmap Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel                            Structuring Element Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel            MMB: Sets the origin of the structuring element            '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoughTransformAnimationComponent.html":{"url":"components/HoughTransformAnimationComponent.html","title":"component - HoughTransformAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HoughTransformAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hough-transform-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                            MatTabsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hough-transform-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hough-transform-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Private\n                                    Optional\n                                chart\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                limit\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                tabIndex\n                            \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                getCanvasHeight\n                            \n                            \n                                getCanvasWidth\n                            \n                            \n                                linePoint\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasHeight\n                        \n                    \n                \n            \n            \n                \ngetCanvasHeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:257\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasWidth\n                        \n                    \n                \n            \n            \n                \ngetCanvasWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:260\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linePoint\n                        \n                    \n                \n            \n            \n                \nlinePoint(x: number, rho: number, thetaRad: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rho\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                thetaRad\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:280\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:184\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Line[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hough-transform'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  transform(bitmap: Bitmap): Line[] {\n    const thetaStep = 15;\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          // if(min[rIdx][tIdx].col>p.col)\n          //   min[rIdx][tIdx].col = p.col;\n          // if(max[rIdx][tIdx].col= threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n\n        \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n\n        \n        \n        \n            Threshold\n            \n        \n        \n        \n        \n        \n            Limit\n            \n        \n        \n        \n        \n        \n        \n    \n    \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n         -->\n            \n        \n                \n             \n                \n                \n                Panel 1\n                \n\n                Panel 2\n            \n         -->\n\n            \n                \n\n\n                        \n                            \n                                =40?'30px':'0'\"\n                                    [style.left]=\"showHeaders&&pixelSize>=40?'30px':'0'\"\n                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">\n                \n                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"\n                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"\n                                    (cellClicked)=\"onCellClicked($event)\">\n                \n                                \n                            \n                        \n\n\n\n\n            \n         -->\n\n    \n\n\n    \n     -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                                        Pixel Size                                                        Grid                            Headers                                            Threshold                                                                Limit                                                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                             -->                                                                                                 Panel 1                                Panel 2                     -->                                                                                                                =40?\\'30px\\':\\'0\\'\"                                    [style.left]=\"showHeaders&&pixelSize>=40?\\'30px\\':\\'0\\'\"                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">                                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"                                    (cellClicked)=\"onCellClicked($event)\">                                                                                                                         -->             -->'\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HoughTransformAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Kernel.html":{"url":"classes/Kernel.html","title":"class - Kernel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Kernel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/kernel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _divider\n                            \n                            \n                                    Private\n                                _kernel\n                            \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                clone\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                            \n                                toLatex\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                                \n                                    kernel\n                                \n                                \n                                    divider\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: number, kernel?: number[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/static/kernel.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kernel\n                                                  \n                                                        \n                                                                    number[][]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _divider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantization\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outOfRange\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Kernel\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLatex\n                        \n                    \n                \n            \n            \n                \ntoLatex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     number[]\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n\n                \n                    \n                        getkernel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        divider\n                    \n                \n\n                \n                    \n                        getdivider()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:13\n                                \n                            \n\n                \n                    \n                        setdivider(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Bitmap } from \"./bitmap\";\nimport { OutOfRangeHandling, Padding, QuantizationMode } from \"./enums\";\nimport { outOfRangeHandle, quantizationHandle } from \"./expression-utils\";\nimport { Point } from \"./point\";\n\nexport class Kernel {\n    private _divider: number = 1;\n    private _kernel: number[][] = [];\n    private _size: number = 3;\n    get size() {return this._size} \n    get kernel() {return this._kernel}\n    set divider(value: number) { this._divider = Math.round(value == 0 ? 1 : value); }\n    get divider() { return this._divider; }\n\n    constructor(size: number, kernel?: number[][]) {\n        this._size = size;\n        this._kernel = kernel || Array.from({ length: size }, () =>\n            Array.from({ length: size }, () => 0)\n        );\n    }\n\n    apply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding): number {\n        const r = Math.trunc((this._size - 1) / 2);\n        let sum = 0;\n        for (let oy = -r; oy  [...row]);\n        clone._divider = this._divider;\n        return clone;\n    }\n\n    toLatex(): string {\n        const transposed = this._kernel[0].map((_, colIndex) =>\n            this._kernel.map(row => row[colIndex])\n        );\n        const rows = transposed.map(row => row.join(' & '));\n        const body = rows.join(' \\\\\\\\ \\n');\n        return `\\\\begin{bmatrix}\n        ${body}\n        \\\\end{bmatrix}`;\n    }\n\n\n    save(storageKey: string=\"kernel\"): void {\n        localStorage.setItem(storageKey, JSON.stringify(this));\n    }\n\n    load(storageKey: string=\"kernel\"): void {\n        const raw = localStorage.getItem(storageKey);\n        if (!raw) return;\n        try {\n            const obj = JSON.parse(raw) as any;\n            if (!obj || typeof obj !== 'object') return;\n            const inst = Object.create(Kernel.prototype) as Kernel;\n            let kernel = Object.assign(inst, obj);\n            if (kernel) {\n                if(kernel.kernel)\n                    this._kernel = kernel.kernel;\n                if(kernel.divider)\n                    this._divider = kernel.divider;\n            }\n        } catch { }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KernelDialogComponent.html":{"url":"components/KernelDialogComponent.html","title":"component - KernelDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  KernelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-kernel-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatSliderModule\n                            MatCardModule\n                            MatButtonModule\n                            MatButtonToggleModule\n                            MatIconModule\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./kernel-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./kernel-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                kernel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: Kernel)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Kernel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:31\n                                \n                            \n\n                \n                    \n                        setsize(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { Kernel } from '../../../static/kernel';\n\n@Component({\n  selector: 'app-kernel-dialog',\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatDialogModule\n],\n  templateUrl: './kernel-dialog.component.html',\n  styleUrl: './kernel-dialog.component.css'\n})\nexport class KernelDialogComponent {\n  kernel: Kernel;\n  get size(): number {\n    return this.kernel.size;\n  }\n  set size(value: number) {\n    this.kernel = new Kernel(value);\n  }\n\n  \n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: Kernel) {\n    this.kernel = data;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(this.kernel);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                grid_on\n            \n            Enter Kernel Values\n        \n\n         -->\n            \n                \n                    3x3 Kernel\n                    5x5 Kernel\n                    7x7 Kernel\n                \n            \n            \n           \n         -->\n\n        \n            @for (row of kernel.kernel; track $index; let i=$index) {\n            \n                @for (value of row; track $index; let j=$index) {\n                 -->\n                \n                 -->\n                }\n            \n            }\n        \n\n    \n\n\n\n    \n        Divider\n        \n    \n    \n    \n        cancel\n        Cancel\n    \n    \n        save\n        OK\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        grid_on                        Enter Kernel Values                 -->                                                3x3 Kernel                    5x5 Kernel                    7x7 Kernel                                                            -->                    @for (row of kernel.kernel; track $index; let i=$index) {                            @for (value of row; track $index; let j=$index) {                 -->                                 -->                }                        }                        Divider                            cancel        Cancel                save        OK    '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'KernelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a line in polar coordinates along with its voting information and endpoints.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                rho\n                            \n                            \n                                    Public\n                                theta\n                            \n                            \n                                    Public\n                                votes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rho: number, theta: number, votes: number, min: Point, max: Point)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:289\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rho\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theta\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        votes\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rho\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        theta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        votes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:290\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  transform(bitmap: Bitmap): Line[] {\n    const thetaStep = 15;\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          // if(min[rIdx][tIdx].col>p.col)\n          //   min[rIdx][tIdx].col = p.col;\n          // if(max[rIdx][tIdx].col= threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatrixDisplayComponent.html":{"url":"components/MatrixDisplayComponent.html","title":"component - MatrixDisplayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MatrixDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matrix-display/matrix-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matrix-display\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./matrix-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./matrix-display.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enumerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                kernel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/matrix-display/matrix-display.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enumerator\n                        \n                    \n                \n            \n            \n                \nenumerator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/matrix-display/matrix-display.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { Kernel } from '../../static/kernel';\n\n@Component({\n  selector: 'app-matrix-display',\n  imports: [],\n  templateUrl: './matrix-display.component.html',\n  styleUrl: './matrix-display.component.css'\n})\nexport class MatrixDisplayComponent {\n  kernel = input.required();\n\n  enumerator(){\n    return Array.from({ length: this.kernel().size }, (_, i) => i + 1);\n  }\n}\n\n    \n\n    \n        \n    @for (row of enumerator(); track $index;) {\n\n    \n        @for (col of enumerator(); track $index) {\n        \n            {{kernel().kernel[row-1][col-1]}}\n        \n        }\n    \n\n    }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (row of enumerator(); track $index;) {            @for (col of enumerator(); track $index) {                    {{kernel().kernel[row-1][col-1]}}                }        }'\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatrixDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorphologicalOperationsAnimationComponent.html":{"url":"components/MorphologicalOperationsAnimationComponent.html","title":"component - MorphologicalOperationsAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MorphologicalOperationsAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-morphological-operations-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./morphological-operations-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./morphological-operations-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                appliedBitmap\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                operation\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showBase\n                            \n                            \n                                showDifference\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                apply\n                            \n                            \n                                commit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                            \n                        \n\n                \n                    \n                            Creates an instance of the MorphologicalOperationsAnimationComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(apply: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Applies or reverts the morphological operation on the original bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apply\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    If true, applies the operation; if false, reverts to the original bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commit\n                        \n                    \n                \n            \n            \n                \ncommit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:196\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to start the animation from the clicked pixel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Updates the applied and result bitmaps based on the current operation and structuring element.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Sets pixel values in the destination bitmap based on the selected morphological operation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap where the results are stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap from which pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:71\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appliedBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:43\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the morphological operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:41\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the morphological operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'morphological-operations'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:47\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        operation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MorphologicalOperations\n\n                    \n                \n                \n                    \n                        Default value : MorphologicalOperations.Erosion\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:54\n                        \n                    \n\n            \n                \n                    The morphological operation to perform.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:58\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:45\n                        \n                    \n\n            \n                \n                    The result bitmap after the operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Color used to highlight selected pixels.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDifference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    If true, the difference is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:60\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    If true, headers are displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:52\n                        \n                    \n\n            \n                \n                    The structuring element used for the morphological operation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { StructuringElement } from '../../static/structuringElement';\nimport { ColorScale, MorphologicalOperations } from '../../static/enums';\nimport { getVar } from '../../static/style-utils';\n\n/** Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image. */\n@Component({\n  selector: 'app-morphological-operations-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n],\n  templateUrl: './morphological-operations-animation.component.html',\n  styleUrl: './morphological-operations-animation.component.css'\n})\nexport class MorphologicalOperationsAnimationComponent {\n  /** The original bitmap image to which the morphological operation is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the morphological operation. */\n  appliedBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the operation is applied. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Used to trigger bitmap component refresh. */\n  bitmapTick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = 'morphological-operations';\n\n  /** The structuring element used for the morphological operation. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The morphological operation to perform. */\n  operation: MorphologicalOperations = MorphologicalOperations.Erosion;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers are displayed. */\n  showHeaders: boolean = true;\n  /** If true, the difference is displayed. */\n  showDifference: boolean = true;\n  /** If true, the original bitmap is shown under the result. */\n  showBase: boolean = false;\n  /** Color used to highlight selected pixels. */\n  selectionColor: string = getVar(\"--selection-color\");\n  \n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n  /** Color scale used for displaying the bitmap. */\n  readonly colorscale: ColorScale = ColorScale.Binary;\n\n  /** Creates an instance of the MorphologicalOperationsAnimationComponent.\n   * @param bitmapStorage The service for loading and saving bitmaps.\n   */\n  constructor(private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.structuringElement.save();\n    this.refresh();\n  }\n\n  /** Updates the applied and result bitmaps based on the current operation and structuring element. */\n  refresh(): void {\n    this.appliedBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.structuringElement.applyComplex(this.bitmap, this.appliedBitmap, this.operation, this.showDifference);\n    this.animate();\n  }\n  /** Saves the current bitmap to storage. */\n  commit(): void {\n    this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n  }\n  /** Applies or reverts the morphological operation on the original bitmap.\n   * @param apply If true, applies the operation; if false, reverts to the original bitmap.\n  */\n  apply(apply: boolean = true): void {\n    this.bitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    if(apply)\n      this.appliedBitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell, 0));\n    else{\n      let bitmap = this.bitmapStorage.load(this.bitmapKey);\n      if (bitmap)\n        this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    }\n\n    this.refresh();\n  }\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.resultBitmap.pixels().filter(p=>p.value===0).forEach(p => this.resultBitmap.set(p.cell, 128));\n    this.setValues(this.animationIndex+1, this.resultBitmap, this.appliedBitmap);\n\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n\n    this.resultBitmap.select(cell);\n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    if(this.operation===MorphologicalOperations.Dilation){\n      this.resultBitmap.highlightedElement = cell;\n      if(!this.bitmap.getBinary(cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    if(this.operation===MorphologicalOperations.Erosion){\n      if(!this.structuringElement.getErosion(this.bitmap, cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    \n    if(this.operation===MorphologicalOperations.Dilation || this.operation===MorphologicalOperations.Erosion){\n      this.bitmap.highlightedElement = cell;\n      for(let row = 0; row pixel.value===0).forEach(pixel => {\n        if (destination.isOut(pixel.cell) || source.isOut(pixel.cell))\n          return;\n        destination.set(pixel.cell, source.get(pixel.cell) ?? 255);\n      });\n      return;\n    \n    }\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n        \n            crossword\n            Structuring Element\n        \n        \n        \n            Operation\n            \n                Erosion\n                Dilation\n                Opening\n                Closing\n            \n        \n    \n    \n        \n    \n    \n        \n            check\n            Apply\n        \n        \n            cleaning_services\n            Revert\n        \n        \n            commit\n            Save\n        \n    \n    \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Difference\n        \n        \n            Base\n        \n    \n    \n        \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\"\n                    [selectedColorScale]=\"colorscale\"\n                    [selectionColor]=\"selectionColor\"\n                    [tick]=\"bitmapTick\" [userSelect]=\"false\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n    \n\n\n    \n           \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                            crossword            Structuring Element                                    Operation                            Erosion                Dilation                Opening                Closing                                                                check            Apply                            cleaning_services            Revert                            commit            Save                                        Pixel Size                                                        Grid                            Headers                            Difference                            Base                                                                =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                                        =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\"                    [selectedColorScale]=\"colorscale\"                    [selectionColor]=\"selectionColor\"                    [tick]=\"bitmapTick\" [userSelect]=\"false\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                           '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorphologicalOperationsAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display a \"Page Not Found\" message.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                            MatDividerModule\n                            MatButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/page-not-found/page-not-found.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or to the home page if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router, RouterModule } from '@angular/router';\n\n/** Component to display a \"Page Not Found\" message. */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    MatDividerModule,\n    MatButtonModule,\n    RouterModule\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n  constructor(private router: Router) {\n\n  }\n  /** Navigates back to the previous page or to the home page if no history exists. */\n  goBack(): void {\n    if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    404\n    Page Not Found\n\n    \n        We could not find this page. It may have been moved, removed, or the address is incorrect.\n    \n\n    \n\n    \n        \n            home\n            Home\n        \n        \n            arrow_back\n            Back\n        \n\n    \n\n    \n        tips_and_updates\n        Tip: Check the URL or refresh the page if you believe this is an error.\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    404    Page Not Found            We could not find this page. It may have been moved, removed, or the address is incorrect.                                home            Home                            arrow_back            Back                        tips_and_updates        Tip: Check the URL or refresh the page if you believe this is an error.    '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/point.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a point in a 2D grid with row and column coordinates.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                col\n                            \n                            \n                                    Static\n                                    Readonly\n                                one\n                            \n                            \n                                    Public\n                                row\n                            \n                            \n                                    Static\n                                    Readonly\n                                zero\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                down\n                            \n                            \n                                equals\n                            \n                            \n                                left\n                            \n                            \n                                limit\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                right\n                            \n                            \n                                subtract\n                            \n                            \n                                toString\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/point.ts:2\n                            \n                        \n\n                \n                    \n                            Creates a new Point instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The row coordinate of the point.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The column coordinate of the point.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The column coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(1, 1)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:94\n                        \n                    \n\n            \n                \n                    A Point instance representing the coordinates (1, 1).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The row coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        zero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:92\n                        \n                    \n\n            \n                \n                    A Point instance representing the origin (0, 0).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:20\n                        \n                    \n\n\n            \n                \n                        Adds the coordinates of another Point to the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the sum of the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:13\n                        \n                    \n\n\n            \n                \n                        Creates a copy of the current Point instance.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the same row and column coordinates as the current instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:67\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit down.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit down.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:82\n                        \n                    \n\n\n            \n                \n                        Checks if the current Point is equal to another Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if both Points have the same row and column coordinates, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        left\n                        \n                    \n                \n            \n            \n                \nleft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:49\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the left.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the left.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n            \n                \nlimit(max: Point, min: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:75\n                        \n                    \n\n\n            \n                \n                        Limits the point's coordinates to be within the specified bounds.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                max\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The maximum bounds as a Point instance.\n\n                                            \n                                        \n                                        \n                                                min\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Point.zero\n                                            \n\n                                            \n                                                    The minimum bounds as a Point instance. Default is (0, 0).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the limited coordinates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n            \n                \nmax(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the maximum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the maximum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        min\n                        \n                    \n                \n            \n            \n                \nmin(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:35\n                        \n                    \n\n\n            \n                \n                        Gets the minimum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the minimum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        right\n                        \n                    \n                \n            \n            \n                \nright()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:55\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the right.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the right.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtract\n                        \n                    \n                \n            \n            \n                \nsubtract(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:27\n                        \n                    \n\n\n            \n                \n                        Subtracts the coordinates of another Point from the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to subtract.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the difference between the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:88\n                        \n                    \n\n\n            \n                \n                        Converts the Point to a string representation.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string in the format \"row,col\".\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:61\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit up.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit up.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Point{\n    /** Creates a new Point instance.\n     * @param row The row coordinate of the point.\n     * @param col The column coordinate of the point.\n     */\n    constructor(public row: number, public col: number) {\n        \n    }\n    /** Creates a copy of the current Point instance.\n     * @returns A new Point instance with the same row and column coordinates as the current instance.\n     */\n    clone(): Point {\n        return new Point(this.row, this.col);\n    }\n    /** Adds the coordinates of another Point to the current Point.\n     * @param other The Point to add.\n     * @returns A new Point instance representing the sum of the two Points.\n     */\n    add(other: Point): Point {\n        return new Point(this.row + other.row, this.col + other.col);\n    }\n    /** Subtracts the coordinates of another Point from the current Point.\n     * @param other The Point to subtract.\n     * @returns A new Point instance representing the difference between the two Points.\n     */\n    subtract(other: Point): Point {\n        return new Point(this.row - other.row, this.col - other.col);\n    }\n    /** Gets the minimum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the minimum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n     */\n    min(other: Point): Point{\n        return new Point(Math.min(this.row, other.row), Math.min(this.col, other.col)); \n    }\n    /** Gets the maximum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the maximum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n     */\n    max(other: Point): Point{\n        return new Point(Math.max(this.row, other.row), Math.max(this.col, other.col)); \n    }\n    /** Moves the point one unit to the left.\n     * @returns A new Point instance representing the point moved one unit to the left.\n     */\n    left(): Point{\n        return new Point(this.row, this.col - 1);\n    }\n    /** Moves the point one unit to the right.\n     * @returns A new Point instance representing the point moved one unit to the right.\n     */\n    right(): Point{\n        return new Point(this.row, this.col + 1);\n    }\n    /** Moves the point one unit up.\n     * @returns A new Point instance representing the point moved one unit up.\n     */\n    up(): Point{\n        return new Point(this.row - 1, this.col);\n    }\n    /** Moves the point one unit down.\n     * @returns A new Point instance representing the point moved one unit down.\n     */\n    down(): Point{\n        return new Point(this.row + 1, this.col);\n    }\n    /** Limits the point's coordinates to be within the specified bounds.\n     * @param max The maximum bounds as a Point instance.\n     * @param min The minimum bounds as a Point instance. Default is (0, 0).\n     * @returns A new Point instance with the limited coordinates.\n     */\n    limit(max: Point, min: Point = Point.zero): Point {\n        return new Point(Math.max(min.row, Math.min(max.row, this.row)), Math.max(min.col, Math.min(max.col, this.col)));\n    }\n    /** Checks if the current Point is equal to another Point.\n     * @param other The Point to compare with.\n     * @returns True if both Points have the same row and column coordinates, false otherwise.\n     */\n    equals(other: Point): boolean {\n        return this.row === other.row && this.col === other.col;\n    }\n    /** Converts the Point to a string representation.\n     * @returns A string in the format \"row,col\".\n     */\n    toString(): string {\n        return `${this.row},${this.col}`;\n    }\n    /** A Point instance representing the origin (0, 0). */\n    static readonly zero: Point = new Point(0, 0);\n    /** A Point instance representing the coordinates (1, 1). */\n    static readonly one: Point = new Point(1, 1);\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShapeBitmapEditorComponent.html":{"url":"components/ShapeBitmapEditorComponent.html","title":"component - ShapeBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ShapeBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shape-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shape-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shape-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                distanceTransform\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        distanceTransform\n                        \n                    \n                \n            \n            \n                \ndistanceTransform(isInside: (x: number,y: number) => void, w: number, h: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isInside\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                w\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                h\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { getVar } from '../../static/style-utils';\n\n@Component({\n  selector: 'app-shape-bitmap-editor',\n  imports: [\n    MatCardModule\n  ],\n  templateUrl: './shape-bitmap-editor.component.html',\n  styleUrl: './shape-bitmap-editor.component.css'\n})\nexport class ShapeBitmapEditorComponent implements AfterViewInit {\n  @ViewChild('canvas') canvasRef!: ElementRef;\n\n  ngAfterViewInit() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    //draw a rectangle\n    if (!ctx) return;\n\n\n\n    canvas.width = 1000;\n    canvas.height = 500;\n\n    ctx.imageSmoothingEnabled = false;\n    ctx.fillStyle = getVar('--mat-sys-primary');\n    // ctx.beginPath();\n    // ctx.ellipse(200, 200, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n    \n    // ctx.beginPath();\n    // ctx.ellipse(280, 280, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(290, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n\n    // ctx.beginPath();\n    // ctx.ellipse(120, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    ctx.fillRect(500, 100, 400, 200);\n    ctx.fillRect(300, 150, 400, 200);\n    ctx.fillRect(350, 250, 400, 200);\n\n    // pobieramy dane obrazu\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n\n    // helper: sprawdź czy piksel jest \"wewnątrz kształtu\"\n    function isInside(x: number, y: number): boolean {\n      const idx = (y * canvas.width + x) * 4;\n      return data[idx + 3] > 0; // sprawdzamy alpha kanał\n    }\n\n    // --- 2. Liczymy distance transform ---\n    const dist = this.distanceTransform(isInside, canvas.width, canvas.height);\n    console.log(dist.length);\n\n    // --- 3. Lokalna maksymalność = medial axis ---\n  const medial: [number, number][] = [];\n  const eps = 0.99;//7512; // tolerancja na równości\n  for (let y = 1; y  2) {\n        medial.push([x, y]);\n      }\n    }\n  }\n\n  \n    // Rysujemy medial axis\n    console.log(medial);\n    ctx.fillStyle = getVar('--mat-sys-on-primary');\n\n    for (const [x, y] of medial) {\n      ctx.fillRect(x, y, 1, 1);\n    }\n\n  }\n\n  distanceTransform(isInside: (x: number, y: number) => boolean, w: number, h: number): number[][] {\n    const dist: number[][] = Array.from({ length: h }, () => Array(w).fill(Infinity));\n\n    // inicjalizacja: 0 na brzegu, inf w środku\n    for (let y = 0; y  0) d = Math.min(d, dist[y][x - 1] + 1);\n        if (y > 0) d = Math.min(d, dist[y - 1][x] + 1);\n        if (x > 0 && y > 0) d = Math.min(d, dist[y - 1][x - 1] + Math.SQRT2);\n        if (x  0) d = Math.min(d, dist[y - 1][x + 1] + Math.SQRT2);\n        dist[y][x] = d;\n      }\n    }\n\n    // 2. Pass od dołu-prawej do góry-lewej\n    for (let y = h - 1; y >= 0; y--) {\n      for (let x = w - 1; x >= 0; x--) {\n        if (!isInside(x, y)) continue;\n        let d = dist[y][x];\n        if (x  0 && y \n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShapeBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StructuringElementEditorComponent.html":{"url":"components/StructuringElementEditorComponent.html","title":"component - StructuringElementEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  StructuringElementEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-structuring-element-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./structuring-element-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./structuring-element-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bitmap\n                            \n                            \n                                height\n                            \n                            \n                                origin\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                            \n                                tick\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                refresh\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of the StructuringElementEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Checks if the structuring element can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to set the origin of the structuring element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Refreshes the bitmap display and highlights the origin.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Saves the current structuring element to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap representing the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                        \n                    \n\n            \n                \n                    Height of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    The origin point of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 75\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:49\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:47\n                        \n                    \n\n            \n                \n                    If true, headers are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:39\n                        \n                    \n\n            \n                \n                    The structuring element being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:52\n                        \n                    \n\n            \n                \n                    Width of the structuring element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { Point } from '../../static/point';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { StructuringElement } from '../../static/structuringElement';\n\n@Component({\n  selector: 'app-structuring-element-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './structuring-element-editor.component.html',\n  styleUrl: './structuring-element-editor.component.css'\n})\nexport class StructuringElementEditorComponent {\n  /** The interactive bitmap representing the structuring element. */\n  bitmap: InteractiveBitmap;\n  /** Used to trigger bitmap component refresh. */\n  tick: number = 0;\n  /** The structuring element being edited. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The origin point of the structuring element. */\n  origin: Point;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 75;\n  /** If true, headers are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n\n  /** Width of the structuring element. */\n  width: number;\n  /** Height of the structuring element. */\n  height: number;\n\n  /** Creates an instance of the StructuringElementEditorComponent.\n   * @param router The router for navigation.\n   */\n  constructor(private router: Router) {\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.width = this.structuringElement.width;\n    this.height = this.structuringElement.height;\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.structuringElement);\n    this.origin = this.structuringElement.origin;\n    \n    this.refresh();\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.refresh();\n  }\n\n  /** Handles cell click events to set the origin of the structuring element.\n   * @param $event The event containing the clicked cell and mouse event details.\n   */\n  onCellClicked($event: { cell: Point; event: MouseEvent; }): void {\n    if($event.event.buttons !== 4) return;\n    this.origin = $event.cell;\n    this.refresh();\n  }\n  \n  /** Refreshes the bitmap display and highlights the origin. */\n  refresh(): void {\n    this.bitmap.clearSelection();\n    this.bitmap.highlightedElement = this.origin.clone();\n    this.bitmap.select(this.origin);\n    // this.bitmap.dragArea.button = 2;\n    // this.bitmap.dragArea.dragStart = this.origin.clone();\n    // this.bitmap.dragArea.dragEnd = this.origin.clone();\n    // this.bitmap.dragArea.dragging = true;\n    this.tick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.refresh();\n  }\n  \n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.origin = new Point(Math.min(this.origin.row, this.height-1), Math.min(this.origin.col, this.width-1));\n    this.refresh();\n  }\n  \n  /** Checks if the structuring element can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return true;\n    // return this._id !== null; \n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current structuring element to storage and navigates back. */\n  save(): void {\n    this.structuringElement = new StructuringElement(this.bitmap.width, this.bitmap.height, this.origin, this.bitmap);\n    this.structuringElement.save();\n    this.quit();\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StructuringElementEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application themes (light/dark).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storageKey\n                            \n                            \n                                themeChanged$\n                            \n                            \n                                    Private\n                                themeChangedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTheme\n                            \n                            \n                                getThemeClass\n                            \n                            \n                                setTheme\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme/theme.service.ts:15\n                            \n                        \n\n                \n                    \n                            Initializes the theme service, setting the theme based on local storage or defaulting to light theme.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves the current application theme.\nSee Themes\n\n\n                        \n                            Returns :         Themes\n\n                        \n                            \n                                The current theme (light or dark).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getThemeClass\n                        \n                    \n                \n            \n            \n                \ngetThemeClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves the CSS class corresponding to the current theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSS class for the current theme.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: Themes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Sets the application theme and updates local storage.\nSee Themes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Themes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The theme to set (light or dark).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Toggles between light and dark themes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-theme'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:11\n                        \n                    \n\n            \n                \n                    Key for storing the theme in local storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeChanged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themeChangedSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:15\n                        \n                    \n\n            \n                \n                    Observable stream for theme changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themeChangedSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:13\n                        \n                    \n\n            \n                \n                    Observable to notify subscribers of theme changes.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Themes } from '../../static/enums';\nimport { Subject } from 'rxjs/internal/Subject';\n\n/** Service to manage application themes (light/dark). */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /** Key for storing the theme in local storage. */\n  private readonly storageKey = 'app-theme';\n  /** Observable to notify subscribers of theme changes. */\n  private themeChangedSource = new Subject();\n  /** Observable stream for theme changes. */\n  themeChanged$ = this.themeChangedSource.asObservable();\n  \n  /** Initializes the theme service, setting the theme based on local storage or defaulting to light theme. */\n  constructor() {\n    const savedTheme = localStorage.getItem(this.storageKey);\n    if (savedTheme) {\n      this.setTheme(savedTheme as Themes);\n    } else {\n      // const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      // this.setTheme(prefersDark ? Themes.Dark : Themes.Light);\n      this.setTheme(Themes.Light);\n    }\n  }\n\n  /** Sets the application theme and updates local storage.\n   * @param theme The theme to set (light or dark).\n   * @see Themes\n   */\n  setTheme(theme: Themes): void {\n    const body = document.body;\n    body.classList.remove('light', 'dark');\n    body.classList.add(`${theme}`);\n    this.themeChangedSource.next(theme);\n    localStorage.setItem(this.storageKey, theme);\n  }\n\n  /** Retrieves the current application theme.\n   * @returns The current theme (light or dark).\n   * @see Themes\n   */\n  getTheme(): Themes {\n    return localStorage.getItem(this.storageKey) as Themes;\n  }\n\n  /** Retrieves the CSS class corresponding to the current theme.\n   * @returns The CSS class for the current theme.\n   */\n  getThemeClass(): string {\n    return `${this.getTheme()}`;\n  }\n\n  /** Toggles between light and dark themes. */\n  toggleTheme(): void {\n    const current = this.getTheme();\n    this.setTheme(current === Themes.Light ? Themes.Dark : Themes.Light);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UndoRedo.html":{"url":"classes/UndoRedo.html","title":"class - UndoRedo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UndoRedo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/undoRedo.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple generic Undo/Redo stack implementation with a limit on the number of states stored.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                redoStack\n                            \n                            \n                                    Private\n                                undoStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                push\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(limit: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/undoRedo.ts:6\n                            \n                        \n\n                \n                    \n                            Creates a new UndoRedo instance with an optional limit on the number of states stored.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The maximum number of states to store in the undo stack (default is 50).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:6\n                        \n                    \n\n            \n                \n                    The stack of states for redo operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        undoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:4\n                        \n                    \n\n            \n                \n                    The stack of states for undo operations.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(state: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:18\n                        \n                    \n\n\n            \n                \n                        Pushes a new state onto the undo stack and clears the redo stack.\nIf the undo stack exceeds the limit, the oldest state is removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new state to push onto the undo stack.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:40\n                        \n                    \n\n\n            \n                \n                        Redoes the last undone state change and returns that state.\nIf there are no states to redo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The state after redoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:29\n                        \n                    \n\n\n            \n                \n                        Undoes the last state change and returns the previous state.\nIf there are no states to undo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The previous state after undoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class UndoRedo {\n  /** The stack of states for undo operations. */\n  private undoStack: T[] = [];\n  /** The stack of states for redo operations. */\n  private redoStack: T[] = [];\n  \n\n  /** Creates a new UndoRedo instance with an optional limit on the number of states stored. \n   * @param limit The maximum number of states to store in the undo stack (default is 50).\n  */\n  constructor(private limit = 50) {}\n\n  /** Pushes a new state onto the undo stack and clears the redo stack.\n   * If the undo stack exceeds the limit, the oldest state is removed.\n   * @param state The new state to push onto the undo stack.\n   */\n  push(state: T): void {\n    this.undoStack.push(state);\n    if (this.undoStack.length > this.limit)\n      this.undoStack.shift();\n    this.redoStack = [];\n  }\n\n  /** Undoes the last state change and returns the previous state.\n   * If there are no states to undo, it returns null.\n   * @returns The previous state after undoing, or null if no states are available.\n   */\n  undo(): T | null {\n    if (this.undoStack.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/animation-controller/animation-controller.component.ts\n            \n            component\n            AnimationControllerComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                        src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n            \n            component\n            BinaryBitmapEditorComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap-editor/bitmap-editor.component.ts\n            \n            component\n            BitmapEditorComponent\n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap/bitmap.component.ts\n            \n            component\n            BitmapComponent\n            \n                100 %\n                (59/59)\n            \n        \n        \n            \n                \n                        src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n            \n            component\n            ConvolutionalFilterAnimationComponent\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                        src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n            \n            component\n            KernelDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/components/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/histogram/histogram.component.ts\n            \n            component\n            HistogramComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            component\n            HoughTransformAnimationComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            class\n            Line\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/components/matrix-display/matrix-display.component.ts\n            \n            component\n            MatrixDisplayComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/components/median-filter-animation/median-filter-animation.component.ts\n            \n            component\n            MedianFilterAnimationComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                        src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n            \n            component\n            MorphologicalOperationsAnimationComponent\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                        src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                        src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n            \n            component\n            ShapeBitmapEditorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n            \n            component\n            StructuringElementEditorComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                        src/app/services/bitmap-storage/bitmap-storage.service.ts\n            \n            injectable\n            BitmapStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/services/history/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            Bitmap\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            InteractiveBitmap\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            getContrastColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            isDark\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            scaleColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/drag-area.ts\n            \n            class\n            DragArea\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            declareCustomFunctions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            expressionValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            outOfRangeHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            parseAndApply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            quantizationHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            validateExpression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/kernel.ts\n            \n            class\n            Kernel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/static/point.ts\n            \n            class\n            Point\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                        src/app/static/render-utils.ts\n            \n            class\n            BitmapRenderer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/static/structuringElement.ts\n            \n            class\n            StructuringElement\n            \n                54 %\n                (13/24)\n            \n        \n        \n            \n                \n                        src/app/static/style-utils.ts\n            \n            function\n            getVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/undoRedo.ts\n            \n            class\n            UndoRedo\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.19\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.19\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            chart.js : ^4.5.0\n        \n            chroma-js : ^3.1.2\n        \n            expr-eval : ^2.0.2\n        \n            fast-simplex-noise : ^4.0.0\n        \n            mathjax-angular : ^3.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScale   (src/.../enums.ts)\n                        \n                        \n                            MorphologicalOperations   (src/.../enums.ts)\n                        \n                        \n                            OutOfRangeHandling   (src/.../enums.ts)\n                        \n                        \n                            Padding   (src/.../enums.ts)\n                        \n                        \n                            QuantizationMode   (src/.../enums.ts)\n                        \n                        \n                            Themes   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScale\n                    \n                \n                    \n                        \n                            Enumeration for different color scales used in bitmap display.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Grayscale\n                            \n                        \n                        \n                            \n                                Value : grayscale\n                            \n                        \n                        \n                            \n                                 Heatmap\n                            \n                        \n                        \n                            \n                                Value : heatmap\n                            \n                        \n                        \n                            \n                                 Spectral\n                            \n                        \n                        \n                            \n                                Value : spectral\n                            \n                        \n                        \n                            \n                                 Viridis\n                            \n                        \n                        \n                            \n                                Value : viridis\n                            \n                        \n                        \n                            \n                                 Binary\n                            \n                        \n                        \n                            \n                                Value : binary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MorphologicalOperations\n                    \n                \n                    \n                        \n                            Enumeration for different morphological operations.\n\n                        \n                    \n                        \n                            \n                                 Erosion\n                            \n                        \n                        \n                            \n                                Value : erosion\n                            \n                        \n                        \n                            \n                                 Dilation\n                            \n                        \n                        \n                            \n                                Value : dilation\n                            \n                        \n                        \n                            \n                                 Opening\n                            \n                        \n                        \n                            \n                                Value : opening\n                            \n                        \n                        \n                            \n                                 Closing\n                            \n                        \n                        \n                            \n                                Value : closing\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OutOfRangeHandling\n                    \n                \n                    \n                        \n                            Enumeration for handling out-of-range pixel values.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Clipping\n                            \n                        \n                        \n                            \n                                Value : clipping\n                            \n                        \n                        \n                            \n                                 Modulo\n                            \n                        \n                        \n                            \n                                Value : modulo\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Padding\n                    \n                \n                    \n                        \n                            Enumeration for different padding strategies when applying filters.\n\n                        \n                    \n                        \n                            \n                                 Zero\n                            \n                        \n                        \n                            \n                                Value : zero\n                            \n                        \n                        \n                            \n                                 DefaultValue\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 Edge\n                            \n                        \n                        \n                            \n                                Value : edge\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QuantizationMode\n                    \n                \n                    \n                        \n                            Enumeration for different quantization modes.\n\n                        \n                    \n                        \n                            \n                                 Round\n                            \n                        \n                        \n                            \n                                Value : round\n                            \n                        \n                        \n                            \n                                 Floor\n                            \n                        \n                        \n                            \n                                Value : floor\n                            \n                        \n                        \n                            \n                                 Ceil\n                            \n                        \n                        \n                            \n                                Value : ceil\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Themes\n                    \n                \n                    \n                        \n                            Enumeration for application themes.\n\n                        \n                    \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            declareCustomFunctions   (src/.../expression-utils.ts)\n                        \n                        \n                            expressionValidator   (src/.../expression-utils.ts)\n                        \n                        \n                            getContrastColor   (src/.../color-utils.ts)\n                        \n                        \n                            getVar   (src/.../style-utils.ts)\n                        \n                        \n                            isDark   (src/.../color-utils.ts)\n                        \n                        \n                            outOfRangeHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            parseAndApply   (src/.../expression-utils.ts)\n                        \n                        \n                            quantizationHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            scaleColor   (src/.../color-utils.ts)\n                        \n                        \n                            validateExpression   (src/.../expression-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/expression-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        declareCustomFunctions\n                        \n                    \n                \n            \n            \n                \ndeclareCustomFunctions(parser: Parser, bitmap: InteractiveBitmap, padding: Padding, defaultValue: number)\n                \n            \n\n\n\n\n            \n                \n                        Declares custom functions and constants in the expression parser for bitmap manipulation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                parser\n                                            \n                                                        Parser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression parser to which functions and constants will be added.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap used for pixel value retrieval.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to apply when retrieving pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressionValidator\n                        \n                    \n                \n            \n            \n                \nexpressionValidator()\n                \n            \n\n\n\n\n            \n                \n                        Validator function to check the validity of a mathematical expression.\n\n\n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                A validation function that can be used in Angular forms.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outOfRangeHandle\n                        \n                    \n                \n            \n            \n                \noutOfRangeHandle(value: number, mode: OutOfRangeHandling)\n                \n            \n\n\n\n\n            \n                \n                        Handles out-of-range pixel values based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to be handled.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The out-of-range handling mode (None, Clipping, Modulo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The handled pixel value as a number, or NaN if the mode is None and the value is out of range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseAndApply\n                        \n                    \n                \n            \n            \n                \nparseAndApply(expression: string, bitmap: InteractiveBitmap, padding: Padding, outOfRangeHandling: OutOfRangeHandling, quantizationMode: QuantizationMode, defaultValue: number, selectedOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n                        Parses and applies a mathematical expression to a bitmap, producing a new bitmap with the results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mathematical expression to apply.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the expression will be applied.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to use when accessing pixel values.\n\n                                            \n                                        \n                                        \n                                                outOfRangeHandling\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for handling out-of-range pixel values.\n\n                                            \n                                        \n                                        \n                                                quantizationMode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for quantizing pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default pixel value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                        \n                                                selectedOnly\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    If true, the expression is applied only to selected pixels in the bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap\n\n                        \n                            \n                                A new Bitmap instance containing the results of applying the expression.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantizationHandle\n                        \n                    \n                \n            \n            \n                \nquantizationHandle(value: number, mode: QuantizationMode)\n                \n            \n\n\n\n\n            \n                \n                        Handles quantization of a value based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to be quantized.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The quantization mode to apply (Round, Floor, Ceil).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The quantized value as a number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateExpression\n                        \n                    \n                \n            \n            \n                \nvalidateExpression(expression: string)\n                \n            \n\n\n\n\n            \n                \n                        Validates a mathematical expression to ensure it only contains allowed variables and functions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression string to validate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/static/color-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getContrastColor\n                        \n                    \n                \n            \n            \n                \ngetContrastColor(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines a contrasting color (either dark or light) based on the luminance of the input color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The base color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A dark color ('rgb(26, 27, 31)') if the input color is light, or a light color ('rgb(249, 248, 244)') if the input color is dark.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDark\n                        \n                    \n                \n            \n            \n                \nisDark(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines if a given color is considered \"dark\" based on its luminance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the color is dark, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scaleColor\n                        \n                    \n                \n            \n            \n                \nscaleColor(value: number, colorScale: ColorScale)\n                \n            \n\n\n\n\n            \n                \n                        Scales a given  value to a color based on the specified color scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to scale, typically in the range of 0 to 255.\n\n                                            \n                                        \n                                        \n                                                colorScale\n                                            \n                                                            ColorScale\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color scale to use for scaling (e.g., Grayscale, Heatmap, Spectral, Viridis, Binary).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the scaled color in CSS format.\n\n                            \n                \n            \n        \n    \n    src/app/static/style-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getVar\n                        \n                    \n                \n            \n            \n                \ngetVar(variable: string)\n                \n            \n\n\n\n\n            \n                \n                        Utility function to retrieve the value of a CSS variable from the document's body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                variable\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"--mat-sys-primary\"\n                                            \n\n                                            \n                                                    The name of the CSS variable (default is \"--mat-sys-primary\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The value of the specified CSS variable as a string.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nImageProcessingLectureSupportSystem\nThis project is an educational web application designed to support the teaching and learning of image processing concepts. Built with Angular and Angular Material, it provides interactive visualizations and tools for exploring various image processing algorithms and techniques. Key features include bitmap editing, step-by-step animation of convolutional and median filters, morphological operations, histogram analysis, and Hough transform visualization. The application allows users to experiment with different parameters, observe algorithm behavior in real time, and gain a deeper understanding of fundamental image processing operations. Its modular structure and user-friendly interface make it suitable for both classroom demonstrations and individual study.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testDocumentation\nTo generate documentation, use the following command:\nExample :npm run compodocAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { hideRequiredMarker: true } },\n\n    provideServiceWorker('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    provideAnimationsAsync(),\n    {\n      provide: MAT_ICON_DEFAULT_OPTIONS,\n      useValue: {\n        fontSet: 'material-symbols-rounded'\n      }\n    },\n    \n    importProvidersFrom(MathjaxModule.forRoot(\n      {\n        src: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js\"\n      },\n    ))\n\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: 'editor', component: BitmapEditorComponent },\n    { path: 'edit/:id', component: BitmapEditorComponent },\n    \n    { path: 'binary-editor', component: BinaryBitmapEditorComponent },\n    { path: 'binary-edit/:id', component: BinaryBitmapEditorComponent },\n    \n    { path: 'shape-editor', component: ShapeBitmapEditorComponent },\n\n    { path: 'structuring-element', component: StructuringElementEditorComponent },\n    \n\n    { path: 'help', component: HelpComponent },\n    { path: 'home', component: HomeComponent },\n    \n    { path: 'histogram', component: HistogramComponent },\n    { path: 'convolutional-filters', component: ConvolutionalFilterAnimationComponent },\n    { path: 'median-filters', component: MedianFilterAnimationComponent },\n    { path: 'morphological-operations', component: MorphologicalOperationsAnimationComponent },\n    { path: 'hough-transform', component: HoughTransformAnimationComponent },\n\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: '**', component: PageNotFoundComponent }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
