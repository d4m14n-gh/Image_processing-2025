var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccumulatorDialogComponent.html",[0,0.076,1,0.713]],["body/components/AccumulatorDialogComponent.html",[0,0.129,1,1.27,2,1.18,3,0.435,4,0.339,5,1.075,6,1.075,7,1.075,8,0.386,9,5.002,10,3.888,11,2.808,12,1.075,13,1.723,14,1.59,15,1.679,16,2.904,17,1.278,18,4.579,19,1.278,20,4.141,21,1.278,22,4.141,23,0.487,24,0.693,25,2.921,26,2.989,27,2.456,28,3.995,29,0.993,30,3.218,31,4.834,32,1.154,33,0.809,34,4.943,35,0.486,36,0.031,37,0.549,38,0.58,39,0.539,40,3.613,41,3.841,42,2.808,43,4.141,44,3.841,45,0.594,46,0.539,47,3.613,48,0.693,49,3.218,50,0.713,51,3.218,52,2.257,53,0.435,54,0.09,55,1.468,56,3.841,57,2.808,58,2.808,59,4.141,60,4.943,61,4.467,62,3.841,63,2.205,64,4.943,65,4.943,66,1.886,67,4.943,68,0.993,69,1.383,70,1.106,71,1.075,72,1.614,73,1.075,74,3.841,75,1.383,76,0.845,77,0.917,78,1.075,79,0.917,80,1.075,81,0.845,82,0.778,83,0.619,84,1.529,85,0.917,86,1.075,87,0.917,88,0.845,89,0.917,90,1.278,91,1.614,92,0.845,93,1.075,94,0.917,95,1.075,96,0.845,97,1.075,98,0.778,99,0.845,100,0.778,101,0.917,102,0.845,103,0.917,104,0.993,105,1.075,106,0.917,107,0.917,108,0.845,109,0.778,110,0.652,111,0.845,112,0.993,113,1.075,114,0.845,115,0.993,116,0.845,117,0.993,118,0.993,119,0.993,120,1.075,121,0.023,122,0.023]],["title/components/AnimationControllerComponent.html",[0,0.076,76,0.713]],["body/components/AnimationControllerComponent.html",[0,0.129,1,0.449,2,0.752,3,0.231,4,0.18,5,0.57,6,0.57,7,0.57,8,0.205,12,0.57,13,1.6,14,1.477,15,0.527,17,0.815,19,0.815,21,0.815,23,0.295,24,0.442,25,1.09,27,2.224,32,1.128,33,0.895,35,0.258,36,0.031,37,0.387,38,0.601,39,0.286,45,0.905,46,0.933,48,0.767,50,0.379,53,0.231,54,0.048,68,0.527,69,0.881,70,0.779,71,0.57,72,1.212,73,0.57,75,0.881,76,0.953,77,1.589,78,0.57,79,0.487,80,0.57,81,0.449,82,0.413,83,0.436,84,1.077,85,0.487,86,0.57,87,0.487,88,0.449,89,0.487,90,0.815,91,1.212,92,0.449,93,0.57,94,0.487,95,0.57,96,0.449,97,0.57,98,0.413,99,0.449,100,0.413,101,0.487,102,0.449,103,0.487,104,0.527,105,0.57,106,0.487,107,0.487,108,0.449,109,0.413,110,0.346,111,0.449,112,0.527,113,0.57,114,0.449,115,0.527,116,0.449,117,0.527,118,0.527,119,0.527,120,0.57,121,0.014,122,0.014,123,5.362,124,3.421,125,1.708,126,0.752,127,2.303,128,2.303,129,4.95,130,2.64,131,4.332,132,3.773,133,3.151,134,5.434,135,3.151,136,2.052,137,2.303,138,4.332,139,6.364,140,4.95,141,2.303,142,4.95,143,3.167,144,2.052,145,2.508,146,3.851,147,3.151,148,1.165,149,1.594,150,1.472,151,1.361,152,2.262,153,2.508,154,1.73,155,3.226,156,3.151,157,3.151,158,1.912,159,3.851,160,3.851,161,3.851,162,3.851,163,5.161,164,5.471,165,0.585,166,2.545,167,4.95,168,4.332,169,4.332,170,4.332,171,3.151,172,4.332,173,4.332,174,4.332,175,4.332,176,4.332,177,4.332,178,4.332,179,4.332,180,2.64,181,2.262,182,2.508,183,3.851,184,3.151,185,4.683,186,0.779,187,2.039,188,3.472,189,3.167,190,1.69,191,2.039,192,4.148,193,3.629,194,1.31,195,1.335,196,2.039,197,2.514,198,1.684,199,2.039,200,1.204,201,3.151,202,0.449,203,3.151,204,2.039,205,2.315,206,3.151,207,3.151,208,3.851,209,3.629,210,2.039,211,3.472,212,2.118,213,3.151,214,2.545,215,3.151,216,3.151,217,3.151,218,2.821,219,2.64,220,1.851,221,3.151,222,4.332,223,3.151,224,3.151,225,2.303,226,0.946,227,1.275,228,2.039,229,4.839,230,5.331,231,2.039,232,2.039,233,3.151,234,2.052,235,2.64,236,3.151,237,2.039,238,2.303,239,3.151,240,3.151,241,2.039,242,1.684,243,1.034,244,2.303,245,3.151,246,1.416,247,2.039,248,3.151,249,3.167,250,3.151,251,4.332,252,2.039,253,3.151,254,4.332,255,2.039,256,5.331,257,3.151,258,2.039,259,2.039,260,3.151,261,2.039,262,2.039,263,3.629,264,3.151,265,3.151,266,3.151,267,2.64,268,2.039,269,2.052,270,2.039,271,2.64,272,2.039,273,3.151,274,3.151,275,3.151,276,3.151,277,2.052,278,3.151,279,1.113,280,2.052,281,2.64,282,2.039,283,2.039,284,2.052,285,2.64,286,1.618,287,2.039,288,2.039,289,2.052,290,3.151,291,2.039,292,3.151,293,1.03,294,2.052,295,3.151,296,2.039,297,1.49,298,3.151,299,0.844,300,0.779,301,0.617,302,0.72,303,1.328,304,1.708,305,1.198,306,0.844,307,2.039,308,3.151,309,2.039,310,2.039,311,2.262,312,0.617,313,3.851,314,2.039,315,2.039,316,2.039,317,2.039,318,3.151,319,3.151,320,2.039,321,2.039,322,3.151,323,2.039,324,4.332,325,2.039,326,3.851,327,3.151,328,2.039,329,0.693,330,2.039,331,2.039,332,2.039,333,2.039,334,2.039,335,2.039,336,3.151,337,3.151,338,3.151,339,3.151,340,3.151,341,3.151,342,3.151,343,3.151,344,3.151,345,3.151,346,3.151,347,3.151]],["title/components/AppComponent.html",[0,0.076,79,0.774]],["body/components/AppComponent.html",[0,0.128,1,0.836,2,1.172,3,0.43,4,0.336,5,1.063,6,1.063,7,1.063,8,0.382,12,1.063,13,1.721,14,1.589,15,0.983,17,1.269,19,1.269,21,1.269,23,0.291,24,0.689,25,2.624,29,0.983,33,0.763,35,0.481,36,0.031,37,0.547,38,0.547,39,0.533,45,0.588,46,0.533,48,0.898,50,0.706,53,0.43,54,0.089,68,0.983,69,1.373,70,1.101,71,1.063,72,1.608,73,1.063,75,1.373,76,0.836,77,0.907,78,1.063,79,1.372,80,1.063,81,0.836,82,1.101,83,0.702,84,1.521,85,0.907,86,1.063,87,0.907,88,0.836,89,1.298,90,1.269,91,1.608,92,0.836,93,1.063,94,0.907,95,1.063,96,0.836,97,1.063,98,0.769,99,1.197,100,1.101,101,0.907,102,0.836,103,0.907,104,0.983,105,1.063,106,0.907,107,1.298,108,0.836,109,1.101,110,0.923,111,0.836,112,0.983,113,1.063,114,0.836,115,1.406,116,0.836,117,0.983,118,1.603,119,0.983,120,1.063,121,0.022,122,0.022,148,1.645,149,2.251,150,2.078,151,1.921,300,1.453,301,1.15,302,1.343,306,1.574,348,3.185,349,3.197,350,2.659,351,5.438,352,5.438,353,4.556,354,4.909,355,4.909,356,4.135,357,4.35,358,3.801,359,4.909,360,3.801,361,1.15,362,2.884,363,3.197,364,4.909,365,3.589,366,1.453,367,3.801,368,3.801,369,3.185,370,3.801,371,3.185,372,4.909,373,4.201,374,3.801,375,4.909,376,2.624,377,5.747,378,3.197,379,3.743,380,3.801]],["title/components/BinaryBitmapEditorComponent.html",[0,0.076,81,0.713]],["body/components/BinaryBitmapEditorComponent.html",[0,0.128,1,0.526,2,0.849,3,0.271,4,0.211,5,0.669,6,0.669,7,0.669,8,0.24,12,0.669,13,1.637,14,1.511,15,0.618,17,0.919,19,0.919,21,0.919,23,0.183,24,0.659,29,0.618,32,1.04,33,0.863,35,0.594,36,0.031,37,0.472,38,0.602,39,0.499,45,0.866,46,0.786,48,0.856,50,0.444,53,0.271,54,0.056,55,0.914,66,1.642,68,0.618,69,0.995,70,0.859,71,0.669,72,1.315,73,0.669,75,0.995,76,0.526,77,0.571,78,0.669,79,0.571,80,0.669,81,1.158,82,1.158,83,0.764,84,1.187,85,1.122,86,0.669,87,0.571,88,0.526,89,0.571,90,0.919,91,1.315,92,0.526,93,0.669,94,0.571,95,0.669,96,0.526,97,0.669,98,0.484,99,0.526,100,0.484,101,0.571,102,0.526,103,0.571,104,0.618,105,0.669,106,0.571,107,0.571,108,0.526,109,0.484,110,0.406,111,0.526,112,1.098,113,0.669,114,0.526,115,0.618,116,0.526,117,0.618,118,1.098,119,0.618,120,0.669,121,0.016,122,0.016,126,1.013,148,1.284,149,1.757,150,1.622,151,1.5,154,1.907,158,1.642,165,0.66,186,2.012,190,1.075,194,1.473,195,1.448,197,1.946,198,2.512,200,2.012,202,0.934,205,2.914,211,2.315,212,1.739,214,2.089,226,0.814,227,1.179,243,1.301,246,1.598,279,0.845,284,3.061,293,1.536,299,0.99,300,0.914,301,0.723,302,0.845,306,0.99,312,1.421,329,0.782,361,1.075,366,0.914,376,1.9,381,5.19,382,5.19,383,1.557,384,2.979,385,2.761,386,2.979,387,2.979,388,3.555,389,2.076,390,2.764,391,2.269,392,2.599,393,2.599,394,4.244,395,4.244,396,2.957,397,2.076,398,2.269,399,2.269,400,2.655,401,4.411,402,4.411,403,2.979,404,3.937,405,3.937,406,2.739,407,2.391,408,3.937,409,4.7,410,1.946,411,4.258,412,3.555,413,1.739,414,1.598,415,5.452,416,3.555,417,2.979,418,1.9,419,2.979,420,2.979,421,2.979,422,2.391,423,1.739,424,2.979,425,2.979,426,2.979,427,2.391,428,2.089,429,2.979,430,2.979,431,1.739,432,2.391,433,2.089,434,2.599,435,2.089,436,2.226,437,2.761,438,2.979,439,1.739,440,2.979,441,2.315,442,2.391,443,3.435,444,3.435,445,2.315,446,2.315,447,2.315,448,2.391,449,2.979,450,2.979,451,2.391,452,2.315,453,2.298,454,2.179,455,2.739,456,4.693,457,2.979,458,1.5,459,2.089,460,2.512,461,1.907,462,2.003,463,2.315,464,2.003,465,2.599,466,3.555,467,2.315,468,2.391,469,2.599,470,2.003,471,1.739,472,1.472,473,1.739,474,2.003,475,1.946,476,2.089,477,2.391,478,3.555,479,2.391,480,1.278,481,1.169,482,1.075,483,1.278,484,1.169,485,1.169,486,1.557,487,1.278,488,1.278,489,1.074,490,1.278,491,2.764,492,3.556,493,2.391,494,2.391,495,2.391,496,2.685,497,1.405,498,1.405,499,1.748,500,1.748,501,3.103,502,1.278,503,2.003,504,2.003,505,2.979,506,2.979,507,4.244,508,2.979,509,1.748,510,1.748,511,1.748,512,2.391,513,2.003,514,3.435,515,1.9,516,2.315,517,2.089,518,2.089,519,2.979,520,2.979,521,2.979,522,2.599,523,1.9,524,2.599,525,2.599,526,2.599,527,2.979,528,3.435,529,2.979,530,2.979,531,2.979]],["title/classes/Bitmap.html",[54,0.076,83,0.367]],["body/classes/Bitmap.html",[3,0.192,4,0.15,8,0.171,23,0.463,24,0.815,29,0.439,32,1.22,33,0.815,35,0.632,36,0.031,37,0.503,38,0.554,39,0.797,45,0.907,46,0.92,48,0.479,53,0.309,54,0.108,63,2.261,66,2.189,70,0.867,82,0.792,83,0.741,104,1.183,109,0.343,110,0.664,121,0.012,122,0.012,126,1.232,127,3.133,158,0.891,165,0.893,186,1.495,190,1.384,194,1.346,195,1.335,197,0.702,200,1.042,202,1.345,212,1.333,214,2.007,225,1.993,226,0.962,227,0.926,234,2.225,238,1.24,242,2.091,243,1.372,246,2.477,281,3.835,285,3.278,286,1.687,289,2.548,293,1.879,312,1.866,329,1.357,378,3.132,386,2.284,387,2.863,396,2.972,400,2.635,413,1.671,414,2.056,423,1.671,428,0.997,431,0.83,436,2.459,439,1.333,454,1.414,455,1.333,458,0.963,461,1.926,463,1.105,471,2.238,473,2.777,482,1.998,499,3.346,501,2.498,532,0.762,533,1.421,534,3.591,535,2.98,536,1.993,537,2.726,538,1.775,539,4.094,540,1.993,541,2.726,542,2.726,543,4.579,544,4.579,545,2.284,546,3.591,547,5.161,548,3.417,549,3.417,550,3.417,551,4.094,552,2.726,553,2.726,554,2.726,555,2.726,556,2.726,557,1.926,558,1.993,559,3.417,560,4.81,561,4.03,562,2.726,563,3.733,564,5.161,565,2.863,566,2.863,567,2.863,568,4.286,569,3.591,570,1.421,571,2.498,572,2.225,573,3.417,574,1.697,575,2.673,576,1.697,577,1.697,578,3.882,579,5.001,580,2.726,581,1.697,582,5.748,583,3.783,584,3.698,585,2.726,586,1.697,587,3.278,588,2.291,589,2.726,590,1.697,591,3.871,592,3.835,593,3.913,594,2.726,595,1.697,596,3.133,597,2.726,598,2.893,599,1.697,600,1.601,601,4.81,602,1.775,603,3.835,604,1.601,605,3.417,606,2.726,607,1.697,608,1.697,609,1.671,610,1.697,611,3.913,612,1.697,613,2.726,614,2.726,615,1.697,616,4.286,617,1.697,618,1.697,619,1.697,620,1.697,621,2.98,622,3.591,623,3.133,624,1.24,625,2.726,626,2.726,627,1.697,628,0.907,629,1.697,630,1.697,631,1.601,632,2.726,633,2.863,634,2.498,635,1.697,636,1.697,637,4.577,638,2.726,639,1.697,640,1.421,641,1.993,642,2.98,643,1.697,644,2.726,645,1.697,646,1.697,647,0.997,648,1.697,649,1.697,650,1.697,651,1.697,652,1.207,653,0.907,654,1.697,655,1.457,656,1.697,657,3.417,658,1.697,659,1.421,660,2.238,661,3.591,662,1.105,663,1.697,664,1.697,665,2.86,666,1.421,667,1.421,668,1.24,669,1.697,670,1.697,671,3.449,672,1.697,673,1.105,674,1.421,675,1.697,676,1.697,677,2.726,678,0.762,679,1.697,680,3.417,681,1.697,682,1.697,683,1.697,684,1.697,685,1.697,686,1.697,687,2.284,688,1.421,689,1.697,690,1.697,691,1.697,692,1.421,693,2.726,694,1.697,695,1.697,696,1.697,697,2.726,698,1.697,699,1.697,700,1.697,701,1.697,702,1.697,703,1.697,704,1.697,705,1.697,706,1.697,707,1.697,708,2.726,709,1.421,710,1.421,711,2.726,712,1.421,713,3.278,714,1.697,715,1.697,716,1.697,717,1.697,718,1.697,719,1.697,720,1.697,721,1.697]],["title/classes/BitmapRenderer.html",[54,0.076,722,2.369]],["body/classes/BitmapRenderer.html",[3,0.246,4,0.192,8,0.219,23,0.167,24,0.465,32,1.213,33,0.867,35,0.688,36,0.031,37,0.547,38,0.617,39,0.763,45,0.999,46,0.811,48,0.629,53,0.246,54,0.094,63,2.131,66,1.859,70,0.44,83,0.743,121,0.015,122,0.015,126,1.331,158,1.66,165,0.615,194,1.64,195,1.607,198,2.395,200,1.843,202,1.162,226,0.894,227,0.812,277,3.545,279,1.417,286,1.859,293,1.082,312,1.213,329,0.479,361,1.844,385,1.946,396,1.62,397,3.179,400,1.801,413,1.064,423,2.192,431,1.064,436,1.266,439,1.62,458,1.704,469,3.276,471,2.192,473,1.62,475,2.354,476,3.198,482,1.213,522,1.59,523,2.823,532,0.978,535,2.611,540,3.525,563,1.946,565,1.823,578,2.611,583,1.417,584,3.439,588,2.395,609,2.192,623,3.276,624,1.59,634,1.59,641,2.421,642,1.417,652,1.704,653,3.282,655,3.382,660,1.961,667,3.359,668,2.421,678,2.446,688,1.823,722,2.421,723,5.207,724,1.59,725,2.775,726,4.844,727,3.359,728,3.818,729,2.583,730,4.009,731,4.009,732,2.918,733,3.312,734,3.312,735,3.312,736,3.312,737,4.009,738,4.009,739,3.312,740,3.312,741,3.312,742,3.312,743,2.775,744,2.176,745,2.573,746,4.175,747,2.421,748,2.176,749,3.979,750,4.822,751,4.482,752,2.176,753,3.312,754,4.482,755,2.176,756,4.256,757,3.312,758,2.176,759,2.176,760,3.312,761,2.176,762,4.009,763,4.482,764,2.176,765,2.176,766,3.312,767,2.176,768,4.482,769,1.946,770,4.482,771,3.312,772,3.312,773,1.59,774,2.176,775,5.08,776,2.176,777,3.312,778,2.611,779,4.482,780,4.009,781,1.823,782,2.176,783,3.979,784,3.312,785,2.176,786,1.823,787,1.278,788,4.912,789,2.176,790,2.176,791,2.176,792,2.176,793,1.417,794,2.421,795,6.277,796,1.823,797,2.176,798,4.482,799,2.176,800,3.312,801,2.176,802,4.482,803,2.176,804,2.176,805,2.176,806,2.176,807,2.176,808,2.176,809,2.176,810,1.59,811,1.59,812,1.163,813,2.176,814,2.176,815,2.176,816,5.862,817,5.862,818,3.312,819,2.176,820,2.176,821,2.176,822,1.823,823,2.775,824,3.312,825,2.176,826,2.176,827,1.823,828,2.176,829,2.176,830,2.176,831,2.176,832,2.176,833,2.176,834,2.176,835,2.176,836,5.687,837,2.176,838,2.176,839,2.176,840,2.176,841,5.862,842,2.176,843,4.482,844,3.755,845,2.176,846,5.443,847,2.176,848,4.482,849,2.176,850,2.176,851,2.176,852,2.176,853,4.009,854,4.009,855,1.417,856,2.176,857,2.176,858,2.176,859,1.417,860,2.176,861,2.176,862,2.176,863,2.176,864,2.176,865,2.176,866,1.823,867,2.176,868,1.59]],["title/injectables/BitmapStorageService.html",[410,1.342,869,1.585]],["body/injectables/BitmapStorageService.html",[3,0.423,4,0.33,8,0.376,23,0.286,24,0.681,32,0.901,33,0.801,35,0.682,36,0.031,37,0.542,38,0.574,39,0.756,45,0.578,46,0.524,48,0.681,50,0.694,53,0.423,54,0.088,83,0.765,121,0.022,122,0.022,126,1.363,158,1.763,165,0.901,194,1.358,195,1.255,226,0.915,227,0.756,284,4.213,286,1.587,312,1.727,329,1.359,349,2.433,361,1.945,385,3.354,406,2.792,410,2.01,418,2.595,423,2.374,447,3.718,452,3.161,453,3.194,454,2.704,457,4.067,458,1.32,461,1.678,481,1.827,489,2.659,583,2.433,588,2.595,609,2.374,652,1.906,787,2.852,869,2.374,870,2.433,871,4.958,872,3.13,873,4.854,874,4.067,875,3.549,876,4.077,877,5.393,878,3.718,879,4.854,880,3.736,881,5.082,882,4.854,883,3.736,884,4.854,885,4.174,886,4.067,887,4.854,888,4.854,889,3.736,890,3.736,891,2.374,892,4.854,893,3.549,894,2.731,895,3.736,896,3.736,897,3.736,898,4.067,899,3.736,900,3.13,901,4.783,902,3.13,903,4.518,904,3.736,905,3.736,906,4.854,907,3.13,908,3.736,909,3.13,910,3.13]],["title/components/ConvolutionalFilterAnimationComponent.html",[0,0.076,88,0.713]],["body/components/ConvolutionalFilterAnimationComponent.html",[0,0.125,1,0.411,2,0.703,3,0.212,4,0.482,5,0.523,6,0.523,7,0.523,8,0.188,12,0.523,13,1.578,14,1.457,15,0.483,16,2.936,17,0.761,19,0.761,21,0.761,23,0.366,24,0.413,26,1.781,27,1.636,29,0.942,32,1.05,33,0.88,35,0.523,36,0.031,37,0.48,38,0.62,39,0.58,40,1.366,45,0.925,46,0.856,48,0.865,50,0.347,52,1.098,53,0.212,54,0.044,55,0.714,66,1.19,68,0.483,69,0.823,70,0.737,71,0.523,72,1.156,73,0.523,75,0.823,76,0.909,77,1.386,78,0.523,79,0.446,80,0.523,81,0.411,82,0.378,83,0.74,84,1.019,85,0.986,86,0.523,87,0.446,88,0.909,89,1.498,90,1.73,91,1.156,92,0.411,93,0.523,94,0.446,95,0.523,96,0.411,97,0.523,98,0.378,99,0.411,100,0.378,101,0.703,102,1.395,103,0.703,104,0.761,105,0.523,106,0.446,107,0.446,108,0.411,109,0.378,110,0.317,111,0.411,112,0.483,113,0.523,114,0.411,115,0.483,116,0.411,117,0.483,118,0.483,119,0.483,120,0.523,121,0.013,122,0.013,124,0.999,126,1.073,128,1.366,132,3.021,136,1.917,137,2.152,143,2.152,148,1.101,149,1.508,150,1.392,151,1.287,152,2.14,154,1.636,155,3.051,158,1.741,165,0.547,166,2.805,186,2.084,190,0.565,194,1.525,195,1.533,197,1.861,198,2.552,200,1.718,202,0.909,205,1.947,219,2.466,226,0.824,227,1.078,234,1.217,242,0.999,243,1.438,246,1.323,249,2.152,279,0.66,286,1.19,293,1.782,294,3.621,299,0.774,300,0.714,301,0.565,302,0.66,304,1.566,305,1.098,306,0.774,311,1.098,312,0.89,350,1.781,361,1.101,362,3.042,363,1.917,366,0.714,385,2.428,389,1.781,391,1.947,397,1.781,398,1.947,399,1.947,400,0.84,406,2.021,410,1.711,414,1.323,418,2.208,431,1.44,433,1.098,435,1.098,436,2.346,437,1.098,439,1.781,441,1.217,453,2.021,455,2.021,458,2.074,459,2.805,460,2.552,461,2.245,465,2.662,467,1.917,471,2.021,472,1.508,473,2.532,475,1.711,476,1.729,480,0.999,481,0.914,482,0.565,483,0.999,484,0.914,485,0.914,487,0.999,488,0.999,489,0.84,490,0.999,491,1.217,496,2.208,497,1.098,498,1.098,502,1.947,515,2.552,517,2.428,518,2.428,523,2.208,536,2.152,538,1.217,540,2.152,557,1.636,563,1.098,575,2.208,598,2.667,600,1.729,602,1.217,631,1.098,640,2.466,652,1.588,660,1.44,668,1.366,678,2.577,726,2.466,729,1.781,743,2.466,745,1.219,746,1.917,794,2.152,796,2.466,878,3.109,885,2.152,891,1.44,911,5.277,912,5.277,913,1.098,914,2.466,915,1.917,916,2.944,917,3.642,918,1.917,919,1.917,920,2.372,921,2.372,922,3.642,923,2.372,924,3.642,925,3.642,926,3.051,927,3.642,928,3.642,929,2.944,930,3.642,931,3.642,932,3.642,933,1.917,934,3.462,935,2.208,936,2.152,937,1.566,938,3.021,939,2.691,940,2.944,941,2.944,942,2.944,943,2.944,944,2.944,945,2.152,946,2.944,947,1.869,948,2.466,949,2.466,950,1.869,951,3.371,952,1.869,953,1.869,954,1.566,955,4.775,956,2.372,957,1.869,958,1.869,959,1.869,960,1.566,961,1.869,962,1.366,963,1.869,964,1.869,965,1.869,966,3.642,967,3.642,968,1.869,969,1.366,970,1.869,971,3.642,972,3.642,973,1.217,974,2.14,975,1.869,976,1.869,977,1.217,978,1.566,979,1.869,980,2.466,981,3.49,982,1.869,983,2.466,984,2.944,985,1.217,986,1.869,987,1.566,988,3.021,989,1.366,990,3.462,991,1.869,992,1.869,993,4.775,994,1.366,995,2.944,996,1.566,997,2.944,998,2.944,999,2.944,1000,1.566,1001,1.566,1002,1.566,1003,1.869,1004,2.466,1005,1.869,1006,2.466,1007,2.944,1008,1.869,1009,1.869,1010,2.944,1011,1.869,1012,1.566,1013,1.566,1014,2.944,1015,1.217,1016,1.869,1017,1.366,1018,1.366,1019,1.366,1020,1.217,1021,1.217,1022,1.098,1023,1.366,1024,1.869,1025,1.566,1026,1.217,1027,1.217,1028,1.566,1029,1.869,1030,1.729,1031,1.869,1032,1.869,1033,1.869,1034,1.869,1035,1.869,1036,1.869,1037,1.566,1038,2.944,1039,2.944,1040,2.944,1041,1.869,1042,2.372,1043,2.372,1044,3.642,1045,1.869,1046,1.869,1047,1.098,1048,1.566,1049,1.869,1050,1.869,1051,1.869,1052,1.566,1053,1.869,1054,1.869,1055,2.466,1056,2.152,1057,2.466,1058,2.152,1059,4.132,1060,4.132,1061,4.132,1062,2.152,1063,2.152,1064,3.021,1065,2.944,1066,2.466]],["title/classes/DragArea.html",[54,0.076,621,2.11]],["body/classes/DragArea.html",[3,0.416,4,0.325,8,0.37,23,0.281,24,0.674,32,0.892,33,0.885,35,0.465,36,0.031,37,0.37,38,0.607,39,0.516,45,0.911,46,0.826,48,0.516,53,0.416,54,0.126,63,1.836,66,1.974,121,0.022,122,0.022,126,1.147,165,0.892,190,1.453,194,1.689,195,1.242,202,1.373,226,0.878,243,1.355,267,4.024,279,1.697,286,1.974,289,3.128,312,1.112,329,0.809,423,2.349,437,2.822,455,2.349,482,1.998,532,1.651,539,3.511,551,4.304,575,3.033,578,3.128,588,2.567,596,4.148,609,2.349,621,3.128,622,5.059,623,4.718,634,2.687,641,2.687,647,2.159,652,2.229,661,4.933,665,4.561,678,2.158,687,5.334,709,4.754,787,2.822,855,3.128,859,3.128,866,4.024,891,2.349,962,4.414,1067,5.227,1068,3.08,1069,4.803,1070,4.024,1071,3.695,1072,3.511,1073,5.887,1074,5.351,1075,5.351,1076,5.351,1077,5.674,1078,3.511,1079,3.676,1080,3.676,1081,5.674,1082,4.024,1083,4.803,1084,4.803,1085,3.676,1086,4.803,1087,3.676,1088,3.676,1089,4.803,1090,3.676,1091,4.803,1092,3.676,1093,5.674,1094,4.803,1095,5.674,1096,4.803,1097,4.803,1098,5.351,1099,4.803,1100,5.674,1101,4.803,1102,4.803]],["title/components/HelpComponent.html",[0,0.076,92,0.713]],["body/components/HelpComponent.html",[0,0.137,1,0.971,2,1.287,3,0.499,4,0.39,5,1.234,6,1.234,7,1.234,8,0.443,12,1.234,13,1.742,14,1.608,15,1.141,17,1.394,19,1.394,21,1.394,36,0.031,37,0.542,48,0.756,50,0.819,53,0.499,54,0.104,68,1.141,69,1.508,70,1.178,71,1.234,72,1.696,73,1.234,75,1.508,76,0.971,77,1.053,78,1.234,79,1.053,80,1.234,81,0.971,82,0.893,83,0.659,84,1.629,85,1.053,86,1.234,87,1.053,88,0.971,89,1.053,90,1.394,91,1.696,92,1.334,93,1.234,94,1.053,95,1.234,96,0.971,97,1.234,98,0.893,99,0.971,100,0.893,101,1.053,102,0.971,103,1.053,104,1.141,105,1.234,106,1.053,107,1.053,108,0.971,109,0.893,110,0.749,111,0.971,112,1.141,113,1.234,114,0.971,115,1.141,116,0.971,117,1.141,118,1.141,119,1.141,120,1.234,121,0.025,122,0.025,148,1.761,301,1.334,373,3.94,1103,3.695,1104,5.39,1105,5.39]],["title/injectables/HistoryService.html",[869,1.585,1106,2.369]],["body/injectables/HistoryService.html",[3,0.441,4,0.344,8,0.392,23,0.298,24,0.7,32,1.077,33,0.875,35,0.493,36,0.031,37,0.392,38,0.583,39,0.547,45,0.851,46,0.772,48,0.547,50,0.724,53,0.441,54,0.092,121,0.023,122,0.023,126,1.191,158,2.085,165,0.926,188,3.248,193,4.179,226,0.949,227,1.174,312,1.178,329,1.098,349,2.537,361,1.957,418,2.666,428,2.931,446,4.395,453,2.837,539,4.24,652,1.377,662,3.248,869,2.439,870,2.537,876,3.778,891,2.439,893,3.646,894,2.848,945,3.646,956,3.778,969,4.24,1106,3.646,1107,3.265,1108,3.778,1109,5.502,1110,4.022,1111,4.988,1112,5.801,1113,5.801,1114,5.801,1115,4.988,1116,3.896,1117,5.225,1118,4.988,1119,4.988,1120,4.988,1121,2.931,1122,4.179,1123,3.896,1124,3.646,1125,4.988,1126,3.896,1127,3.896,1128,4.988,1129,4.988,1130,4.988,1131,4.988,1132,3.896,1133,4.179,1134,4.179,1135,4.988,1136,3.896,1137,4.988,1138,4.988,1139,3.896,1140,3.896,1141,5.801,1142,3.896,1143,3.896,1144,3.896,1145,3.896,1146,3.896,1147,3.896,1148,3.265,1149,3.896,1150,3.896,1151,3.265,1152,3.896,1153,3.896]],["title/components/HomeComponent.html",[0,0.076,96,0.713]],["body/components/HomeComponent.html",[0,0.105,1,0.576,2,0.907,3,0.297,4,0.231,5,0.733,6,0.733,7,0.733,8,0.263,12,0.733,13,1.656,14,1.529,15,0.677,17,0.983,19,0.983,21,0.983,23,0.44,26,1.859,36,0.031,37,0.382,46,0.835,48,0.763,50,0.486,53,0.297,54,0.062,63,2.197,66,1.945,68,0.677,69,1.063,70,1.186,71,0.733,72,1.373,73,0.733,75,1.063,76,0.576,77,0.625,78,0.733,79,0.625,80,0.733,81,0.576,82,0.906,83,0.715,84,1.252,85,0.625,86,0.733,87,0.625,88,0.576,89,0.625,90,0.983,91,1.373,92,0.576,93,0.733,94,0.625,95,0.733,96,1.08,97,0.733,98,0.53,99,0.576,100,0.53,101,0.625,102,0.576,103,0.625,104,0.677,105,0.733,106,0.625,107,0.625,108,0.576,109,0.53,110,0.445,111,0.576,112,0.677,113,0.733,114,0.576,115,0.677,116,0.576,117,1.348,118,1.591,119,0.677,120,0.733,121,0.017,122,0.017,128,3.975,136,2.475,148,1.353,151,1.581,181,2.233,186,1.877,189,4.455,190,1.645,197,2.032,202,1.197,220,2.884,226,0.841,229,3.185,242,2.906,289,2.475,293,1.243,301,0.792,302,0.925,350,2.188,353,3.749,362,2.233,365,2.779,366,1.001,369,2.194,376,2.032,390,2.914,396,2.91,400,2.582,417,3.185,436,2.479,455,2.659,471,2.401,475,1.574,486,1.705,535,2.475,546,3.185,551,4.533,566,3.185,571,3.589,572,2.475,584,3.743,604,2.233,633,4.556,653,3.072,655,3.446,660,1.859,662,2.475,666,3.185,671,3.743,673,3.197,692,4.815,745,1.574,756,4.113,786,3.185,787,2.233,793,2.475,855,3.197,859,2.475,875,2.779,974,3.496,977,3.541,988,3.975,1078,2.779,1082,5.46,1108,3.541,1117,5.106,1134,4.113,1154,2.194,1155,3.801,1156,3.801,1157,5.438,1158,3.801,1159,5.438,1160,3.801,1161,3.801,1162,4.909,1163,3.801,1164,3.801,1165,4.556,1166,3.185,1167,3.185,1168,4.556,1169,3.185,1170,3.185,1171,3.185,1172,3.801,1173,3.801,1174,3.801,1175,3.185,1176,3.801,1177,3.801,1178,3.801,1179,3.185,1180,3.801,1181,3.185,1182,3.801,1183,3.801,1184,3.801,1185,3.801,1186,3.801,1187,3.541,1188,5.747,1189,3.801,1190,4.113,1191,3.801,1192,3.975,1193,3.801,1194,3.185,1195,3.801,1196,3.185,1197,3.801,1198,3.801,1199,5.747,1200,3.801,1201,3.185,1202,3.801,1203,3.801,1204,3.801,1205,3.801,1206,3.801,1207,3.801,1208,3.801,1209,4.909,1210,4.113,1211,3.801,1212,5.438,1213,4.909,1214,4.909,1215,3.801,1216,3.801,1217,3.185,1218,3.185,1219,2.779,1220,4.113,1221,4.113,1222,4.909,1223,4.909,1224,4.909,1225,4.909,1226,4.909,1227,3.801,1228,2.779]],["title/components/HoughTransformAnimationComponent.html",[0,0.076,98,0.656]],["body/components/HoughTransformAnimationComponent.html",[0,0.088,1,0.666,2,0.723,3,0.219,4,0.372,5,0.542,6,0.542,7,0.542,8,0.195,10,1.261,12,0.542,13,1.587,14,1.466,15,1.253,16,2.19,17,0.783,19,0.783,21,0.783,23,0.285,24,0.425,26,1.481,27,2.178,28,2.725,29,0.501,32,1.191,33,0.887,35,0.578,36,0.031,37,0.509,38,0.634,39,0.71,45,0.923,46,0.837,47,2.213,48,0.87,50,0.36,52,1.138,53,0.219,54,0.046,55,0.74,57,3.543,58,1.416,66,0.633,68,1.09,69,0.847,70,0.754,71,0.542,72,1.179,73,0.542,75,0.847,76,0.927,77,1.092,78,0.542,79,0.462,80,0.542,81,0.426,82,0.392,83,0.695,84,1.043,85,1.006,86,0.542,87,0.462,88,0.426,89,0.723,90,0.783,91,1.179,92,0.426,93,0.542,94,0.462,95,0.542,96,0.426,97,0.542,98,0.853,99,1.185,100,1.351,101,0.462,102,0.666,103,0.462,104,0.501,105,0.542,106,0.462,107,0.462,108,0.426,109,0.392,110,0.329,111,0.426,112,0.501,113,0.542,114,0.426,115,0.501,116,0.426,117,0.501,118,0.501,119,0.501,120,0.542,121,0.014,122,0.014,124,1.035,141,1.416,144,1.972,145,1.261,148,1.127,149,1.543,150,1.425,151,1.317,152,2.19,153,2.427,154,1.675,158,1.378,165,0.562,166,2.476,181,2.19,182,2.427,186,1.936,190,1.275,194,1.356,195,1.31,200,1.157,202,1.324,205,1.035,218,1.261,226,0.852,227,1.025,243,1.34,277,1.972,279,1.317,280,2.744,286,1.761,299,0.802,300,0.74,301,0.586,302,0.684,303,1.261,305,1.138,306,0.802,311,1.138,329,0.927,350,1.823,357,3.081,361,1.275,366,0.74,389,1.823,391,1.992,396,2.236,397,1.823,398,1.992,399,1.992,400,2.055,410,1.745,431,1.481,435,1.779,436,1.157,454,0.802,458,1.616,459,2.476,460,2.252,461,2.055,472,2.007,475,1.543,480,1.035,481,0.947,482,1.383,483,1.035,484,0.947,485,0.947,487,1.035,488,1.035,489,0.87,490,1.035,496,1.618,497,1.138,498,1.779,500,2.725,502,2.444,515,2.591,516,2.744,517,2.476,518,2.476,523,1.618,557,1.675,591,2.213,598,0.947,628,1.618,631,1.779,647,1.138,652,2.156,653,2.707,655,2.444,660,2.061,728,1.261,729,2.371,732,2.427,745,1.745,749,3.081,769,2.976,773,2.213,778,1.261,783,2.213,812,1.035,913,1.138,918,1.972,919,1.972,920,2.427,921,2.427,923,2.427,933,1.972,934,3.123,935,2.252,936,2.213,937,1.623,938,3.081,939,2.427,951,2.427,973,1.261,974,1.779,980,1.623,981,3.343,985,1.972,989,1.416,994,2.213,1001,1.623,1013,1.623,1015,1.261,1018,1.416,1022,1.138,1027,1.261,1030,2.19,1042,1.972,1043,1.972,1047,1.138,1062,3.081,1063,3.081,1064,3.081,1071,1.261,1121,2.686,1165,2.537,1229,4.639,1230,4.639,1231,2.725,1232,3.123,1233,2.725,1234,4.061,1235,3.123,1236,4.243,1237,3.531,1238,3.531,1239,3.028,1240,3.081,1241,1.937,1242,1.937,1243,1.937,1244,2.537,1245,3.123,1246,1.937,1247,1.937,1248,1.937,1249,1.937,1250,1.937,1251,1.937,1252,2.537,1253,1.937,1254,1.937,1255,1.623,1256,1.937,1257,1.937,1258,2.213,1259,1.937,1260,1.623,1261,1.623,1262,2.444,1263,1.623,1264,1.937,1265,1.937,1266,1.937,1267,1.623,1268,1.261,1269,1.623,1270,2.537,1271,2.537,1272,2.537,1273,3.123,1274,1.416,1275,1.623,1276,1.623,1277,1.623,1278,1.623,1279,1.416,1280,1.623,1281,1.623,1282,1.623,1283,1.623,1284,1.623,1285,1.623,1286,1.623,1287,1.623,1288,1.261,1289,1.623,1290,1.623,1291,1.623,1292,1.416,1293,2.537,1294,1.623,1295,3.123,1296,2.537,1297,2.537,1298,1.623,1299,1.623,1300,2.537,1301,1.623,1302,1.623,1303,1.623,1304,1.623,1305,2.537,1306,1.623,1307,1.623,1308,1.623,1309,1.623,1310,1.623,1311,2.537,1312,1.623,1313,1.623,1314,1.623,1315,1.623,1316,1.623,1317,2.537,1318,1.623,1319,1.623,1320,1.623,1321,1.623,1322,1.623,1323,1.623,1324,1.623,1325,1.623,1326,1.416,1327,1.623,1328,1.416,1329,1.416,1330,1.261,1331,1.416,1332,1.623,1333,1.416,1334,1.623,1335,2.537,1336,1.623,1337,2.213,1338,1.623,1339,2.537,1340,1.623,1341,1.623,1342,1.623,1343,1.623,1344,1.623,1345,1.623,1346,1.623,1347,1.623,1348,1.623,1349,1.623,1350,1.623,1351,1.623,1352,1.623,1353,1.623,1354,1.623,1355,1.623,1356,1.623,1357,1.623,1358,1.623,1359,1.623,1360,1.623,1361,1.623,1362,1.623,1363,1.623,1364,1.623,1365,1.623,1366,1.623,1367,1.623,1368,1.623,1369,2.537,1370,2.537,1371,2.537,1372,1.623,1373,1.623,1374,2.537,1375,3.531,1376,3.531,1377,4.214,1378,1.937,1379,1.937,1380,3.028,1381,3.028,1382,3.028,1383,2.213,1384,1.937,1385,1.937]],["title/classes/Kernel.html",[54,0.076,102,0.713]],["body/classes/Kernel.html",[3,0.4,4,0.312,8,0.355,23,0.271,24,0.657,29,0.914,32,1.222,33,0.91,35,0.735,36,0.031,37,0.584,38,0.622,39,0.815,45,0.899,46,0.855,48,0.784,53,0.4,54,0.083,63,1.351,66,1.716,83,0.676,102,1.433,121,0.021,122,0.021,158,2.047,165,0.869,190,1.69,200,2.329,202,1.155,226,0.943,227,1.177,246,1.588,279,1.249,293,1.716,329,1.341,361,1.807,406,2.29,482,1.758,532,1.588,557,2.104,558,3.422,569,2.962,570,2.962,583,2.302,598,2.98,604,2.751,624,2.584,628,2.502,631,2.751,652,2.153,812,1.889,878,3.049,898,3.923,900,2.962,901,4.682,902,2.962,903,2.962,907,2.962,909,2.962,910,2.962,1020,3.639,1021,3.639,1108,2.302,1110,3.422,1386,2.962,1387,5.249,1388,5.249,1389,5.249,1390,4.682,1391,5.588,1392,4.398,1393,4.682,1394,4.682,1395,3.535,1396,3.535,1397,2.29,1398,3.535,1399,4.682,1400,3.837,1401,5.249,1402,3.535,1403,3.535,1404,4.682,1405,3.535,1406,4.682,1407,3.535,1408,3.535,1409,3.535,1410,2.962,1411,3.535,1412,3.535,1413,3.535,1414,3.535,1415,3.535,1416,3.535,1417,2.584,1418,2.584,1419,4.682,1420,5.249,1421,3.535,1422,5.588,1423,3.535,1424,3.535,1425,2.962,1426,4.682,1427,3.535,1428,3.535,1429,3.535,1430,3.535,1431,3.535,1432,3.535,1433,3.535,1434,3.535,1435,3.422,1436,3.535,1437,3.535,1438,3.535,1439,3.535,1440,4.682,1441,3.535,1442,3.535,1443,3.535,1444,3.535,1445,3.535,1446,2.962,1447,3.535,1448,3.535]],["title/components/KernelDialogComponent.html",[0,0.076,101,0.774]],["body/components/KernelDialogComponent.html",[0,0.122,1,0.763,2,1.103,3,0.393,4,0.306,5,0.97,6,0.97,7,0.97,8,0.349,11,2.535,12,0.97,13,1.707,14,1.576,15,0.897,16,2.716,17,1.195,18,4.356,19,1.195,20,3.872,21,1.195,22,3.872,23,0.442,24,0.648,25,2.779,26,2.905,29,0.897,30,2.905,31,4.646,32,1.03,33,0.851,35,0.585,36,0.031,37,0.557,38,0.557,39,0.648,40,3.379,42,2.535,43,3.872,46,0.729,48,0.891,49,2.905,50,0.644,51,2.905,52,2.037,53,0.393,54,0.082,55,1.325,61,4.054,63,2.12,68,0.897,69,1.293,70,1.052,71,0.97,72,1.551,73,0.97,75,1.293,76,0.763,77,0.828,78,0.97,79,0.828,80,0.97,81,0.763,82,0.702,83,0.589,84,1.454,85,0.828,86,0.97,87,0.828,88,0.763,89,0.828,90,1.195,91,1.551,92,0.763,93,0.97,94,0.828,95,0.97,96,0.763,97,0.97,98,0.702,99,0.763,100,0.702,101,1.324,102,1.466,103,0.828,104,0.897,105,0.97,106,0.828,107,0.828,108,0.763,109,0.702,110,0.589,111,0.763,112,0.897,113,0.97,114,0.763,115,0.897,116,0.763,117,0.897,118,0.897,119,0.897,120,0.97,121,0.021,122,0.021,148,1.572,149,2.152,150,1.987,151,1.837,153,3.386,154,2.336,165,0.858,200,1.987,226,0.804,227,1.052,243,0.828,246,1.558,293,1.511,299,1.435,300,1.767,301,1.049,302,1.225,303,2.258,306,1.435,329,0.763,389,2.543,406,2.26,434,3.379,484,1.696,485,1.696,528,4.054,558,3.379,1017,4.504,1019,2.535,1037,3.872,1052,2.905,1055,3.872,1392,3.872,1410,2.905,1446,3.872,1449,5.162,1450,5.199,1451,5.545,1452,5.545,1453,3.467,1454,3.467,1455,3.467,1456,3.467,1457,3.467,1458,3.467,1459,3.467,1460,3.467,1461,3.467,1462,3.467,1463,3.467,1464,3.467,1465,3.467,1466,4.622,1467,4.622,1468,4.622,1469,4.622,1470,4.622,1471,4.622]],["title/classes/Line.html",[54,0.076,769,1.904]],["body/classes/Line.html",[0,0.09,1,0.58,3,0.299,4,0.337,8,0.265,10,1.718,13,0.682,14,0.63,15,0.682,16,1.55,17,0.682,19,0.682,21,0.682,23,0.202,24,0.536,25,3.186,26,1.869,27,1.717,28,1.928,29,0.682,32,1.202,33,0.765,35,0.334,36,0.031,37,0.265,38,0.59,39,0.37,47,1.928,48,0.905,50,0.49,52,1.55,53,0.299,54,0.062,55,1.008,57,4.11,58,3.822,66,0.862,68,1.162,76,0.841,77,1.073,83,0.652,85,0.912,98,0.534,99,1.084,100,1.286,121,0.017,122,0.017,124,1.41,126,0.63,141,1.928,144,1.718,145,1.718,148,1.156,149,1.582,150,1.461,151,1.35,152,2.245,153,2.488,154,1.717,158,1.249,166,1.55,181,3.304,182,3.662,186,1.998,194,1.069,195,1.352,202,1.366,218,1.718,227,0.534,243,1.401,277,2.488,279,0.932,280,2.488,286,1.882,299,1.092,300,1.008,301,0.798,302,0.932,303,1.718,305,1.55,306,1.092,311,1.55,329,1.084,350,1.869,357,3.601,361,1.156,366,1.008,389,1.869,391,2.042,396,2.557,397,1.29,398,1.41,399,1.41,400,2.349,410,1.582,454,1.092,458,1.588,459,2.245,460,2.042,461,2.019,472,2.257,475,1.092,480,1.41,481,1.29,482,1.803,483,1.41,484,1.29,485,1.29,487,1.41,488,1.41,489,1.185,490,1.41,496,2.042,497,1.55,498,2.245,500,3.284,502,2.794,515,1.41,532,1.185,534,2.21,557,1.717,591,2.793,598,1.29,628,2.042,631,2.245,647,1.55,652,2.255,653,2.914,655,2.794,660,2.197,728,1.718,729,2.197,732,1.718,745,1.86,749,3.601,769,3.383,773,2.793,778,1.718,783,2.793,793,1.718,812,1.41,913,1.55,918,1.718,919,1.718,920,1.718,921,1.718,923,1.718,935,1.41,938,2.793,939,1.718,951,1.718,985,1.718,1015,1.718,1018,1.928,1022,1.55,1027,1.718,1030,2.64,1042,2.488,1043,2.488,1047,1.55,1071,1.718,1121,1.55,1229,4.11,1230,4.11,1231,2.793,1232,3.202,1233,1.928,1234,3.764,1235,2.21,1236,3.764,1237,2.21,1238,2.21,1240,1.928,1244,2.21,1245,2.21,1252,2.21,1258,1.928,1262,2.633,1268,1.718,1269,2.21,1270,3.202,1271,3.202,1272,3.202,1273,3.764,1274,1.928,1275,2.21,1276,2.21,1277,2.21,1278,2.21,1279,1.928,1280,2.21,1281,2.21,1282,2.21,1283,2.21,1284,2.21,1285,2.21,1286,2.21,1287,2.21,1288,1.718,1289,2.21,1290,2.21,1291,2.21,1292,1.928,1293,3.202,1294,2.21,1295,3.764,1296,3.202,1297,3.202,1298,2.21,1299,2.21,1300,3.202,1301,2.21,1302,2.21,1303,2.21,1304,2.21,1305,3.202,1306,2.21,1307,2.21,1308,2.21,1309,2.21,1310,2.21,1311,3.202,1312,2.21,1313,2.21,1314,2.21,1315,2.21,1316,2.21,1317,4.567,1318,2.21,1319,2.21,1320,2.21,1321,2.21,1322,2.21,1323,2.21,1324,2.21,1325,2.21,1326,1.928,1327,2.21,1328,1.928,1329,1.928,1330,1.718,1331,1.928,1332,2.21,1333,1.928,1334,2.21,1335,3.202,1336,2.21,1337,2.793,1338,2.21,1339,3.202,1340,2.21,1341,2.21,1342,2.21,1343,2.21,1344,2.21,1345,2.21,1346,2.21,1347,2.21,1348,2.21,1349,2.21,1350,2.21,1351,2.21,1352,2.21,1353,2.21,1354,2.21,1355,2.21,1356,2.21,1357,2.21,1358,2.21,1359,2.21,1360,2.21,1361,2.21,1362,2.21,1363,2.21,1364,2.21,1365,2.21,1366,2.21,1367,2.21,1368,2.21,1369,3.202,1370,3.202,1371,3.202,1372,2.21,1373,2.21,1472,2.638,1473,2.638,1474,2.638,1475,2.21,1476,2.638,1477,2.638,1478,2.638,1479,5.228]],["title/components/MatrixDisplayComponent.html",[0,0.076,103,0.774]],["body/components/MatrixDisplayComponent.html",[0,0.133,1,0.903,2,1.23,3,0.465,4,0.362,5,1.148,6,1.148,7,1.148,8,0.412,12,1.148,13,1.732,14,1.599,15,1.061,17,1.061,19,1.333,21,1.333,23,0.466,33,0.723,36,0.031,37,0.518,38,0.412,48,0.723,50,0.762,53,0.465,54,0.097,59,3.437,61,4.321,63,1.97,68,1.061,69,1.442,70,1.141,71,1.148,72,1.654,73,1.148,75,1.442,76,0.903,77,0.979,78,1.148,79,0.979,80,1.148,81,0.903,82,0.83,83,0.638,84,1.576,85,0.979,86,1.148,87,0.979,88,0.903,89,0.979,90,1.333,91,1.654,92,0.903,93,1.148,94,0.979,95,1.148,96,0.903,97,1.148,98,0.83,99,0.903,100,0.83,101,0.979,102,1.368,103,1.411,104,1.631,105,1.148,106,0.979,107,0.979,108,0.903,109,0.83,110,0.697,111,0.903,112,1.061,113,1.148,114,0.903,115,1.061,116,0.903,117,1.061,118,1.061,119,1.061,120,1.148,121,0.024,122,0.024,165,0.957,180,4.318,190,1.704,195,1.061,226,0.635,297,2.999,329,0.903,472,2.134,557,1.843,628,2.193,642,3.356,1019,2.999,1023,4.119,1480,4.721,1481,3.437,1482,5.154,1483,5.154,1484,6.38,1485,4.102,1486,4.102,1487,4.102,1488,4.102,1489,4.102,1490,5.154,1491,5.154]],["title/components/MorphologicalOperationsAnimationComponent.html",[0,0.076,108,0.713]],["body/components/MorphologicalOperationsAnimationComponent.html",[0,0.121,1,0.446,2,0.748,3,0.229,4,0.339,5,0.567,6,0.567,7,0.567,8,0.204,12,0.567,13,1.598,14,1.476,15,0.524,17,0.811,19,0.811,21,0.811,23,0.294,24,0.44,27,2.218,29,0.524,32,1.014,33,0.876,35,0.546,36,0.031,37,0.496,38,0.625,39,0.606,45,0.938,46,0.851,48,0.857,50,0.376,53,0.229,54,0.048,55,0.774,63,1.198,66,1.614,68,0.524,69,0.877,70,1.105,71,0.567,72,1.208,73,0.567,75,0.877,76,0.95,77,1.304,78,0.567,79,0.484,80,0.567,81,0.446,82,0.41,83,0.745,84,1.073,85,1.031,86,0.567,87,0.484,88,0.446,89,0.484,90,0.811,91,1.208,92,0.446,93,0.567,94,0.484,95,0.567,96,0.446,97,0.567,98,0.41,99,0.446,100,0.41,101,0.484,102,0.446,103,0.484,104,0.524,105,0.567,106,0.484,107,0.484,108,1.086,109,1.264,110,1.129,111,0.446,112,0.524,113,0.567,114,0.446,115,0.524,116,0.446,117,1.331,118,0.524,119,0.524,120,0.567,121,0.018,122,0.014,124,1.083,126,1.115,148,1.16,149,1.588,150,1.466,151,1.355,152,2.253,154,1.723,165,0.582,166,2.901,186,2.233,194,1.634,195,1.579,197,2.044,198,2.639,200,1.65,202,1.171,205,2.05,211,2.041,212,1.875,226,0.764,227,1.129,242,1.083,243,1.41,249,2.292,286,1.526,293,1.025,294,3.215,299,0.839,300,0.774,301,0.613,302,0.716,305,1.19,306,0.839,311,1.19,312,0.948,329,0.69,350,1.875,361,1.306,362,2.901,363,2.041,366,0.774,385,2.536,389,1.875,391,2.05,397,1.875,398,2.05,399,2.05,406,2.111,410,1.787,413,1.533,414,1.408,418,1.675,419,2.626,420,2.626,431,1.533,433,1.19,435,1.19,436,2.171,437,1.19,439,0.991,441,1.319,452,2.041,453,2.111,454,0.839,455,1.533,458,1.819,459,2.901,460,2.639,461,2.39,467,2.041,471,1.533,472,1.298,473,2.283,475,1.787,476,1.842,480,1.083,481,0.991,482,0.613,483,1.083,484,0.991,485,0.991,487,1.083,488,1.083,489,0.91,490,1.083,491,1.319,496,2.639,497,1.842,498,1.842,502,2.307,514,2.292,515,2.639,516,2.811,517,2.536,518,2.536,523,2.307,526,3.609,538,1.319,557,0.91,600,1.842,602,2.811,604,2.901,609,1.533,647,1.19,660,2.283,671,2.497,678,2.507,729,2.415,732,2.497,745,2.132,746,2.041,794,2.292,812,1.083,878,2.041,891,1.533,913,1.19,914,2.626,918,2.041,919,2.041,920,2.497,921,2.497,923,2.497,926,3.213,933,2.041,935,2.639,936,2.292,939,2.497,948,2.626,949,2.626,951,2.497,954,1.697,956,3.215,962,4.563,973,1.319,974,2.253,977,2.041,978,1.697,981,3.156,985,1.319,987,1.697,988,2.292,989,1.481,990,4.457,994,1.481,996,1.697,1000,2.626,1002,1.697,1004,2.626,1006,2.626,1012,1.697,1015,1.319,1022,1.19,1027,2.041,1028,2.626,1030,1.842,1042,2.497,1043,2.811,1047,1.19,1048,1.697,1058,2.292,1062,2.292,1063,2.292,1064,3.156,1072,1.481,1179,2.626,1210,1.697,1233,2.803,1255,1.697,1258,2.292,1260,1.697,1261,1.697,1262,2.307,1263,1.697,1267,1.697,1268,1.319,1326,1.481,1328,1.481,1329,1.481,1330,2.041,1331,2.803,1333,1.481,1375,3.617,1376,3.617,1397,1.533,1492,5.253,1493,5.253,1494,3.617,1495,3.617,1496,3.617,1497,3.617,1498,3.835,1499,3.835,1500,3.609,1501,2.026,1502,2.026,1503,3.135,1504,2.026,1505,4.317,1506,2.026,1507,2.026,1508,2.026,1509,2.026,1510,2.026,1511,2.026,1512,2.026,1513,3.213,1514,3.135,1515,2.026,1516,3.135,1517,3.617,1518,2.626,1519,1.697,1520,1.697,1521,1.697,1522,1.697,1523,3.835,1524,2.026,1525,2.026,1526,2.026,1527,2.026,1528,2.026,1529,2.026,1530,2.026,1531,3.135,1532,2.026,1533,2.026,1534,3.135,1535,2.026,1536,2.026,1537,2.026,1538,2.026,1539,2.026,1540,2.026,1541,2.026,1542,2.026,1543,3.135,1544,3.135,1545,3.135]],["title/components/PageNotFoundComponent.html",[0,0.076,111,0.713]],["body/components/PageNotFoundComponent.html",[0,0.14,1,0.839,2,1.174,3,0.432,4,0.337,5,1.066,6,1.066,7,1.066,8,0.383,12,1.066,13,1.721,14,1.589,15,0.985,17,1.272,19,1.272,21,1.272,23,0.292,29,0.985,33,0.69,35,0.482,36,0.031,37,0.547,38,0.383,39,0.535,48,0.855,50,0.708,53,0.432,54,0.09,55,1.457,68,0.985,69,1.376,70,1.102,71,1.066,72,1.609,73,1.066,75,1.376,76,0.839,77,0.91,78,1.066,79,0.91,80,1.066,81,0.839,82,0.771,83,0.617,84,1.523,85,0.91,86,1.066,87,0.91,88,0.839,89,0.91,90,1.272,91,1.609,92,0.839,93,1.066,94,0.91,95,1.066,96,0.839,97,1.066,98,0.771,99,0.839,100,0.771,101,0.91,102,0.839,103,0.91,104,0.985,105,1.066,106,0.91,107,0.91,108,0.839,109,0.771,110,0.647,111,1.266,112,1.718,113,1.066,114,0.839,115,0.985,116,0.839,117,0.985,118,0.985,119,0.985,120,1.066,121,0.022,122,0.022,126,0.91,148,1.647,150,2.081,151,1.924,165,0.913,190,1.153,226,0.59,227,0.995,300,1.457,301,1.153,302,1.347,350,2.663,366,1.457,376,3.259,390,3.546,411,4.458,443,3.595,444,4.205,445,3.202,446,3.202,447,3.202,472,2.036,486,2.482,509,2.786,510,2.786,511,2.786,609,2.405,886,5.109,935,2.628,1546,4.562,1547,4.562,1548,3.193,1549,4.918,1550,4.918,1551,4.918,1552,5.753,1553,3.193,1554,3.811,1555,3.811,1556,4.918,1557,4.918,1558,4.12,1559,4.12,1560,4.918,1561,4.918,1562,4.918,1563,4.918,1564,4.918,1565,4.918,1566,4.918,1567,4.918]],["title/classes/Point.html",[54,0.076,482,0.98]],["body/classes/Point.html",[3,0.278,4,0.217,8,0.247,23,0.188,24,0.509,25,2.715,27,2.389,29,0.635,32,1.048,33,0.878,35,0.696,36,0.031,37,0.553,38,0.598,39,0.771,45,0.786,46,0.605,53,0.278,54,0.085,63,2.393,121,0.017,122,0.017,126,1.348,165,0.674,181,2.798,182,3.463,188,3.463,190,1.773,192,4.455,194,1.015,195,0.938,197,2.63,202,1.29,226,0.996,234,3.676,243,1.575,269,3.754,279,2.037,280,3.754,286,1.186,294,3.463,312,1.743,329,1.324,361,1.608,371,2.059,413,2.329,414,2.955,423,1.774,475,1.017,482,2.07,532,1.104,535,1.6,544,3.887,563,2.132,567,5.298,571,2.652,575,3.346,578,3.102,584,3.919,588,1.939,596,2.652,642,3.463,662,2.363,665,2.652,673,2.363,674,3.04,788,4.455,793,4.182,855,3.676,859,3.676,960,3.04,1056,3.153,1066,3.04,1070,3.99,1071,3.463,1121,2.132,1122,3.99,1124,2.652,1219,3.887,1228,2.652,1390,3.99,1397,2.819,1425,3.04,1517,3.04,1558,4.73,1568,2.059,1569,5.317,1570,5.645,1571,3.628,1572,4.763,1573,4.763,1574,2.457,1575,2.457,1576,3.628,1577,3.628,1578,2.457,1579,2.457,1580,3.628,1581,2.457,1582,5.863,1583,2.457,1584,4.763,1585,2.457,1586,5.645,1587,5.213,1588,3.628,1589,2.457,1590,5.317,1591,2.457,1592,3.628,1593,2.457,1594,3.628,1595,3.628,1596,3.628,1597,3.628,1598,3.628,1599,2.457,1600,4.455,1601,3.628,1602,2.457,1603,2.457,1604,3.628,1605,2.457,1606,3.628,1607,2.457,1608,3.628,1609,2.457,1610,5.5,1611,5.764,1612,5.08,1613,5.08,1614,2.457,1615,2.457,1616,2.457,1617,2.457,1618,2.457,1619,2.457,1620,3.628,1621,2.457,1622,2.457,1623,2.457]],["title/components/ShapeBitmapEditorComponent.html",[0,0.076,114,0.713]],["body/components/ShapeBitmapEditorComponent.html",[0,0.115,1,0.671,2,1.011,3,0.345,4,0.269,5,0.854,6,0.854,7,0.854,8,0.307,12,0.854,13,1.685,14,1.555,15,0.789,17,1.096,19,1.096,21,1.096,23,0.234,24,0.594,26,1.492,32,1.186,33,0.683,35,0.386,36,0.031,37,0.489,38,0.426,39,0.428,42,2.23,48,0.683,50,0.567,53,0.345,54,0.072,68,0.789,69,1.185,70,0.985,71,0.854,72,1.471,73,0.854,75,1.185,76,0.671,77,0.728,78,0.854,79,0.728,80,0.854,81,0.671,82,0.618,83,0.73,84,1.362,85,0.728,86,0.854,87,0.728,88,0.671,89,0.728,90,1.096,91,1.471,92,0.671,93,0.854,94,0.728,95,0.854,96,0.671,97,0.854,98,0.618,99,0.671,100,0.858,101,0.728,102,0.671,103,0.728,104,0.789,105,0.854,106,0.728,107,0.728,108,0.671,109,0.618,110,0.518,111,0.671,112,0.789,113,0.854,114,1.157,115,1.516,116,0.671,117,0.789,118,1.259,119,0.789,120,0.854,121,0.019,122,0.019,144,2.759,148,1.472,165,0.787,190,1.859,194,1.185,202,1.434,220,2.489,226,0.655,227,0.858,269,1.987,271,2.556,279,2.072,286,0.997,301,0.923,329,0.932,383,1.987,392,3.097,393,3.097,557,1.371,628,1.631,652,2.172,653,3.286,655,3.446,728,1.987,778,2.759,781,2.556,812,1.631,822,2.556,823,3.55,844,4.406,1231,3.558,1240,3.844,1262,2.601,1268,1.987,1279,2.23,1397,2.072,1624,4.406,1625,4.406,1626,4.867,1627,4.237,1628,4.237,1629,3.051,1630,5.525,1631,5.525,1632,3.051,1633,3.051,1634,3.051,1635,4.867,1636,4.237,1637,3.051,1638,3.051,1639,3.051,1640,3.051,1641,5.258,1642,3.051,1643,4.867,1644,3.051,1645,3.051,1646,3.55,1647,3.55,1648,3.55,1649,3.051,1650,5.258,1651,5.258,1652,5.258,1653,5.258,1654,5.258,1655,5.258,1656,3.051,1657,3.051,1658,3.051,1659,4.867,1660,3.051,1661,3.051,1662,2.556,1663,4.867,1664,3.051,1665,3.051,1666,3.051,1667,3.051,1668,3.051,1669,3.051,1670,3.051,1671,3.051,1672,3.051,1673,3.051,1674,3.051,1675,3.051,1676,3.051,1677,3.051,1678,3.051,1679,4.237,1680,3.051,1681,3.051,1682,3.051,1683,3.051,1684,3.051,1685,3.051,1686,3.051,1687,3.55,1688,3.051,1689,3.051,1690,3.051,1691,3.051,1692,5.258,1693,4.237,1694,3.051,1695,3.051,1696,3.051,1697,4.237,1698,3.051,1699,3.051,1700,3.051,1701,3.051,1702,3.051,1703,3.051,1704,3.051,1705,3.051,1706,3.051,1707,3.051,1708,5.718,1709,5.258,1710,4.867,1711,4.867,1712,4.867,1713,4.237,1714,3.051,1715,3.051,1716,3.051,1717,3.051,1718,3.051,1719,3.051]],["title/components/StructuringElementEditorComponent.html",[0,0.076,116,0.713]],["body/components/StructuringElementEditorComponent.html",[0,0.116,1,0.505,2,0.823,3,0.26,4,0.202,5,0.641,6,0.641,7,0.641,8,0.23,12,0.641,13,1.627,14,1.502,15,0.593,17,0.891,19,0.891,21,0.891,23,0.176,24,0.646,29,0.593,32,1.027,33,0.874,35,0.523,36,0.031,37,0.496,38,0.618,39,0.581,45,0.763,46,0.692,48,0.857,50,0.426,53,0.26,54,0.054,55,0.876,66,1.884,68,0.593,69,0.964,70,1.359,71,0.641,72,1.288,73,0.641,75,0.964,76,0.505,77,0.547,78,0.641,79,0.547,80,0.641,81,0.505,82,0.464,83,0.719,84,1.158,85,1.099,86,0.641,87,0.547,88,0.505,89,0.547,90,0.891,91,1.288,92,0.505,93,0.641,94,0.547,95,0.641,96,0.505,97,0.641,98,0.464,99,0.505,100,0.464,101,0.547,102,0.505,103,0.547,104,0.593,105,0.641,106,0.547,107,0.547,108,0.505,109,0.464,110,0.389,111,0.505,112,1.07,113,0.641,114,0.505,115,0.593,116,1.14,117,1.647,118,1.07,119,0.593,120,0.641,121,0.016,122,0.016,126,0.988,145,1.493,148,1.252,149,1.714,150,1.582,151,1.463,154,1.86,165,0.64,186,1.582,190,1.392,194,1.45,195,1.49,197,1.905,198,2.46,200,1.981,202,1.013,205,3.236,212,1.685,214,2.024,226,0.856,227,1.226,243,1.351,246,2.068,269,1.493,279,1.217,284,2.244,293,1.126,299,0.949,300,0.876,301,0.693,302,0.81,306,0.949,312,1.252,329,1.013,366,0.876,376,1.842,383,1.493,389,2.024,390,2.696,391,2.212,392,2.519,393,2.519,396,2.863,397,2.024,398,2.212,399,2.212,400,2.63,401,4.342,402,4.342,403,2.887,404,3.856,405,3.856,406,2.705,408,1.921,410,0.949,411,4.136,413,1.685,414,1.548,421,2.887,423,1.685,424,2.887,425,2.887,426,2.887,428,2.024,429,2.887,430,2.887,431,2.251,433,2.704,434,2.519,435,2.704,436,2.114,437,3.045,438,2.887,439,2.251,440,2.887,441,2.997,443,3.365,444,3.365,445,2.244,446,2.244,447,2.244,449,2.887,450,2.887,452,2.244,453,1.685,454,0.949,455,1.685,456,2.887,458,1.463,461,1.03,462,1.921,463,2.244,464,1.921,465,3.026,467,2.244,470,1.921,471,1.685,472,1.905,473,1.685,474,1.921,475,1.905,476,2.024,480,1.225,481,1.121,482,1.626,483,1.225,484,1.121,485,1.121,486,1.493,487,1.225,488,1.225,489,1.03,490,1.225,491,2.696,492,1.921,496,2.637,499,2.519,501,3.607,502,1.225,503,2.887,504,1.921,505,3.468,506,2.887,508,3.468,509,1.676,510,1.676,511,1.676,513,1.921,514,3.365,515,1.842,516,2.244,517,2.024,518,2.024,519,2.887,520,2.887,521,2.887,522,2.519,523,2.46,524,2.519,525,2.519,526,2.519,527,2.887,528,3.365,529,2.887,530,2.887,531,2.887,575,1.842,678,1.548,933,2.244,935,2.77,973,2.997,974,2.024,977,2.244,983,2.887,1030,2.899,1047,1.347,1228,4.136,1330,1.493,1397,1.685,1500,3.789,1518,2.887,1519,1.921,1520,1.921,1521,1.921,1522,1.921,1553,1.921,1720,5.247,1721,5.247,1722,3.445,1723,2.293,1724,2.293,1725,2.293,1726,2.293,1727,2.293,1728,2.293,1729,3.445,1730,2.293,1731,2.293,1732,3.445,1733,2.293,1734,2.293,1735,2.293,1736,2.293,1737,2.293,1738,2.293,1739,3.445,1740,4.603,1741,2.293,1742,2.293,1743,4.139,1744,2.293,1745,2.293,1746,2.293,1747,2.293,1748,2.293,1749,2.293,1750,2.293,1751,2.293,1752,2.293]],["title/injectables/ThemeService.html",[356,2.11,869,1.585]],["body/injectables/ThemeService.html",[3,0.416,4,0.324,8,0.369,14,1.145,23,0.281,24,0.673,27,2.402,29,1.382,33,0.875,35,0.464,36,0.031,37,0.369,38,0.482,39,0.515,45,0.827,46,0.75,48,0.75,50,0.681,53,0.416,54,0.138,121,0.022,122,0.022,126,1.145,143,4.145,158,1.973,165,0.891,197,2.611,211,3.125,212,2.347,225,3.507,226,0.934,227,1.148,238,3.507,242,2.564,243,1.145,246,2.156,263,4.02,312,1.11,329,1.056,349,2.39,356,3.125,361,1.617,418,3.031,453,2.952,592,4.02,652,2.004,745,1.519,869,2.347,870,2.39,876,3.931,885,4.145,891,2.347,893,3.507,894,2.682,915,3.931,945,3.507,969,4.145,1022,2.156,1110,3.908,1148,3.074,1151,4.02,1219,3.507,1435,2.682,1753,3.074,1754,5.5,1755,4.798,1756,5.346,1757,5.346,1758,5.67,1759,5.67,1760,4.798,1761,5.67,1762,4.798,1763,6.724,1764,4.798,1765,4.559,1766,3.669,1767,4.495,1768,3.669,1769,4.751,1770,4.798,1771,3.669,1772,3.669,1773,3.669,1774,4.798,1775,5.67,1776,4.798,1777,5.346,1778,3.669,1779,4.798,1780,4.798,1781,3.669,1782,4.798,1783,3.669,1784,3.669,1785,3.669,1786,3.669,1787,3.669,1788,3.669,1789,4.798,1790,5.346,1791,3.669,1792,3.669,1793,3.669,1794,3.669,1795,3.669,1796,4.798,1797,3.669]],["title/classes/UndoRedo.html",[54,0.076,1798,2.369]],["body/classes/UndoRedo.html",[3,0.439,4,0.343,8,0.39,23,0.297,24,0.698,29,1.003,32,1.157,33,0.859,35,0.629,36,0.031,37,0.5,38,0.582,39,0.812,45,0.896,46,0.698,53,0.439,54,0.091,55,1.483,110,0.983,121,0.023,122,0.023,126,1.311,158,2.003,165,0.924,188,3.239,189,4.014,214,3.891,226,0.994,227,1.007,243,1.463,312,1.504,413,2.432,414,2.235,428,2.922,445,3.771,454,2.638,469,4.014,532,1.743,538,3.575,727,4.852,1121,3.707,1166,4.167,1167,3.25,1168,3.25,1220,5.534,1221,5.286,1292,2.836,1337,4.696,1559,4.167,1798,4.233,1799,3.25,1800,3.879,1801,3.879,1802,3.879,1803,6.585,1804,3.879,1805,6.585,1806,5.49,1807,5.49,1808,5.791,1809,3.879,1810,4.974,1811,4.167,1812,3.879,1813,4.974,1814,3.879,1815,4.974,1816,4.974,1817,4.974,1818,3.879,1819,5.49,1820,3.879,1821,4.6,1822,3.879,1823,4.974,1824,3.879,1825,4.974,1826,3.879,1827,3.879]],["title/coverage.html",[1828,3.7]],["body/coverage.html",[0,0.156,1,0.839,8,0.383,9,3.193,10,2.482,11,3.595,36,0.031,38,0.383,54,0.149,70,0.995,76,0.839,79,0.91,81,0.839,83,0.674,85,0.91,87,0.91,88,0.839,90,1.488,92,0.839,94,0.91,96,0.839,98,0.771,100,1.164,101,0.91,102,0.839,103,0.91,106,0.91,108,0.839,110,0.835,111,0.839,114,0.839,116,0.839,121,0.022,122,0.022,123,3.193,124,2.037,125,3.193,202,1.41,220,3.763,243,0.91,348,3.193,356,2.482,381,3.193,382,3.193,383,3.746,410,1.578,458,1.347,482,1.153,489,1.712,533,4.12,621,2.482,722,2.786,723,3.193,724,4.715,769,2.239,810,2.786,811,2.786,869,2.663,871,3.193,872,3.193,881,3.193,911,3.193,912,3.193,913,3.499,1017,2.786,1023,2.786,1067,3.193,1068,3.193,1103,3.193,1106,2.786,1107,3.193,1154,3.193,1229,3.595,1230,3.595,1262,2.037,1374,3.193,1386,3.193,1397,1.864,1417,2.786,1418,2.786,1449,3.193,1480,3.193,1481,3.193,1492,3.193,1493,3.193,1500,2.786,1546,3.193,1547,3.193,1548,3.193,1568,3.193,1624,3.193,1625,3.193,1662,5.635,1720,3.193,1721,3.193,1753,3.193,1798,2.786,1799,3.193,1828,3.193,1829,3.193,1830,3.811,1831,4.918,1832,3.193,1833,4.12,1834,3.193,1835,5.753,1836,3.193,1837,2.482,1838,3.811,1839,3.811,1840,3.811,1841,3.811,1842,3.811,1843,3.811,1844,3.811,1845,3.811,1846,3.811,1847,3.811,1848,3.811,1849,3.811,1850,3.811,1851,3.811,1852,3.811,1853,3.811,1854,3.811,1855,3.811,1856,3.811,1857,3.811,1858,3.811,1859,3.811,1860,3.811,1861,3.811,1862,3.811,1863,4.918,1864,3.811,1865,3.811,1866,3.811,1867,4.562,1868,6.406,1869,3.193,1870,5.109,1871,3.193,1872,3.193,1873,3.193,1874,3.193,1875,3.811,1876,3.811,1877,3.811,1878,3.811,1879,3.811,1880,3.811,1881,3.193,1882,3.811,1883,3.811]],["title/dependencies.html",[1884,2.27,1885,3.264]],["body/dependencies.html",[36,0.031,50,0.912,121,0.026,122,0.026,299,2.032,366,1.876,1025,4.113,1026,3.197,1170,4.113,1171,4.113,1201,4.113,1217,4.113,1218,4.113,1274,3.589,1885,4.113,1886,4.909,1887,5.747,1888,4.909,1889,6.591,1890,4.909,1891,4.909,1892,5.747,1893,4.815,1894,4.909,1895,4.909,1896,4.909,1897,4.909,1898,4.909,1899,4.909,1900,4.909,1901,4.909,1902,4.909,1903,4.909,1904,4.909,1905,4.909,1906,4.909,1907,4.909,1908,4.909,1909,4.909]],["title/miscellaneous/enumerations.html",[1910,1.448,1911,3.264]],["body/miscellaneous/enumerations.html",[23,0.348,36,0.031,45,0.702,46,0.948,82,1.11,83,0.514,109,0.919,110,0.771,121,0.025,122,0.025,244,4.476,293,1.484,379,2.956,436,1.735,472,1.879,543,3.319,561,3.319,598,2.883,600,2.667,678,2.04,729,2.683,745,1.879,747,4.01,868,4.01,915,2.956,1020,3.572,1021,3.572,1056,4.01,1057,4.596,1288,2.956,1383,4.476,1400,3.319,1494,4.596,1495,4.596,1496,4.596,1497,4.596,1513,4.596,1754,4.939,1765,4.01,1767,4.01,1910,2.426,1911,3.803,1912,6.371,1913,4.54,1914,6.371,1915,4.596,1916,4.596,1917,4.596,1918,3.803,1919,3.803,1920,4.596,1921,4.596,1922,4.54,1923,4.54,1924,4.596,1925,4.596]],["title/miscellaneous/functions.html",[1192,2.848,1910,1.448]],["body/miscellaneous/functions.html",[4,0.297,23,0.257,32,1.196,35,0.784,36,0.03,37,0.63,38,0.623,39,0.87,45,0.847,46,0.915,82,0.681,83,0.721,121,0.025,122,0.021,126,1.48,186,1.285,194,1.432,195,1.171,202,0.74,212,2.796,220,3.008,226,0.959,227,0.681,243,1.081,286,1.099,293,1.869,297,3.742,361,1.966,414,1.511,433,2.66,436,2.416,439,1.645,454,1.392,458,1.935,473,1.645,536,2.458,543,4.305,544,3.31,545,2.817,561,4.004,563,3.218,572,3.567,575,1.797,587,2.817,588,1.797,598,3.064,600,1.976,602,2.19,603,5.368,604,3.008,609,1.645,671,2.19,673,3.334,678,2.035,713,3.794,724,4.684,725,2.817,729,2.679,745,2.691,746,3.334,747,2.458,787,2.66,810,3.31,811,3.31,827,2.817,868,2.458,874,2.817,956,2.949,1020,3.835,1021,3.835,1026,2.19,1058,2.458,1108,4.146,1169,4.589,1175,2.817,1187,2.19,1190,3.794,1192,4.004,1262,2.42,1288,2.19,1383,3.31,1400,3.31,1417,3.31,1418,3.31,1435,2.458,1646,3.794,1647,3.794,1648,3.794,1765,3.742,1767,4.179,1769,4.589,1833,4.589,1867,2.817,1869,3.794,1870,2.817,1871,3.794,1872,4.289,1873,3.794,1874,3.794,1881,2.817,1910,1.797,1915,2.817,1916,2.817,1917,2.817,1918,3.794,1919,4.79,1920,2.817,1921,2.817,1924,2.817,1925,2.817,1926,5.889,1927,5.12,1928,3.363,1929,3.363,1930,5.717,1931,3.363,1932,3.363,1933,3.363,1934,3.363,1935,3.363,1936,3.363,1937,3.363,1938,3.363,1939,3.363,1940,4.528,1941,3.363,1942,3.363,1943,3.363,1944,3.363,1945,3.363,1946,3.363,1947,4.528,1948,3.363,1949,3.363,1950,3.363,1951,3.363,1952,3.363,1953,3.363,1954,3.363,1955,4.528,1956,3.363,1957,4.528,1958,4.528,1959,4.528,1960,4.528,1961,3.363,1962,3.363,1963,3.363,1964,3.363,1965,3.363,1966,3.363,1967,3.363,1968,3.363,1969,3.363,1970,3.363,1971,3.363,1972,3.363,1973,3.363,1974,3.363]],["title/index.html",[23,0.248,1975,3.241]],["body/index.html",[0,0.135,2,1.026,4,0.38,35,0.543,36,0.024,45,0.665,77,1.026,83,0.487,89,1.026,99,0.946,100,0.87,107,1.026,109,0.87,110,0.901,112,1.111,119,1.111,121,0.024,122,0.024,127,3.141,130,3.6,132,3.878,134,3.6,136,2.798,137,3.141,209,3.6,235,3.6,243,1.026,244,3.141,362,3.381,363,3.748,365,3.141,378,2.798,379,2.798,384,3.6,463,2.798,524,4.207,525,3.878,572,3.455,659,3.6,710,3.6,712,3.6,875,3.141,876,2.798,891,2.102,915,3.913,1026,4.02,1072,3.141,1078,3.141,1124,3.141,1133,3.6,1181,5.035,1194,3.6,1196,3.6,1475,3.6,1587,4.445,1600,5.268,1687,3.6,1811,3.6,1821,3.6,1829,3.6,1893,3.6,1976,4.297,1977,5.755,1978,4.297,1979,4.297,1980,4.297,1981,4.297,1982,4.297,1983,4.297,1984,3.6,1985,4.297,1986,4.297,1987,4.297,1988,4.297,1989,4.297,1990,4.297,1991,4.297,1992,4.297,1993,4.297,1994,4.297,1995,4.297,1996,4.297,1997,4.297,1998,4.297,1999,4.297,2000,4.297,2001,4.297,2002,4.297,2003,4.297,2004,4.297,2005,4.297,2006,4.297,2007,4.297,2008,4.297,2009,4.297,2010,4.297,2011,5.305,2012,5.755,2013,6.173,2014,6.173,2015,4.297,2016,5.305,2017,4.297,2018,4.297,2019,4.297,2020,4.297,2021,4.297,2022,4.297,2023,4.297,2024,4.297,2025,5.305,2026,5.305,2027,5.755,2028,4.297,2029,4.297,2030,4.297,2031,4.297,2032,4.297,2033,4.297,2034,4.297,2035,4.297,2036,4.297,2037,4.297,2038,4.297,2039,4.297,2040,4.297,2041,5.305,2042,4.297,2043,4.297,2044,4.297,2045,4.297,2046,5.305,2047,6.009,2048,4.297,2049,4.297,2050,4.297,2051,4.297,2052,4.297,2053,4.297,2054,4.297,2055,3.141,2056,4.297]],["title/modules.html",[2057,3.7]],["body/modules.html",[36,0.027,121,0.027,122,0.027,2057,4.428]],["title/overview.html",[2055,3.228]],["body/overview.html",[2,1.251,36,0.027,121,0.027,122,0.027,202,1.153,460,2.801,532,2.355,870,3.413,1397,2.563,2055,3.831,2058,5.241]],["title/properties.html",[24,0.546,1884,2.27]],["body/properties.html",[24,0.739,36,0.029,121,0.027,122,0.027,2059,5.266,2060,5.266]],["title/routes.html",[1837,2.876]],["body/routes.html",[36,0.027,121,0.027,122,0.027,1837,3.442]],["title/miscellaneous/variables.html",[1187,2.537,1910,1.448]],["body/miscellaneous/variables.html",[0,0.156,23,0.334,36,0.031,38,0.538,45,0.828,46,0.751,70,0.882,81,1.177,82,1.083,87,1.277,88,0.959,89,1.04,92,0.959,94,1.04,96,0.959,98,0.882,99,0.959,100,0.882,106,1.04,107,1.04,108,0.959,109,0.882,110,0.74,111,0.959,114,0.959,115,1.127,116,0.959,117,1.127,118,1.497,121,0.024,122,0.024,195,1.384,218,2.838,373,3.185,376,2.86,378,2.838,379,3.484,1187,2.838,1832,3.651,1834,4.483,1836,3.651,1837,3.771,1910,2.329,1984,3.651,2061,4.358,2062,4.358,2063,4.358,2064,4.358,2065,4.358,2066,4.358,2067,4.358,2068,5.79,2069,4.358,2070,4.358,2071,4.358,2072,4.358,2073,5.351,2074,4.358,2075,4.358,2076,4.358,2077,4.358,2078,4.358,2079,4.358,2080,4.358,2081,4.358,2082,4.358,2083,4.358,2084,4.358,2085,4.358,2086,4.358,2087,4.358,2088,6.667,2089,5.351,2090,4.358,2091,4.358,2092,4.358]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["0.0.0",{"_index":2060,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":275,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.15.0",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":276,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.5",{"_index":277,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["0.75",{"_index":278,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.99;//7512",{"_index":1695,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["0/1",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1831,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["0?cell",{"_index":67,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["1",{"_index":190,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/MatrixDisplayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["1)/2",{"_index":65,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["1/1",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":281,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{}}}],["100",{"_index":1662,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1642,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["120",{"_index":1651,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["128",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["13/24",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":47,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["15/15",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1659,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["16",{"_index":478,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["16/16",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":2058,"title":{},"body":{"overview.html":{}}}],["18/18",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["19.2.19",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["1][col",{"_index":1491,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["1][x",{"_index":1712,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["2",{"_index":279,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["2.0.2",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":771,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["200",{"_index":1650,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["222",{"_index":763,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["23/23",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["244",{"_index":1966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["248",{"_index":1965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["25",{"_index":1135,"title":{},"body":{"injectables/HistoryService.html":{}}}],["25/25",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":271,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["255",{"_index":186,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["26/26",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["27/27",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["280",{"_index":1657,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["29/29",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":535,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["3",{"_index":1397,"title":{},"body":{"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["3.0.0",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1371,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["30/30",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":1963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["31/31",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["3x3",{"_index":1466,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["4",{"_index":269,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["4.0.0",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":515,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["400",{"_index":1663,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["404",{"_index":1556,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40?'30px':'0",{"_index":1378,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["40?\\'30px\\':\\'0",{"_index":1384,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["5",{"_index":280,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["5/5",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":469,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"classes/UndoRedo.html":{}}}],["500",{"_index":1644,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["54",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["59/59",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["5x5",{"_index":1467,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["636363ff",{"_index":1534,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["650px",{"_index":1032,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["66",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["74777f",{"_index":751,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["75",{"_index":1732,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["7x7",{"_index":1468,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["8/8",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1652,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["9",{"_index":460,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"overview.html":{}}}],["9/9",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":59,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["_currentspeedindex",{"_index":159,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_divider",{"_index":1387,"title":{},"body":{"classes/Kernel.html":{}}}],["_dragarea",{"_index":676,"title":{},"body":{"classes/Bitmap.html":{}}}],["_height",{"_index":548,"title":{},"body":{"classes/Bitmap.html":{}}}],["_id",{"_index":394,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["_interval",{"_index":160,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_kernel",{"_index":1388,"title":{},"body":{"classes/Kernel.html":{}}}],["_matrix",{"_index":549,"title":{},"body":{"classes/Bitmap.html":{}}}],["_selected",{"_index":675,"title":{},"body":{"classes/Bitmap.html":{}}}],["_size",{"_index":1389,"title":{},"body":{"classes/Kernel.html":{}}}],["_speeds",{"_index":161,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_storagekey",{"_index":877,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["_timeoutid",{"_index":162,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_width",{"_index":550,"title":{},"body":{"classes/Bitmap.html":{}}}],["a.votes",{"_index":1367,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["above",{"_index":838,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["absolute",{"_index":1381,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["access",{"_index":417,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{}}}],["accessed",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["accessing",{"_index":536,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["accessors",{"_index":558,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["accumulator",{"_index":15,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["accumulator.length",{"_index":64,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["accumulator[0",{"_index":60,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["accumulatordialogcomponent",{"_index":1,"title":{"components/AccumulatorDialogComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["action",{"_index":1117,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["actions",{"_index":527,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["activated",{"_index":416,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["activatedroute",{"_index":408,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["add",{"_index":1122,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{}}}],["add(other",{"_index":1580,"title":{},"body":{"classes/Point.html":{}}}],["added",{"_index":1933,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":658,"title":{},"body":{"classes/Bitmap.html":{}}}],["address",{"_index":1560,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["adds",{"_index":662,"title":{},"body":{"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["addtohistory",{"_index":1111,"title":{},"body":{"injectables/HistoryService.html":{}}}],["addtohistory(action",{"_index":1115,"title":{},"body":{"injectables/HistoryService.html":{}}}],["adjustment",{"_index":135,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["advanced",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["advances",{"_index":948,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["afterviewinit",{"_index":1231,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["against",{"_index":802,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["algorithm",{"_index":1994,"title":{},"body":{"index.html":{}}}],["algorithms",{"_index":1988,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":136,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["along",{"_index":1473,"title":{},"body":{"classes/Line.html":{}}}],["alpha",{"_index":1683,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["analysis",{"_index":1990,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1026,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/cdk",{"_index":1886,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":299,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1891,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":300,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/card",{"_index":301,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/checkbox",{"_index":487,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/dialog",{"_index":52,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["angular/material/divider",{"_index":486,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/form",{"_index":484,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/icon",{"_index":302,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/input",{"_index":303,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["angular/material/list",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["angular/material/menu",{"_index":304,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["angular/material/select",{"_index":305,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["angular/material/sidenav",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/slider",{"_index":306,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/tabs",{"_index":1275,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["angular/material/toolbar",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":166,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation",{"_index":77,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["animation'},{'name",{"_index":91,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["animation.component.css",{"_index":919,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.html",{"_index":918,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts",{"_index":913,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animation.component.ts:105",{"_index":1504,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:106",{"_index":979,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:118",{"_index":1502,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:124",{"_index":1250,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:126",{"_index":982,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:134",{"_index":947,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:164",{"_index":1241,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:167",{"_index":975,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:169",{"_index":1509,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:175",{"_index":957,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:186",{"_index":1254,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:187",{"_index":1266,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:188",{"_index":1253,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:191",{"_index":952,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:196",{"_index":1507,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:205",{"_index":986,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:217",{"_index":968,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:233",{"_index":963,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:255",{"_index":1242,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:258",{"_index":1243,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:261",{"_index":1246,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:265",{"_index":1251,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:278",{"_index":1248,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:287",{"_index":1249,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:297",{"_index":1478,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:298",{"_index":1479,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:41",{"_index":1512,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:43",{"_index":1511,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:45",{"_index":1515,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:46",{"_index":1256,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:47",{"_index":1261,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:48",{"_index":1257,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:49",{"_index":989,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:51",{"_index":992,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:52",{"_index":1260,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:53",{"_index":1001,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:54",{"_index":1267,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:55",{"_index":1264,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:56",{"_index":1265,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:57",{"_index":1013,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:58",{"_index":1263,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:59",{"_index":991,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:60",{"_index":1255,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:61",{"_index":1259,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:62",{"_index":994,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:64",{"_index":1012,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:66",{"_index":1002,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:68",{"_index":996,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:71",{"_index":1510,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:72",{"_index":1247,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:73",{"_index":1000,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:75",{"_index":1008,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:77",{"_index":1009,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:79",{"_index":1011,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:81",{"_index":1005,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:83",{"_index":1003,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:88",{"_index":940,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:92",{"_index":1508,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:99",{"_index":1506,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation/convolutional",{"_index":912,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["animation/hough",{"_index":1230,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["animation/median",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["animation/morphological",{"_index":1493,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animationcontrollercomponent",{"_index":76,"title":{"components/AnimationControllerComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["animationindex",{"_index":920,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["another",{"_index":1582,"title":{},"body":{"classes/Point.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["app.component.css",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":79,"title":{"components/AppComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":915,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["applicationconfig",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":956,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["appliedbitmap",{"_index":1498,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["applies",{"_index":602,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply",{"_index":604,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply(apply",{"_index":1503,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["apply(bitmap",{"_index":1399,"title":{},"body":{"classes/Kernel.html":{}}}],["applyfilter",{"_index":929,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applyfilter(length",{"_index":950,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applying",{"_index":600,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["area",{"_index":623,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["area.ts",{"_index":1068,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["area.ts:10",{"_index":1079,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:12",{"_index":1088,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:14",{"_index":1085,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:20",{"_index":1092,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:32",{"_index":1090,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:6",{"_index":1087,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:8",{"_index":1080,"title":{},"body":{"classes/DragArea.html":{}}}],["around",{"_index":971,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["array",{"_index":539,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{}}}],["array(math.ceil(256",{"_index":716,"title":{},"body":{"classes/Bitmap.html":{}}}],["array(thetas.length).fill(0",{"_index":1338,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(new",{"_index":1340,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(point.zero",{"_index":1342,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(w).fill(infinity",{"_index":1703,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["array(width).fill(defaultvalue",{"_index":629,"title":{},"body":{"classes/Bitmap.html":{}}}],["array.from",{"_index":628,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["array.from(this._selected).map(pos",{"_index":683,"title":{},"body":{"classes/Bitmap.html":{}}}],["arrow_back",{"_index":1562,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["artifacts",{"_index":2036,"title":{},"body":{"index.html":{}}}],["asterisk",{"_index":1065,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["auto",{"_index":1063,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["automatically",{"_index":2020,"title":{},"body":{"index.html":{}}}],["available",{"_index":1821,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["axis",{"_index":1693,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["b",{"_index":1365,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["b(x",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["b(y",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{}}}],["b.votes",{"_index":1366,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["back",{"_index":444,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["background",{"_index":757,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["backward",{"_index":257,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["base",{"_index":1058,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":212,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["beginning",{"_index":265,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["begin{bmatrix",{"_index":1438,"title":{},"body":{"classes/Kernel.html":{}}}],["behavior",{"_index":209,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["being",{"_index":455,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["believe",{"_index":1566,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["better",{"_index":790,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["between",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{}}}],["binary",{"_index":82,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["binarybitmapeditorcomponent",{"_index":81,"title":{"components/BinaryBitmapEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmap",{"_index":83,"title":{"classes/Bitmap.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bitmap'},{'name",{"_index":86,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap.cells().foreach(p",{"_index":1343,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.dragarea.button",{"_index":832,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.get(row",{"_index":825,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.getbinary(p",{"_index":1344,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.height",{"_index":498,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmap.isdragged(cell",{"_index":818,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.down",{"_index":852,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.left",{"_index":858,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.right",{"_index":862,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.up",{"_index":842,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isselected(cell",{"_index":820,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.width",{"_index":1336,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap/bitmap.component",{"_index":480,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap_storage",{"_index":409,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapcomponent",{"_index":85,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmapcomponenttick",{"_index":395,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapeditorcomponent",{"_index":87,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmapkey",{"_index":921,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmaprenderer",{"_index":722,"title":{"classes/BitmapRenderer.html":{}},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["bitmaps",{"_index":385,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorage",{"_index":939,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorageservice",{"_index":410,"title":{"injectables/BitmapStorageService.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmaptick",{"_index":1233,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["black",{"_index":386,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["blank",{"_index":429,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["body",{"_index":1435,"title":{},"body":{"classes/Kernel.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["body.classlist.add(`${theme",{"_index":1794,"title":{},"body":{"injectables/ThemeService.html":{}}}],["body.classlist.remove('light",{"_index":1793,"title":{},"body":{"injectables/ThemeService.html":{}}}],["boolean",{"_index":194,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["bordercolor",{"_index":1319,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["both",{"_index":1124,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{},"index.html":{}}}],["bottom",{"_index":849,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["boundaries",{"_index":999,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["bounds",{"_index":544,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["browser",{"_index":1893,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["brzegu",{"_index":1705,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["build",{"_index":524,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["buildthis",{"_index":2034,"title":{},"body":{"index.html":{}}}],["built",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["button",{"_index":1073,"title":{},"body":{"classes/DragArea.html":{}}}],["buttons",{"_index":438,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["c",{"_index":633,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["c1cce5",{"_index":754,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["calculated",{"_index":707,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculates",{"_index":706,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculating",{"_index":669,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculations",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":528,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cansave",{"_index":401,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["canvas",{"_index":728,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1279,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.height",{"_index":1643,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.width",{"_index":1641,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvasref",{"_index":1626,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["canvasrenderingcontext2d",{"_index":775,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["catch",{"_index":910,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["ccc",{"_index":772,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ceil",{"_index":1925,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":66,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cell.col",{"_index":634,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cell.row",{"_index":641,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cellclicked)=\"oncellclicked($event",{"_index":1064,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["cellclicked)=\"oncellentered($event",{"_index":520,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cellentered)=\"oncellentered($event",{"_index":519,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cells",{"_index":551,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["center",{"_index":864,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["centered",{"_index":970,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["change",{"_index":1819,"title":{},"body":{"classes/UndoRedo.html":{}}}],["changes",{"_index":143,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["chart",{"_index":1234,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart(ctx",{"_index":1281,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart.js",{"_index":1274,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"dependencies.html":{}}}],["chart.register(linecontroller",{"_index":1277,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["check",{"_index":609,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":542,"title":{},"body":{"classes/Bitmap.html":{}}}],["checks",{"_index":423,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["chroma",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["chroma.js",{"_index":1960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":54,"title":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["classes",{"_index":532,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{},"overview.html":{}}}],["classroom",{"_index":2008,"title":{},"body":{"index.html":{}}}],["cleaning_services",{"_index":514,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cleans",{"_index":233,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["clear",{"_index":402,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clearhistory",{"_index":1112,"title":{},"body":{"injectables/HistoryService.html":{}}}],["clears",{"_index":428,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["clearselection",{"_index":704,"title":{},"body":{"classes/Bitmap.html":{}}}],["cleartimeout(this._timeoutid",{"_index":335,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["cli",{"_index":2027,"title":{},"body":{"index.html":{}}}],["click",{"_index":974,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clicked",{"_index":977,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clip",{"_index":1322,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["clipboard",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["clipping",{"_index":1920,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":1390,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["clone._divider",{"_index":1427,"title":{},"body":{"classes/Kernel.html":{}}}],["close",{"_index":1451,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["closing",{"_index":1497,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":2025,"title":{},"body":{"index.html":{}}}],["col",{"_index":642,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MatrixDisplayComponent.html":{},"classes/Point.html":{}}}],["colindex",{"_index":1430,"title":{},"body":{"classes/Kernel.html":{}}}],["color",{"_index":745,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale",{"_index":729,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale.binary",{"_index":1258,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["colorscale.grayscale",{"_index":743,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["column",{"_index":584,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["columns",{"_index":568,"title":{},"body":{"classes/Bitmap.html":{}}}],["command",{"_index":2047,"title":{},"body":{"index.html":{}}}],["commit",{"_index":526,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["compare",{"_index":1590,"title":{},"body":{"classes/Point.html":{}}}],["comparison",{"_index":1007,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["compile",{"_index":2035,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2030,"title":{},"body":{"index.html":{}}}],["complex",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodocadditional",{"_index":2050,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":73,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["compute",{"_index":967,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["computes",{"_index":964,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["concepts",{"_index":1983,"title":{},"body":{"index.html":{}}}],["considered",{"_index":587,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["console.log(dist.length",{"_index":1689,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["console.log(medial",{"_index":1701,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["const",{"_index":652,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["constants",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["constructor(bitmapstorage",{"_index":1501,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["constructor(dialog",{"_index":937,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["constructor(dialogref",{"_index":30,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["constructor(limit",{"_index":1809,"title":{},"body":{"classes/UndoRedo.html":{}}}],["constructor(private",{"_index":55,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["constructor(public",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"classes/Point.html":{}}}],["constructor(rho",{"_index":1477,"title":{},"body":{"classes/Line.html":{}}}],["constructor(route",{"_index":407,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["constructor(router",{"_index":1553,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["constructor(row",{"_index":1574,"title":{},"body":{"classes/Point.html":{}}}],["constructor(size",{"_index":1393,"title":{},"body":{"classes/Kernel.html":{}}}],["constructor(themeservice",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(width",{"_index":559,"title":{},"body":{"classes/Bitmap.html":{}}}],["containing",{"_index":439,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":1951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["context",{"_index":779,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["continue",{"_index":822,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["continuously",{"_index":140,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["contrasting",{"_index":1956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control",{"_index":138,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller",{"_index":147,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller'},{'name",{"_index":78,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["controller.component",{"_index":1015,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["controller.component.css",{"_index":157,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.html",{"_index":156,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts",{"_index":125,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:102",{"_index":268,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:109",{"_index":259,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:115",{"_index":261,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:122",{"_index":262,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:131",{"_index":247,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:136",{"_index":252,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:141",{"_index":228,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:145",{"_index":231,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:154",{"_index":210,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:170",{"_index":232,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":287,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:38",{"_index":288,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:40",{"_index":291,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:43",{"_index":196,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:46",{"_index":191,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:48",{"_index":187,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:50",{"_index":199,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:53",{"_index":203,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:55",{"_index":204,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:60",{"_index":283,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":282,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:64",{"_index":270,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":272,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:71",{"_index":237,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:79",{"_index":241,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:89",{"_index":258,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:96",{"_index":255,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller/animation",{"_index":124,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["controls",{"_index":128,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{}}}],["convert",{"_index":593,"title":{},"body":{"classes/Bitmap.html":{}}}],["converts",{"_index":1608,"title":{},"body":{"classes/Point.html":{}}}],["convolution",{"_index":961,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["convolutional",{"_index":89,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["convolutionalfilteranimationcomponent",{"_index":88,"title":{"components/ConvolutionalFilterAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":788,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/Point.html":{}}}],["coordinates",{"_index":793,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["copied",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{}}}],["copies",{"_index":566,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["copy",{"_index":571,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["corresponding",{"_index":592,"title":{},"body":{"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["cos",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["counter",{"_index":466,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["course",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1828,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{}}}],["creatediagonalpattern",{"_index":733,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creatediagonalpattern(size",{"_index":765,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creates",{"_index":413,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["crossword",{"_index":1543,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["css",{"_index":1769,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["csv",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["ctrl",{"_index":1082,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["ctrlkey",{"_index":1074,"title":{},"body":{"classes/DragArea.html":{}}}],["ctx",{"_index":778,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.beginpath",{"_index":844,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.closepath",{"_index":1655,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(120",{"_index":1660,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(200",{"_index":1649,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(280",{"_index":1656,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(290",{"_index":1658,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fill",{"_index":1654,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(300",{"_index":1664,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(350",{"_index":1665,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(500",{"_index":1661,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(math.round((col",{"_index":837,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.fillrect(x",{"_index":1702,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillstyle",{"_index":823,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.getimagedata(0",{"_index":1670,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.imagesmoothingenabled",{"_index":1645,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.linejoin",{"_index":867,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(((col",{"_index":847,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(math.round((col",{"_index":854,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.moveto(((col",{"_index":845,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.moveto(math.round((col",{"_index":853,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.stroke",{"_index":848,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.strokestyle",{"_index":824,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.textalign",{"_index":863,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.textbaseline",{"_index":865,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["current",{"_index":197,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["currently",{"_index":289,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["cursor",{"_index":795,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["custom",{"_index":1932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["czy",{"_index":1674,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["d",{"_index":1708,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dane",{"_index":1667,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dark",{"_index":1767,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["dark)').matches",{"_index":1787,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkpattern",{"_index":829,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["data",{"_index":26,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["data[idx",{"_index":1681,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["datapoints",{"_index":1306,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datapoints.map(p",{"_index":1312,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datasets",{"_index":1282,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["declarecustomfunctions",{"_index":1871,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarecustomfunctions(parser",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declares",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["decreases",{"_index":248,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["deeper",{"_index":1998,"title":{},"body":{"index.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulting",{"_index":1764,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultvalue",{"_index":561,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["demonstrations",{"_index":2009,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":1885,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":126,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["deselecting",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["deselects",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["designed",{"_index":1980,"title":{},"body":{"index.html":{}}}],["destination",{"_index":951,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.isout(pixel.cell",{"_index":1539,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.set(pixel.cell",{"_index":1541,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destroyed",{"_index":236,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["detailed",{"_index":2052,"title":{},"body":{"index.html":{}}}],["details",{"_index":441,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["determines",{"_index":1955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["development",{"_index":2011,"title":{},"body":{"index.html":{}}}],["devicepixelratio",{"_index":1284,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diaglen",{"_index":1352,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diagonal",{"_index":768,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["dialog",{"_index":16,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["dialog'},{'name",{"_index":75,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["dialog.component",{"_index":1018,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["dialog.component.css",{"_index":22,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialog.component.html",{"_index":20,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialog.component.ts",{"_index":11,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":41,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":34,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":44,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1457,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1458,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1460,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1453,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1456,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1454,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1455,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog/accumulator",{"_index":10,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["dialog/kernel",{"_index":1017,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":40,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1036,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["dialogs/accumulator",{"_index":1276,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["dialogs/kernel",{"_index":1016,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["difference",{"_index":1517,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["different",{"_index":244,"title":{},"body":{"components/AnimationControllerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["dilation",{"_index":1494,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dimensions",{"_index":546,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":71,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["directory",{"_index":2037,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":1033,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display",{"_index":472,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display'},{'name",{"_index":105,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["display.component",{"_index":1024,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display.component.css",{"_index":1483,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.html",{"_index":1482,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts",{"_index":1481,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:11",{"_index":1486,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts:13",{"_index":1487,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display/matrix",{"_index":1023,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["displayed",{"_index":198,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["displaying",{"_index":1004,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["dist",{"_index":1687,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"index.html":{}}}],["dist[y",{"_index":1711,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["dist[y][x",{"_index":1710,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distance",{"_index":1686,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distancetransform",{"_index":1627,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["distancetransform(isinside",{"_index":1628,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["divider",{"_index":1392,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["divider(value",{"_index":1421,"title":{},"body":{"classes/Kernel.html":{}}}],["document's",{"_index":1974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document.body",{"_index":1792,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.getelementbyid('bitmapchart",{"_index":1278,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["documentation",{"_index":1829,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["down",{"_index":1570,"title":{},"body":{"classes/Point.html":{}}}],["dołu",{"_index":1716,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["drag",{"_index":622,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["drag_area",{"_index":682,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragarea",{"_index":621,"title":{"classes/DragArea.html":{}},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"coverage.html":{}}}],["dragarea(drag_area",{"_index":681,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragend",{"_index":1075,"title":{},"body":{"classes/DragArea.html":{}}}],["draggable",{"_index":1069,"title":{},"body":{"classes/DragArea.html":{}}}],["dragged",{"_index":687,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragging",{"_index":661,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragstart",{"_index":1076,"title":{},"body":{"classes/DragArea.html":{}}}],["draw",{"_index":781,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawgrid",{"_index":734,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawgrid(ctx",{"_index":774,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawing",{"_index":753,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawn",{"_index":750,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["draws",{"_index":777,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstring",{"_index":735,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstring(ctx",{"_index":782,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["duplicates",{"_index":1119,"title":{},"body":{"injectables/HistoryService.html":{}}}],["during",{"_index":1084,"title":{},"body":{"classes/DragArea.html":{}}}],["dynamic",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["e.g",{"_index":1970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":471,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["edge",{"_index":1057,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit",{"_index":981,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["edit/:id",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edited",{"_index":456,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editing",{"_index":384,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"index.html":{}}}],["editor",{"_index":118,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'name",{"_index":84,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.css",{"_index":393,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.html",{"_index":392,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts",{"_index":383,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:104",{"_index":1724,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:106",{"_index":451,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:108",{"_index":1632,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":1730,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":1723,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":1727,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:130",{"_index":1731,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:14",{"_index":1637,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":1634,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:35",{"_index":462,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":464,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":1735,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":470,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":477,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":474,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1734,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":479,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":1733,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":468,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":1736,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":412,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":1722,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":432,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":1726,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":427,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":1725,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:88",{"_index":448,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:92",{"_index":1728,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:94",{"_index":422,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":442,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor/binary",{"_index":382,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/bitmap",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["editor/shape",{"_index":1625,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/structuring",{"_index":1721,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["educational",{"_index":1978,"title":{},"body":{"index.html":{}}}],["effect",{"_index":296,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["effects",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":70,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":1635,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["emits",{"_index":245,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["emitted",{"_index":206,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["enabled",{"_index":218,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/variables.html":{}}}],["enabling",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["end",{"_index":267,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/DragArea.html":{}}}],["ending",{"_index":1086,"title":{},"body":{"classes/DragArea.html":{}}}],["endpoints",{"_index":1476,"title":{},"body":{"classes/Line.html":{}}}],["end{bmatrix",{"_index":1439,"title":{},"body":{"classes/Kernel.html":{}}}],["ensure",{"_index":1950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensuring",{"_index":1118,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enter",{"_index":434,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entered",{"_index":440,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entries",{"_index":1137,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enumeration",{"_index":1914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1911,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumerator",{"_index":1484,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["enums",{"_index":624,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/Kernel.html":{}}}],["eps",{"_index":1694,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["equal",{"_index":1066,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["equals",{"_index":1571,"title":{},"body":{"classes/Point.html":{}}}],["equals(other",{"_index":1588,"title":{},"body":{"classes/Point.html":{}}}],["equivalent",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["erosion",{"_index":1495,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1567,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["eval",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["evaluate",{"_index":1958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":205,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["event.cell",{"_index":1742,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["eventcoalescing",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":435,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["example",{"_index":1600,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["examples",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{}}}],["exceeds",{"_index":1816,"title":{},"body":{"classes/UndoRedo.html":{}}}],["execute",{"_index":2042,"title":{},"body":{"index.html":{}}}],["exists",{"_index":447,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["experiment",{"_index":1992,"title":{},"body":{"index.html":{}}}],["exploring",{"_index":1986,"title":{},"body":{"index.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["expr",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["expression",{"_index":1108,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"miscellaneous/functions.html":{}}}],["expressions",{"_index":1134,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["expressionvalidator",{"_index":1872,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":657,"title":{},"body":{"classes/Bitmap.html":{}}}],["factor",{"_index":780,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["false",{"_index":286,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["fast",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["faster",{"_index":295,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["features",{"_index":659,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["field",{"_index":485,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["files",{"_index":2024,"title":{},"body":{"index.html":{}}}],["fillcolor",{"_index":826,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["filter",{"_index":90,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":955,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filteredbitmap",{"_index":922,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filtering",{"_index":995,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filters",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":1557,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["first",{"_index":193,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{}}}],["first_page",{"_index":336,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["flippeddata",{"_index":1311,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["floor",{"_index":1924,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["following",{"_index":2046,"title":{},"body":{"index.html":{}}}],["fontset",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["for(let",{"_index":647,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["format",{"_index":673,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["forms",{"_index":1938,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":154,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["formulas",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["forward",{"_index":260,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["forward/backward",{"_index":133,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["found",{"_index":886,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":113,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["found.component.css",{"_index":1551,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1550,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1548,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1554,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:26",{"_index":1555,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1547,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["frame",{"_index":139,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["frequency",{"_index":224,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["friendly",{"_index":2004,"title":{},"body":{"index.html":{}}}],["full",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":220,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":663,"title":{},"body":{"classes/Bitmap.html":{}}}],["functions",{"_index":1192,"title":{"miscellaneous/functions.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["fundamental",{"_index":2000,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1997,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["generates",{"_index":958,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["generic",{"_index":1801,"title":{},"body":{"classes/UndoRedo.html":{}}}],["get(cell",{"_index":580,"title":{},"body":{"classes/Bitmap.html":{}}}],["getareacells",{"_index":1077,"title":{},"body":{"classes/DragArea.html":{}}}],["getbinary",{"_index":552,"title":{},"body":{"classes/Bitmap.html":{}}}],["getbinary(cell",{"_index":585,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcanvasheight",{"_index":1237,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcanvaswidth",{"_index":1238,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcellindex",{"_index":553,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcellindex(cell",{"_index":589,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcontrastcolor",{"_index":810,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontrastcolor(color",{"_index":1954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcontrastcolor(selectioncolor",{"_index":830,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell",{"_index":736,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell(x",{"_index":791,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getdivider",{"_index":1414,"title":{},"body":{"classes/Kernel.html":{}}}],["getequation",{"_index":930,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["getheight",{"_index":619,"title":{},"body":{"classes/Bitmap.html":{}}}],["gethistory",{"_index":1113,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryreversed",{"_index":1114,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getindexcell",{"_index":554,"title":{},"body":{"classes/Bitmap.html":{}}}],["getindexcell(index",{"_index":594,"title":{},"body":{"classes/Bitmap.html":{}}}],["getkernel",{"_index":1412,"title":{},"body":{"classes/Kernel.html":{}}}],["getoffsetx",{"_index":737,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getoffsety",{"_index":738,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getresultkernel",{"_index":931,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gets",{"_index":578,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["getsize",{"_index":1410,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["getsourcekernel",{"_index":932,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gettheme",{"_index":1758,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemeclass",{"_index":1759,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":541,"title":{},"body":{"classes/Bitmap.html":{}}}],["getvar",{"_index":1262,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvar(variable",{"_index":1972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getwidth",{"_index":617,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding",{"_index":555,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding(cell",{"_index":597,"title":{},"body":{"classes/Bitmap.html":{}}}],["given",{"_index":787,"title":{},"body":{"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["goback",{"_index":1552,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["grayscale",{"_index":747,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["grid",{"_index":475,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["grid_on",{"_index":1055,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["gridcolor",{"_index":730,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["group",{"_index":708,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize",{"_index":711,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize)).fill(0",{"_index":717,"title":{},"body":{"classes/Bitmap.html":{}}}],["góry",{"_index":1718,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["h",{"_index":1631,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["handle",{"_index":873,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["handled",{"_index":1940,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":433,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":1918,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["has(id",{"_index":879,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["hasbackdrop",{"_index":1034,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["hashlocationstrategy",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":756,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["headercolor",{"_index":731,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["headers",{"_index":523,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["heatmap",{"_index":1915,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["height",{"_index":396,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["height}}px",{"_index":530,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"miscellaneous/variables.html":{}}}],["help'},{'name",{"_index":93,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help.component.css",{"_index":1105,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.html",{"_index":1104,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpbuilding",{"_index":2033,"title":{},"body":{"index.html":{}}}],["helpcomponent",{"_index":92,"title":{"components/HelpComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helper",{"_index":1672,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["helpers",{"_index":1368,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["hiderequiredmarker",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":254,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["highlight",{"_index":1516,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["highlighted",{"_index":677,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlightedelement",{"_index":679,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlighting",{"_index":667,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["highlights",{"_index":1729,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["histogram",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"classes/Bitmap.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["histogram'},{'name",{"_index":95,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["histogram(groupsize",{"_index":715,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogram[math.trunc(pixel.value",{"_index":721,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogramcomponent",{"_index":94,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["histograms",{"_index":670,"title":{},"body":{"classes/Bitmap.html":{}}}],["history",{"_index":446,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/HistoryService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.back",{"_index":510,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.length",{"_index":509,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["historylimit",{"_index":1109,"title":{},"body":{"injectables/HistoryService.html":{}}}],["historyservice",{"_index":1106,"title":{"injectables/HistoryService.html":{}},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["home",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":97,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["home.component.css",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":96,"title":{"components/HomeComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hough",{"_index":99,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["houghtransformanimationcomponent",{"_index":98,"title":{"components/HoughTransformAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":69,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["htmlcanvaselement",{"_index":773,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["http://localhost:4200",{"_index":2019,"title":{},"body":{"index.html":{}}}],["https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":425,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["i=$index",{"_index":1469,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["id",{"_index":284,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/StructuringElementEditorComponent.html":{}}}],["identifier",{"_index":881,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["idx",{"_index":1680,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["if(!issel(cell",{"_index":821,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(!this.bitmap.getbinary(cell",{"_index":1533,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(!this.structuringelement.geterosion(this.bitmap",{"_index":1536,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if($event.event.buttons",{"_index":505,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if((issel(cell)&&!issel(cell.down",{"_index":850,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.left",{"_index":856,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.right",{"_index":860,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.up",{"_index":839,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(apply",{"_index":1527,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(bitmap",{"_index":495,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["if(isdark(fillcolor",{"_index":828,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(issel(cell",{"_index":831,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(kernel.divider",{"_index":1447,"title":{},"body":{"classes/Kernel.html":{}}}],["if(kernel.kernel",{"_index":1445,"title":{},"body":{"classes/Kernel.html":{}}}],["if(line.min.col",{"_index":1299,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(showvalue",{"_index":347,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.bitmap.isout($event.cell",{"_index":504,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if(this.chart",{"_index":1289,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(this.history.includes(action",{"_index":1140,"title":{},"body":{"injectables/HistoryService.html":{}}}],["if(this.isout(cell",{"_index":645,"title":{},"body":{"classes/Bitmap.html":{}}}],["if(this.operation===morphologicaloperations.dilation",{"_index":1531,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.operation===morphologicaloperations.erosion",{"_index":1535,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.playing",{"_index":332,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.value",{"_index":333,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["image",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["imageprocessinglecturesupportsystem",{"_index":1976,"title":{},"body":{"index.html":{}}}],["images",{"_index":388,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["imgdata",{"_index":1669,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["imgdata.data",{"_index":1671,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["implementation",{"_index":1804,"title":{},"body":{"classes/UndoRedo.html":{}}}],["implements",{"_index":144,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["importprovidersfrom(mathjaxmodule.forroot",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["include",{"_index":710,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["included",{"_index":714,"title":{},"body":{"classes/Bitmap.html":{}}}],["includes",{"_index":1078,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["includes(cell",{"_index":1091,"title":{},"body":{"classes/DragArea.html":{}}}],["including",{"_index":130,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["incorrect",{"_index":1561,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["increases",{"_index":253,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["incrementing/decrementing",{"_index":201,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["increments",{"_index":216,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index)*thetastep",{"_index":74,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["index)*thetastep}}&deg",{"_index":62,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["indicates",{"_index":1081,"title":{},"body":{"classes/DragArea.html":{}}}],["indices",{"_index":796,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["individual",{"_index":712,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["inf",{"_index":1706,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["information",{"_index":1475,"title":{},"body":{"classes/Line.html":{},"index.html":{}}}],["inicjalizacja",{"_index":1704,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["initial",{"_index":944,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initialize",{"_index":941,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initializes",{"_index":238,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["inject",{"_index":49,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":43,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["injectable",{"_index":869,"title":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":870,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["input",{"_index":297,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{},"miscellaneous/functions.html":{}}}],["input(1",{"_index":308,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(255",{"_index":309,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(true",{"_index":307,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input.required",{"_index":1488,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["inputs",{"_index":180,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["inst",{"_index":907,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["instance",{"_index":414,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["interactions",{"_index":946,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["interactive",{"_index":463,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["interactivebitmap",{"_index":458,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interactivebitmap(16",{"_index":459,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(bitmap.width",{"_index":497,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.bitmap.width",{"_index":1043,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.width",{"_index":508,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["interface",{"_index":2005,"title":{},"body":{"index.html":{}}}],["interval",{"_index":273,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["invalid",{"_index":887,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["iscursoroncell",{"_index":739,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncell(x",{"_index":800,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader",{"_index":740,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader(x",{"_index":803,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader",{"_index":741,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader(x",{"_index":805,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdark",{"_index":1869,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdark(color",{"_index":1967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevmode",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdragged(cell",{"_index":688,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.down",{"_index":851,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.left",{"_index":857,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.right",{"_index":861,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.up",{"_index":840,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isinside",{"_index":1633,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["isinside(x",{"_index":1679,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["isout",{"_index":556,"title":{},"body":{"classes/Bitmap.html":{}}}],["isout(cell",{"_index":607,"title":{},"body":{"classes/Bitmap.html":{}}}],["issel",{"_index":819,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isselected(cell",{"_index":690,"title":{},"body":{"classes/Bitmap.html":{}}}],["item",{"_index":1143,"title":{},"body":{"injectables/HistoryService.html":{}}}],["j=$index",{"_index":1470,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["jest",{"_index":1676,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["js",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["json.parse(history",{"_index":1152,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.parse(raw",{"_index":902,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["json.stringify(bitmap",{"_index":896,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["json.stringify(this",{"_index":1442,"title":{},"body":{"classes/Kernel.html":{}}}],["json.stringify(this.history",{"_index":1149,"title":{},"body":{"injectables/HistoryService.html":{}}}],["jump",{"_index":976,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kana",{"_index":1684,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["karma",{"_index":2043,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1138,"title":{},"body":{"injectables/HistoryService.html":{}}}],["kernel",{"_index":102,"title":{"classes/Kernel.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["kernel().kernel[row",{"_index":1490,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["kernel(3",{"_index":993,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kernel(result.size",{"_index":1039,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kernel(value",{"_index":1463,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kernel.divider",{"_index":1448,"title":{},"body":{"classes/Kernel.html":{}}}],["kernel.kernel",{"_index":1446,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["kerneldialogcomponent",{"_index":101,"title":{"components/KernelDialogComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["key",{"_index":891,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["keyboard_double_arrow_left",{"_index":342,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["keyboard_double_arrow_right",{"_index":344,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["kształtu",{"_index":1678,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["label",{"_index":1316,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["last",{"_index":189,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["last_page",{"_index":341,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["latex",{"_index":959,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["layout",{"_index":1286,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["learning",{"_index":1982,"title":{},"body":{"index.html":{}}}],["left",{"_index":855,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["legend",{"_index":68,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["length",{"_index":557,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["less",{"_index":215,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["level",{"_index":251,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["levels",{"_index":230,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["lewej",{"_index":1719,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["library",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["liczymy",{"_index":1685,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["light",{"_index":1765,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["light/dark",{"_index":1755,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":1121,"title":{},"body":{"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}}}],["limit(max",{"_index":1592,"title":{},"body":{"classes/Point.html":{}}}],["limited",{"_index":1597,"title":{},"body":{"classes/Point.html":{}}}],["limits",{"_index":1594,"title":{},"body":{"classes/Point.html":{}}}],["line",{"_index":769,"title":{"classes/Line.html":{}},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["line.max.col",{"_index":1300,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.min.col",{"_index":1302,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.rho",{"_index":1295,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta",{"_index":1305,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta*math.pi/180",{"_index":1296,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.votes",{"_index":1318,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linear",{"_index":591,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linearscale",{"_index":1272,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linecontroller",{"_index":1269,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lineelement",{"_index":1270,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linepoint",{"_index":1239,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["linepoint(x",{"_index":1244,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines",{"_index":749,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.push(new",{"_index":1359,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.sort((a",{"_index":1364,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linewidth",{"_index":766,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["list",{"_index":1133,"title":{},"body":{"injectables/HistoryService.html":{},"index.html":{}}}],["literal",{"_index":431,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["lmb",{"_index":1224,"title":{},"body":{"components/HomeComponent.html":{}}}],["load",{"_index":878,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["load(id",{"_index":882,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["load(storagekey",{"_index":1404,"title":{},"body":{"classes/Kernel.html":{}}}],["loaded",{"_index":457,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{}}}],["loading",{"_index":419,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["loads",{"_index":884,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["local",{"_index":876,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["localstorage.getitem(storagekey",{"_index":1443,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.getitem(this._storagekey",{"_index":899,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.getitem(this.storagekey",{"_index":1151,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.removeitem(this.storagekey",{"_index":1153,"title":{},"body":{"injectables/HistoryService.html":{}}}],["localstorage.setitem(storagekey",{"_index":1441,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.setitem(this._storagekey",{"_index":895,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.setitem(this.storagekey",{"_index":1148,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["located",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["locationstrategy",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lokalna",{"_index":1690,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["loop",{"_index":163,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["looping",{"_index":142,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["lower",{"_index":250,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["luminance",{"_index":1957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":1285,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["make",{"_index":2006,"title":{},"body":{"index.html":{}}}],["maksymalno",{"_index":1691,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["manage",{"_index":945,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["managing",{"_index":285,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{}}}],["manipulate",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["manipulating",{"_index":537,"title":{},"body":{"classes/Bitmap.html":{}}}],["manipulation",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mat",{"_index":1646,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["mat_dialog_data",{"_index":51,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_icon_default_options",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":150,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matbuttontogglemodule",{"_index":1450,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matcardmodule",{"_index":148,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matcheckboxmodule",{"_index":391,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":938,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["matdialogmodule",{"_index":18,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["matdialogref",{"_index":31,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["matdividermodule",{"_index":390,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["material",{"_index":1984,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":389,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["math",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{}}}],["math.cos(theta",{"_index":1348,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.max(0",{"_index":325,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.max(min.col",{"_index":1621,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.col",{"_index":1617,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.dragstart.col",{"_index":1102,"title":{},"body":{"classes/DragArea.html":{}}}],["math.max(this.dragstart.row",{"_index":1097,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(d",{"_index":1709,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.min(max.col",{"_index":1622,"title":{},"body":{"classes/Point.html":{}}}],["math.min(max.row",{"_index":1619,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this._speeds.length",{"_index":328,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.min(this.col",{"_index":1615,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this.dragstart.col",{"_index":1099,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.dragstart.row",{"_index":1094,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.origin.col",{"_index":1751,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["math.pi",{"_index":1653,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.round(((col+1",{"_index":833,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(((row+1",{"_index":835,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((col",{"_index":834,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((row",{"_index":836,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(p.col",{"_index":1347,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.round(value",{"_index":1423,"title":{},"body":{"classes/Kernel.html":{}}}],["math.sin(theta",{"_index":1350,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.sqrt2",{"_index":1713,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["math.trunc((size",{"_index":1053,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["math.trunc((this._size",{"_index":1424,"title":{},"body":{"classes/Kernel.html":{}}}],["math.trunc(index",{"_index":654,"title":{},"body":{"classes/Bitmap.html":{}}}],["mathematical",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mathjax",{"_index":1025,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{}}}],["mathjaxmodule",{"_index":917,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["maticonmodule",{"_index":151,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matinputmodule",{"_index":153,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["matlistmodule",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["matmenumodule",{"_index":155,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["matrix",{"_index":104,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matrixdisplaycomponent",{"_index":103,"title":{"components/MatrixDisplayComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["matselectmodule",{"_index":152,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["matsidenavmodule",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["matslidermodule",{"_index":149,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mattabsmodule",{"_index":1232,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["mattoolbarmodule",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["max",{"_index":181,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["max(other",{"_index":1598,"title":{},"body":{"classes/Point.html":{}}}],["max[r][t",{"_index":1363,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx",{"_index":1355,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx].max(p",{"_index":1356,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["maximum",{"_index":188,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}}}],["maxspeed",{"_index":167,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["medial",{"_index":1692,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["medial.push([x",{"_index":1699,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["median",{"_index":107,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["medianfilteranimationcomponent",{"_index":106,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":1125,"title":{},"body":{"injectables/HistoryService.html":{}}}],["menu",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1549,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["method",{"_index":601,"title":{},"body":{"classes/Bitmap.html":{}}}],["methods",{"_index":165,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["middle",{"_index":866,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["milliseconds",{"_index":274,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["min",{"_index":182,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["min(other",{"_index":1601,"title":{},"body":{"classes/Point.html":{}}}],["min(width",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["min[r][t",{"_index":1362,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx",{"_index":1353,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx].min(p",{"_index":1354,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["minimum",{"_index":192,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Point.html":{}}}],["minspeed",{"_index":168,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["miscellaneous",{"_index":1910,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmb",{"_index":1227,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":603,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["model",{"_index":208,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["model(0",{"_index":310,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["modes",{"_index":1923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modifications",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["modify",{"_index":2023,"title":{},"body":{"index.html":{}}}],["modular",{"_index":2001,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2057,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modulo",{"_index":1921,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["more",{"_index":2051,"title":{},"body":{"index.html":{}}}],["morphological",{"_index":109,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["morphologicaloperations",{"_index":1513,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["morphologicaloperations.erosion",{"_index":1514,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["morphologicaloperationsanimationcomponent",{"_index":108,"title":{"components/MorphologicalOperationsAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mouse",{"_index":437,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mouseevent",{"_index":503,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["moved",{"_index":1558,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/Point.html":{}}}],["moves",{"_index":1586,"title":{},"body":{"classes/Point.html":{}}}],["multiplier",{"_index":292,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["multiplying",{"_index":965,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["n",{"_index":1437,"title":{},"body":{"classes/Kernel.html":{}}}],["na",{"_index":1697,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":2029,"title":{},"body":{"index.html":{}}}],["nan",{"_index":1941,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navigate",{"_index":2018,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":443,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["navigation",{"_index":421,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["necessary",{"_index":942,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["neighborhood",{"_index":972,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["new",{"_index":243,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["next",{"_index":249,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["ng",{"_index":2014,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1240,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ngondestroy",{"_index":169,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["ngoninit",{"_index":170,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["noise",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["none",{"_index":1383,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nothing",{"_index":616,"title":{},"body":{"classes/Bitmap.html":{}}}],["notify",{"_index":1779,"title":{},"body":{"injectables/ThemeService.html":{}}}],["npm",{"_index":2049,"title":{},"body":{"index.html":{}}}],["null",{"_index":454,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":32,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number,y",{"_index":1629,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["number.isinteger(cell.col",{"_index":636,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isinteger(cell.row",{"_index":635,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isnan(pixel.value",{"_index":720,"title":{},"body":{"classes/Bitmap.html":{}}}],["numbers",{"_index":540,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["numerical",{"_index":760,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["obj",{"_index":901,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["obj._height",{"_index":905,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._matrix",{"_index":906,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._width",{"_index":904,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object",{"_index":583,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.assign(inst",{"_index":909,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.create(bitmap.prototype",{"_index":908,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object.create(kernel.prototype",{"_index":1444,"title":{},"body":{"classes/Kernel.html":{}}}],["objects",{"_index":579,"title":{},"body":{"classes/Bitmap.html":{}}}],["obrazu",{"_index":1668,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["observable",{"_index":1775,"title":{},"body":{"injectables/ThemeService.html":{}}}],["observe",{"_index":1993,"title":{},"body":{"index.html":{}}}],["od",{"_index":1715,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["offset",{"_index":798,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsetx",{"_index":816,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsety",{"_index":817,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ok",{"_index":1471,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["old",{"_index":564,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldest",{"_index":1817,"title":{},"body":{"classes/UndoRedo.html":{}}}],["oldmatrix",{"_index":560,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldmatrix?._matrix?.foreach((row",{"_index":630,"title":{},"body":{"classes/Bitmap.html":{}}}],["oncellclicked",{"_index":933,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellclicked($event",{"_index":973,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered",{"_index":403,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered($event",{"_index":430,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["ondestroy",{"_index":146,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["one",{"_index":567,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["oninit",{"_index":145,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["onto",{"_index":727,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/UndoRedo.html":{}}}],["open",{"_index":2017,"title":{},"body":{"index.html":{}}}],["open_in_new",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["opendialog",{"_index":934,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["opening",{"_index":1496,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["opens",{"_index":980,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["operation",{"_index":962,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["operations",{"_index":110,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["operators",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["optimizes",{"_index":2039,"title":{},"body":{"index.html":{}}}],["optional",{"_index":39,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":141,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["order",{"_index":1129,"title":{},"body":{"injectables/HistoryService.html":{}}}],["origin",{"_index":1228,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["original",{"_index":990,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["other.col",{"_index":1613,"title":{},"body":{"classes/Point.html":{}}}],["other.row",{"_index":1612,"title":{},"body":{"classes/Point.html":{}}}],["otherwise",{"_index":588,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":543,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["outofrange",{"_index":1401,"title":{},"body":{"classes/Kernel.html":{}}}],["outofrangehandle",{"_index":1417,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["outofrangehandle(value",{"_index":1939,"title":{},"body":{"miscellaneous/functions.html":{}}}],["outofrangehandling",{"_index":1020,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["output",{"_index":298,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outputs",{"_index":184,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outside",{"_index":998,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["over",{"_index":476,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["overrides",{"_index":207,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["overview",{"_index":2055,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oy",{"_index":1426,"title":{},"body":{"classes/Kernel.html":{}}}],["p.row",{"_index":1349,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.x",{"_index":1313,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.y",{"_index":1314,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1",{"_index":1293,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.col",{"_index":1307,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.row",{"_index":1308,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2",{"_index":1297,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.col",{"_index":1309,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.row",{"_index":1310,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["package",{"_index":1884,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padded",{"_index":606,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding",{"_index":598,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["padding.defaultvalue",{"_index":605,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding.edge",{"_index":640,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["page",{"_index":112,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":111,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":1377,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["param",{"_index":312,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parseandapply",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseandapply(expression",{"_index":1942,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parses",{"_index":1943,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pass",{"_index":1714,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["paste",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["path",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":770,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["pause",{"_index":338,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["paused",{"_index":290,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["perform",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["performance",{"_index":2040,"title":{},"body":{"index.html":{}}}],["piksel",{"_index":1675,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["pipes",{"_index":2032,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":436,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pixel.value===0).foreach(pixel",{"_index":1538,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["pixels",{"_index":473,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["pixelsize",{"_index":397,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixelsize}}px",{"_index":531,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixel’s",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["play",{"_index":213,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play/pause",{"_index":131,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play_arrow",{"_index":339,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playback",{"_index":129,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playing",{"_index":164,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["plugins",{"_index":1287,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pobieramy",{"_index":1666,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["point",{"_index":482,"title":{"classes/Point.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["point's",{"_index":1595,"title":{},"body":{"classes/Point.html":{}}}],["point((rho",{"_index":1372,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(0",{"_index":596,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["point(1",{"_index":1577,"title":{},"body":{"classes/Point.html":{}}}],["point(height",{"_index":1341,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.max.row",{"_index":1303,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.min.row",{"_index":1301,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(math.max(min.row",{"_index":1618,"title":{},"body":{"classes/Point.html":{}}}],["point(math.max(this.row",{"_index":1616,"title":{},"body":{"classes/Point.html":{}}}],["point(math.min(this.origin.row",{"_index":1750,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["point(math.min(this.row",{"_index":1614,"title":{},"body":{"classes/Point.html":{}}}],["point(r",{"_index":650,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(row",{"_index":644,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(this.row",{"_index":1610,"title":{},"body":{"classes/Point.html":{}}}],["point(x",{"_index":656,"title":{},"body":{"classes/Bitmap.html":{}}}],["point.zero",{"_index":1596,"title":{},"body":{"classes/Point.html":{}}}],["pointelement",{"_index":1271,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pointer",{"_index":1382,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["pointradius",{"_index":1321,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["points",{"_index":1071,"title":{},"body":{"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["polar",{"_index":1472,"title":{},"body":{"classes/Line.html":{}}}],["pos.split(',').map(number",{"_index":684,"title":{},"body":{"classes/Bitmap.html":{}}}],["position",{"_index":786,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["powerful",{"_index":2028,"title":{},"body":{"index.html":{}}}],["prawej",{"_index":1717,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["predefined",{"_index":229,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{}}}],["prefersdark",{"_index":1784,"title":{},"body":{"injectables/ThemeService.html":{}}}],["prefix",{"_index":892,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["pressed",{"_index":1083,"title":{},"body":{"classes/DragArea.html":{}}}],["previous",{"_index":445,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["primary",{"_index":1648,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":158,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["procedural",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["process",{"_index":954,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processed",{"_index":988,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processes",{"_index":916,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["processing",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["producing",{"_index":1944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2038,"title":{},"body":{"index.html":{}}}],["project",{"_index":1977,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"properties.html":{}}}],["property",{"_index":613,"title":{},"body":{"classes/Bitmap.html":{}}}],["protected",{"_index":547,"title":{},"body":{"classes/Bitmap.html":{}}}],["provide",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":565,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["providedin",{"_index":894,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["providerouter(routes",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":127,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"index.html":{}}}],["provideserviceworker('ngsw",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["push",{"_index":1808,"title":{},"body":{"classes/UndoRedo.html":{}}}],["push(state",{"_index":1813,"title":{},"body":{"classes/UndoRedo.html":{}}}],["pushes",{"_index":1815,"title":{},"body":{"classes/UndoRedo.html":{}}}],["quantization",{"_index":1400,"title":{},"body":{"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle",{"_index":1418,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle(value",{"_index":1946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizationmode",{"_index":1021,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantized",{"_index":1947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizing",{"_index":1945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quit",{"_index":404,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["r",{"_index":631,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{}}}],["random",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["range",{"_index":1919,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["raw",{"_index":898,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["re",{"_index":1014,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["reaches",{"_index":217,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["reaching",{"_index":266,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["readme",{"_index":1975,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":27,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{}}}],["real",{"_index":1995,"title":{},"body":{"index.html":{}}}],["reapplying",{"_index":984,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["recent",{"_index":1130,"title":{},"body":{"injectables/HistoryService.html":{}}}],["recognized",{"_index":1959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rectangle",{"_index":1640,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["redirectto",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redo",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoes",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoing",{"_index":1820,"title":{},"body":{"classes/UndoRedo.html":{}}}],["redostack",{"_index":1806,"title":{},"body":{"classes/UndoRedo.html":{}}}],["reference",{"_index":2056,"title":{},"body":{"index.html":{}}}],["references",{"_index":2053,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":935,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["refreshes",{"_index":983,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["registerwhenstable:30000",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":2021,"title":{},"body":{"index.html":{}}}],["removed",{"_index":1559,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/UndoRedo.html":{}}}],["render",{"_index":742,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["render(ctx",{"_index":807,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendered",{"_index":762,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendering",{"_index":726,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["renders",{"_index":809,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["repeat",{"_index":346,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["repeat_on",{"_index":345,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["represent",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["representation",{"_index":960,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["represented",{"_index":582,"title":{},"body":{"classes/Bitmap.html":{}}}],["representing",{"_index":575,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["represents",{"_index":534,"title":{},"body":{"classes/Bitmap.html":{},"classes/Line.html":{}}}],["required",{"_index":1485,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["resets",{"_index":219,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["resize",{"_index":405,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resizes",{"_index":449,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resources",{"_index":235,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["respecting",{"_index":1120,"title":{},"body":{"injectables/HistoryService.html":{}}}],["responsive",{"_index":1283,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["restart",{"_index":264,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["result",{"_index":294,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["resultbitmap",{"_index":923,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["resultkernel",{"_index":924,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":874,"title":{},"body":{"injectables/BitmapStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrieve",{"_index":1973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":969,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["retrieving",{"_index":545,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["return",{"_index":329,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["returns",{"_index":226,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1128,"title":{},"body":{"injectables/HistoryService.html":{}}}],["reversed",{"_index":1131,"title":{},"body":{"injectables/HistoryService.html":{}}}],["revert",{"_index":1544,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["reverts",{"_index":1505,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["rgb(249",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(26",{"_index":1961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rho",{"_index":57,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos.length",{"_index":1339,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos[r",{"_index":1360,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["ridx",{"_index":1351,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["right",{"_index":859,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["rmb",{"_index":1225,"title":{},"body":{"components/HomeComponent.html":{}}}],["rodku",{"_index":1707,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["root",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":80,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["round",{"_index":868,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rounded",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":415,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["router",{"_index":411,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["routermodule",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routes",{"_index":1837,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":63,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["row,col",{"_index":674,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["row.foreach((value",{"_index":632,"title":{},"body":{"classes/Bitmap.html":{}}}],["row.join",{"_index":1434,"title":{},"body":{"classes/Kernel.html":{}}}],["row/column",{"_index":1010,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["row=0;row",{"_index":648,"title":{},"body":{"classes/Bitmap.html":{}}}],["row[colindex",{"_index":1432,"title":{},"body":{"classes/Kernel.html":{}}}],["rows",{"_index":569,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["rows.join",{"_index":1436,"title":{},"body":{"classes/Kernel.html":{}}}],["run",{"_index":2013,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2045,"title":{},"body":{"index.html":{}}}],["running",{"_index":2016,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/subject",{"_index":1781,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rysujemy",{"_index":1700,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["równości",{"_index":1698,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["same",{"_index":1584,"title":{},"body":{"classes/Point.html":{}}}],["save",{"_index":406,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["save(id",{"_index":888,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["save(storagekey",{"_index":1406,"title":{},"body":{"classes/Kernel.html":{}}}],["saved",{"_index":424,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["savedtheme",{"_index":1782,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saves",{"_index":452,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["saving",{"_index":420,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["scaffolding",{"_index":2026,"title":{},"body":{"index.html":{}}}],["scale",{"_index":746,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["scale)+0.5",{"_index":846,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["scalecolor",{"_index":811,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scalecolor(value",{"_index":827,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["scaled",{"_index":1971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scales",{"_index":1288,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["scaling",{"_index":1969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schematics",{"_index":2031,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1786,"title":{},"body":{"injectables/ThemeService.html":{}}}],["see",{"_index":885,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["seed",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":693,"title":{},"body":{"classes/Bitmap.html":{}}}],["select(cell",{"_index":694,"title":{},"body":{"classes/Bitmap.html":{}}}],["select_col_end",{"_index":1101,"title":{},"body":{"classes/DragArea.html":{}}}],["select_col_start",{"_index":1098,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_end",{"_index":1096,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_start",{"_index":1093,"title":{},"body":{"classes/DragArea.html":{}}}],["selected",{"_index":671,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["selectedcolorscale",{"_index":925,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedcolorscale]=\"colorscale",{"_index":1545,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectedcolorscale]=\"selectedcolorscale",{"_index":1061,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedonly",{"_index":713,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["selecting",{"_index":664,"title":{},"body":{"classes/Bitmap.html":{}}}],["selection",{"_index":660,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor",{"_index":732,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor]=\"selectioncolor",{"_index":1376,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["selects",{"_index":692,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["serveonce",{"_index":2015,"title":{},"body":{"index.html":{}}}],["server",{"_index":2012,"title":{},"body":{"index.html":{}}}],["service",{"_index":418,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["services",{"_index":943,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["services/bitmap",{"_index":488,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["services/theme/theme.service",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":246,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["set(cell",{"_index":614,"title":{},"body":{"classes/Bitmap.html":{}}}],["setdivider(value",{"_index":1415,"title":{},"body":{"classes/Kernel.html":{}}}],["sets",{"_index":242,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["setselection(cell",{"_index":700,"title":{},"body":{"classes/Bitmap.html":{}}}],["setsize(value",{"_index":1459,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["settheme",{"_index":1760,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":1770,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setting",{"_index":225,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["settings",{"_index":450,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["setvalue",{"_index":171,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalue(value",{"_index":240,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalues",{"_index":936,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["setvalues(length",{"_index":985,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shape",{"_index":115,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["shapebitmapeditorcomponent",{"_index":114,"title":{"components/ShapeBitmapEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showbase",{"_index":926,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showdifference",{"_index":1499,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showgrid",{"_index":398,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showgrid]=\"showgrid",{"_index":517,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showheaders",{"_index":399,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shown",{"_index":1006,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shownumbers]=\"false",{"_index":516,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shownumbers]=\"shownumbervalues&&pixelsize>=40",{"_index":1059,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["shownumbervalues",{"_index":927,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["showvalue",{"_index":183,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sidenav.opened",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":1800,"title":{},"body":{"classes/UndoRedo.html":{}}}],["simplex",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["simplex(x",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["sin",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":200,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["size(value",{"_index":1462,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["skip_next",{"_index":340,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["skip_previous",{"_index":337,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["slw",{"_index":841,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["slwc/2",{"_index":843,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source.get(pixel.cell",{"_index":1542,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["source.isout(pixel.cell",{"_index":1540,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["sourcekernel",{"_index":928,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specific",{"_index":668,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specified",{"_index":563,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["spectral",{"_index":1916,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["speed",{"_index":134,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["speedcontrol",{"_index":323,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speeddown",{"_index":172,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speedup",{"_index":173,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speed}}x",{"_index":343,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sprawd",{"_index":1673,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["sprawdzamy",{"_index":1682,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["src",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":1912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../expression",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../style",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/animation",{"_index":123,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["src/app/components/binary",{"_index":381,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/bitmap",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["src/app/components/bitmap/bitmap.component.ts",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["src/app/components/convolutional",{"_index":911,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/accumulator",{"_index":9,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/kernel",{"_index":1449,"title":{},"body":{"components/KernelDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/help/help.component.ts",{"_index":1103,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["src/app/components/histogram/histogram.component.ts",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/hough",{"_index":1229,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["src/app/components/matrix",{"_index":1480,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["src/app/components/median",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["src/app/components/morphological",{"_index":1492,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1546,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/shape",{"_index":1624,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/structuring",{"_index":1720,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["src/app/services/bitmap",{"_index":871,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts",{"_index":1107,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts:11",{"_index":1136,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:13",{"_index":1139,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:19",{"_index":1116,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:33",{"_index":1127,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:40",{"_index":1126,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:49",{"_index":1123,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:9",{"_index":1132,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/theme/theme.service.ts",{"_index":1753,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme/theme.service.ts:11",{"_index":1773,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:13",{"_index":1778,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:15",{"_index":1762,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:33",{"_index":1771,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:45",{"_index":1766,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:52",{"_index":1768,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:57",{"_index":1772,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/static/bitmap.ts",{"_index":533,"title":{},"body":{"classes/Bitmap.html":{},"coverage.html":{}}}],["src/app/static/bitmap.ts:113",{"_index":615,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:120",{"_index":577,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:13",{"_index":576,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:130",{"_index":612,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:147",{"_index":595,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:15",{"_index":574,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:159",{"_index":590,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:166",{"_index":610,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:17",{"_index":562,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:43",{"_index":618,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:49",{"_index":620,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:57",{"_index":608,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:64",{"_index":581,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:73",{"_index":586,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:83",{"_index":599,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/color",{"_index":1867,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/drag",{"_index":1067,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["src/app/static/enums.ts",{"_index":1913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/static/expression",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/kernel.ts",{"_index":1386,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{}}}],["src/app/static/kernel.ts:10",{"_index":1411,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:11",{"_index":1413,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:12",{"_index":1416,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:13",{"_index":1394,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:22",{"_index":1402,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:33",{"_index":1409,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:37",{"_index":1403,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:44",{"_index":1408,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:56",{"_index":1407,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:60",{"_index":1405,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:7",{"_index":1395,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:8",{"_index":1396,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:9",{"_index":1398,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/point.ts",{"_index":1568,"title":{},"body":{"classes/Point.html":{},"coverage.html":{}}}],["src/app/static/point.ts:13",{"_index":1583,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:2",{"_index":1575,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:20",{"_index":1581,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:27",{"_index":1605,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:35",{"_index":1602,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:43",{"_index":1599,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:49",{"_index":1591,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:55",{"_index":1603,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:61",{"_index":1609,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:67",{"_index":1585,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:7",{"_index":1576,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:75",{"_index":1593,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:82",{"_index":1589,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:88",{"_index":1607,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:92",{"_index":1579,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:94",{"_index":1578,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/render",{"_index":723,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["src/app/static/structuringelement.ts",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["src/app/static/style",{"_index":1881,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/undoredo.ts",{"_index":1799,"title":{},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["src/app/static/undoredo.ts:18",{"_index":1814,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:29",{"_index":1822,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:4",{"_index":1812,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:40",{"_index":1818,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:6",{"_index":1810,"title":{},"body":{"classes/UndoRedo.html":{}}}],["stack",{"_index":1803,"title":{},"body":{"classes/UndoRedo.html":{}}}],["start",{"_index":1072,"title":{},"body":{"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["starting",{"_index":1089,"title":{},"body":{"classes/DragArea.html":{}}}],["starts",{"_index":239,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["state",{"_index":214,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["statements",{"_index":1830,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1805,"title":{},"body":{"classes/UndoRedo.html":{}}}],["static",{"_index":1569,"title":{},"body":{"classes/Point.html":{}}}],["static/bitmap",{"_index":481,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/enums",{"_index":1022,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["static/kernel",{"_index":1019,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["static/point",{"_index":483,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/structuringelement",{"_index":1519,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/style",{"_index":1268,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["step",{"_index":132,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["stepbackward",{"_index":174,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepfirst",{"_index":175,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepforward",{"_index":176,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steplast",{"_index":177,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steps",{"_index":256,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["storage",{"_index":453,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["storage.service",{"_index":490,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["storage.service.ts",{"_index":872,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":890,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:18",{"_index":889,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:26",{"_index":880,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:35",{"_index":883,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage/bitmap",{"_index":489,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["storagekey",{"_index":1110,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Kernel.html":{},"injectables/ThemeService.html":{}}}],["store",{"_index":1811,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["stored",{"_index":538,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/UndoRedo.html":{}}}],["stores",{"_index":953,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["storing",{"_index":893,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["strategies",{"_index":1922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":997,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["stream",{"_index":1776,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["string=\"kernel",{"_index":1440,"title":{},"body":{"classes/Kernel.html":{}}}],["strings",{"_index":672,"title":{},"body":{"classes/Bitmap.html":{}}}],["stroke",{"_index":784,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["stroked",{"_index":789,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["structure",{"_index":2002,"title":{},"body":{"index.html":{}}}],["structuring",{"_index":117,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["structuringelement",{"_index":1500,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["structuringelement(3",{"_index":1518,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["structuringelement(this.bitmap.width",{"_index":1752,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["structuringelementeditorcomponent",{"_index":116,"title":{"components/StructuringElementEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":2010,"title":{},"body":{"index.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?'30px':'0",{"_index":1379,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?\\'30px\\':\\'0",{"_index":1385,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style=\"margin",{"_index":1062,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["style=\"position",{"_index":1380,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["subject",{"_index":1777,"title":{},"body":{"injectables/ThemeService.html":{}}}],["submit",{"_index":1452,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["subscribers",{"_index":1780,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subtract",{"_index":1572,"title":{},"body":{"classes/Point.html":{}}}],["subtract(other",{"_index":1604,"title":{},"body":{"classes/Point.html":{}}}],["subtracts",{"_index":1606,"title":{},"body":{"classes/Point.html":{}}}],["such",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["suitable",{"_index":2007,"title":{},"body":{"index.html":{}}}],["sum",{"_index":1425,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["super(width",{"_index":685,"title":{},"body":{"classes/Bitmap.html":{}}}],["support",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["symbols",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{}}}],["sys",{"_index":1647,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["t",{"_index":1337,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["tabindex",{"_index":1235,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["table",{"_index":1374,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":987,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["teaching",{"_index":1981,"title":{},"body":{"index.html":{}}}],["techniques",{"_index":1989,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tension",{"_index":1320,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["test",{"_index":2044,"title":{},"body":{"index.html":{}}}],["testdocumentation",{"_index":2048,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2041,"title":{},"body":{"index.html":{}}}],["text",{"_index":783,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["theme",{"_index":1763,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechanged",{"_index":1756,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechangedsource",{"_index":1757,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":1754,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["themes.dark",{"_index":1789,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes.light",{"_index":1790,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":356,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.gettheme()=='light'?'dark_mode':'light_mode",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["themeservice.gettheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["theta",{"_index":58,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetarad",{"_index":1245,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas",{"_index":1335,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas.foreach((theta",{"_index":1345,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas[t]*180/math.pi",{"_index":1361,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetastep",{"_index":28,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this._currentspeedindex",{"_index":324,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._divider",{"_index":1422,"title":{},"body":{"classes/Kernel.html":{}}}],["this._dragarea",{"_index":680,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._dragarea.dragging&&this._dragarea.includes(cell",{"_index":689,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._height",{"_index":626,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._id",{"_index":492,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this._interval",{"_index":334,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._kernel",{"_index":1420,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel.map(row",{"_index":1431,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel[0].map((_",{"_index":1429,"title":{},"body":{"classes/Kernel.html":{}}}],["this._matrix",{"_index":627,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row]?.[cell.col",{"_index":638,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row][cell.col",{"_index":646,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected",{"_index":686,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.add(cell.tostring",{"_index":695,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.clear",{"_index":705,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.delete(cell.tostring",{"_index":699,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.has(cell.tostring",{"_index":691,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._size",{"_index":1419,"title":{},"body":{"classes/Kernel.html":{}}}],["this._speeds[0",{"_index":331,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._currentspeedindex",{"_index":327,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._speeds.length",{"_index":330,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._width",{"_index":625,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.accumulator",{"_index":56,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["this.accumulator[ridx][tidx",{"_index":1357,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.animate",{"_index":311,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.animationindex",{"_index":1046,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.appliedbitmap",{"_index":1523,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.appliedbitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell",{"_index":1528,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.applyfilter(this.bitmap.length",{"_index":1045,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap",{"_index":496,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.clearselection",{"_index":1047,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.button",{"_index":1745,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragend",{"_index":1747,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragging",{"_index":1748,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragstart",{"_index":1746,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.getindexcell(index",{"_index":1054,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap.getindexcell(this.animationindex",{"_index":1326,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmap.height",{"_index":502,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.highlightedelement",{"_index":1330,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getcellindex(p.cell",{"_index":1327,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(cell",{"_index":1332,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(this.origin",{"_index":1744,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.set($event.cell",{"_index":506,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.width",{"_index":500,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap_storage.load(this._id",{"_index":494,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmap_storage.save(this._id",{"_index":512,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapcomponenttick",{"_index":507,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapstorage.load(this.bitmapkey",{"_index":1027,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmapstorage.save(this.bitmapkey",{"_index":1028,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmaptick",{"_index":1334,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.canvasref.nativeelement",{"_index":1639,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["this.chart",{"_index":1280,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets",{"_index":1290,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets.push",{"_index":1315,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.resize(this.getcanvaswidth()*2",{"_index":1323,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.update",{"_index":1325,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.col",{"_index":1611,"title":{},"body":{"classes/Point.html":{}}}],["this.dialog.open(kerneldialogcomponent",{"_index":1031,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.dialogref.close",{"_index":1464,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.dialogref.close(this.kernel",{"_index":1465,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.distancetransform(isinside",{"_index":1688,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["this.dragend.col",{"_index":1100,"title":{},"body":{"classes/DragArea.html":{}}}],["this.dragend.row",{"_index":1095,"title":{},"body":{"classes/DragArea.html":{}}}],["this.filteredbitmap",{"_index":1044,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.get(cell",{"_index":639,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.get(new",{"_index":643,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.getcanvasheight()*2",{"_index":1324,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.getcursorcell(x",{"_index":813,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.gethistory().slice().reverse",{"_index":1150,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.getoffsetx",{"_index":814,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getoffsety",{"_index":815,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getresultkernel",{"_index":1051,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.getsourcekernel",{"_index":1050,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.gettheme",{"_index":1796,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.height",{"_index":501,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.history",{"_index":1141,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.filter(item",{"_index":1142,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.length",{"_index":1145,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.push(action",{"_index":1144,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.shift",{"_index":1147,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.historylimit",{"_index":1146,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.isout(cell",{"_index":637,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.isselected(pixel.cell",{"_index":719,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.kernel",{"_index":1037,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.kernel().size",{"_index":1489,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["this.kernel.clone",{"_index":1035,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.load(\"kernel",{"_index":1029,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.save(\"kernel",{"_index":1041,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.size",{"_index":1052,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.length",{"_index":651,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.limit",{"_index":1292,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["this.linepoint(line.max.col",{"_index":1298,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.linepoint(line.min.col",{"_index":1294,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.load(this._storagekey",{"_index":897,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["this.loop",{"_index":322,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.operation",{"_index":1525,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.operation===morphologicaloperations.erosion",{"_index":1537,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.origin",{"_index":1740,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.origin.clone",{"_index":1743,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.pixels().foreach",{"_index":718,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.pixelsize",{"_index":1369,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.playing",{"_index":319,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.quit",{"_index":513,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.redostack",{"_index":1827,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.refresh",{"_index":1030,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.resultbitmap",{"_index":1042,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.clearselection",{"_index":1329,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.highlightedelement",{"_index":1532,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.pixels().filter(p=>p.value===0).foreach(p",{"_index":1529,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.select(cell",{"_index":1333,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.set(p.cell",{"_index":1328,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultkernel",{"_index":1040,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":493,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.router.navigate",{"_index":511,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.row",{"_index":1620,"title":{},"body":{"classes/Point.html":{}}}],["this.row},${this.col",{"_index":1623,"title":{},"body":{"classes/Point.html":{}}}],["this.select(cell",{"_index":701,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.selectioncolor",{"_index":1331,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.settheme(current",{"_index":1797,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(prefersdark",{"_index":1788,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(savedtheme",{"_index":1783,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(themes.light",{"_index":1791,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setvalue(math.max(this.min",{"_index":317,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(math.min(this.max",{"_index":320,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.max",{"_index":321,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.min",{"_index":316,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalues(index+1",{"_index":1049,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.setvalues(this.animationindex+1",{"_index":1530,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showbase?this.bitmap:undefined",{"_index":1048,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showdifference",{"_index":1526,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showheaders",{"_index":1370,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.sourcekernel",{"_index":1038,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.speed",{"_index":326,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.step",{"_index":318,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.structuringelement",{"_index":1739,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.applycomplex(this.bitmap",{"_index":1524,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.structuringelement.height",{"_index":1738,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.load",{"_index":1521,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.origin",{"_index":1741,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.save",{"_index":1522,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.set(point.one",{"_index":1520,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.width",{"_index":1737,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.themechangedsource.asobservable",{"_index":1774,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themechangedsource.next(theme",{"_index":1795,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.threshold",{"_index":1358,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.tick",{"_index":1749,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.toline(line.rho",{"_index":1304,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.transform(this.resultbitmap).slice(0",{"_index":1291,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.undostack.length",{"_index":1825,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.push(state",{"_index":1824,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.shift",{"_index":1826,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.unselect(cell",{"_index":702,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.value",{"_index":313,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.value.set(value",{"_index":314,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.valuechanged.emit(value",{"_index":315,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.width",{"_index":499,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{}}}],["threshold",{"_index":1236,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["through",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["tick",{"_index":465,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tick]=\"bitmaptick",{"_index":1375,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["tick]=\"tick",{"_index":1060,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["tidx",{"_index":1346,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["time",{"_index":1996,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":222,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["tip",{"_index":1564,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["tips_and_updates",{"_index":1563,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["title",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tmp",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["together",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{}}}],["toggle",{"_index":1461,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["toggleloop",{"_index":178,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggleplay",{"_index":179,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggles",{"_index":263,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/ThemeService.html":{}}}],["toggletheme",{"_index":1761,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tolatex",{"_index":1391,"title":{},"body":{"classes/Kernel.html":{}}}],["tolerancja",{"_index":1696,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["tools",{"_index":525,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["tooltip",{"_index":1273,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tostring",{"_index":1573,"title":{},"body":{"classes/Point.html":{}}}],["total",{"_index":611,"title":{},"body":{"classes/Bitmap.html":{}}}],["track",{"_index":61,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["transform",{"_index":100,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["transform(bitmap",{"_index":1252,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["transformations",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["transposed",{"_index":1428,"title":{},"body":{"classes/Kernel.html":{}}}],["transposed.map(row",{"_index":1433,"title":{},"body":{"classes/Kernel.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["trigger",{"_index":467,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["true",{"_index":195,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":900,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["tslib",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":521,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["two",{"_index":1070,"title":{},"body":{"classes/DragArea.html":{},"classes/Point.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":903,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["typically",{"_index":1968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unary",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":461,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["under",{"_index":794,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["understanding",{"_index":1999,"title":{},"body":{"index.html":{}}}],["undo",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undo/redo",{"_index":1802,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undoes",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoing",{"_index":1823,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undone",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoredo",{"_index":1798,"title":{"classes/UndoRedo.html":{}},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["undostack",{"_index":1807,"title":{},"body":{"classes/UndoRedo.html":{}}}],["uninitialized",{"_index":573,"title":{},"body":{"classes/Bitmap.html":{}}}],["unit",{"_index":1587,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["unselect",{"_index":697,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselect(cell",{"_index":698,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselecting",{"_index":703,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselects",{"_index":696,"title":{},"body":{"classes/Bitmap.html":{}}}],["unsets",{"_index":1226,"title":{},"body":{"components/HomeComponent.html":{}}}],["unused",{"_index":978,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["up",{"_index":234,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["update",{"_index":223,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["updates",{"_index":211,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["updating",{"_index":949,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["url",{"_index":1565,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["use",{"_index":572,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":678,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":2003,"title":{},"body":{"index.html":{}}}],["users",{"_index":137,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["userselect]=\"false",{"_index":518,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["uses",{"_index":221,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["usevalue",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":875,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["utility",{"_index":725,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["utils",{"_index":812,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["utils.ts",{"_index":724,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils.ts:111",{"_index":785,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:12",{"_index":748,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:125",{"_index":776,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:14",{"_index":759,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:153",{"_index":767,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:16",{"_index":758,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:18",{"_index":744,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:181",{"_index":808,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:21",{"_index":752,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:23",{"_index":755,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:25",{"_index":764,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:36",{"_index":801,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:52",{"_index":792,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:67",{"_index":804,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:80",{"_index":806,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:9",{"_index":761,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:93",{"_index":797,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:99",{"_index":799,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["v",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid",{"_index":426,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["validate",{"_index":1953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateexpression",{"_index":1874,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateexpression(expression",{"_index":1948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":1949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":1937,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":1936,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":1934,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validity",{"_index":1935,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanged",{"_index":185,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["values",{"_index":293,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["values.push({cell",{"_index":649,"title":{},"body":{"classes/Bitmap.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["variable",{"_index":1833,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":1187,"title":{"miscellaneous/variables.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1987,"title":{},"body":{"index.html":{}}}],["version",{"_index":2059,"title":{},"body":{"properties.html":{}}}],["view",{"_index":491,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["viewchild",{"_index":1638,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["viewchild('canvas",{"_index":1636,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["viridis",{"_index":1917,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["visibility",{"_index":522,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/StructuringElementEditorComponent.html":{}}}],["visit",{"_index":2054,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1991,"title":{},"body":{"index.html":{}}}],["visualizations",{"_index":1985,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":914,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["void",{"_index":227,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["votes",{"_index":1317,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["voting",{"_index":1474,"title":{},"body":{"classes/Line.html":{}}}],["w",{"_index":1630,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["web",{"_index":1979,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":966,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["well",{"_index":666,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["wewnątrz",{"_index":1677,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["whenever",{"_index":2022,"title":{},"body":{"index.html":{}}}],["whether",{"_index":709,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["white",{"_index":387,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["whole",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["width",{"_index":400,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["width}}px",{"_index":529,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["window.matchmedia('(prefers",{"_index":1785,"title":{},"body":{"injectables/ThemeService.html":{}}}],["within",{"_index":665,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["without",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["write",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":653,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["x*math.cos(thetarad))/math.sin(thetarad",{"_index":1373,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["x/width*255",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":655,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["y)*1.1",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{}}}],["yes",{"_index":570,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["z",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["zero",{"_index":1056,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["zone.js",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccumulatorDialogComponent.html":{"url":"components/AccumulatorDialogComponent.html","title":"component - AccumulatorDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AccumulatorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accumulator-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./accumulator-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./accumulator-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accumulator\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Readonly\n                                thetaStep\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: number[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    number[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accumulator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        thetaStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-accumulator-dialog',\n  imports: [\n    MatDialogModule,\n  ],\n  templateUrl: './accumulator-dialog.component.html',\n  styleUrl: './accumulator-dialog.component.css'\n})\nexport class AccumulatorDialogComponent {\n  accumulator: number[][];\n  readonly thetaStep = 15;\n\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: number[][]) {\n    this.accumulator = data;\n  }\n}\n\n    \n\n    \n        \n\n    \n            \n                \n                    \n                        \n                            \n                        \n                        &rho;\n                        &theta;\n                    \n\n                    @for (_ of accumulator[0]; track $index) {\n                    \n                        {{($index)*thetaStep}}&deg;\n                    \n                }\n            \n            @for (row of accumulator ; track $index) {\n                \n                    \n                        {{$index-((accumulator.length-1)/2)}}\n                    \n                    @for (cell of row ; track $index) {\n                        \n                            0?cell:''}} -->\n                            {{cell}}\n                        \n                    }\n                \n            }\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                        ρ                        θ                                        @for (_ of accumulator[0]; track $index) {                                            {{($index)*thetaStep}}°                                    }                        @for (row of accumulator ; track $index) {                                                            {{$index-((accumulator.length-1)/2)}}                                        @for (cell of row ; track $index) {                                                    0?cell:\\'\\'}} -->                            {{cell}}                                            }                            }            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccumulatorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimationControllerComponent.html":{"url":"components/AnimationControllerComponent.html","title":"component - AnimationControllerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AnimationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/animation-controller/animation-controller.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\nIt allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animation-controller\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSelectModule\n                            MatInputModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animation-controller.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animation-controller.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentSpeedIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                _interval\n                            \n                            \n                                    Private\n                                    Readonly\n                                _speeds\n                            \n                            \n                                    Private\n                                _timeoutId\n                            \n                            \n                                loop\n                            \n                            \n                                playing\n                            \n                            \n                                speed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                maxSpeed\n                            \n                            \n                                minSpeed\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                            \n                                speedDown\n                            \n                            \n                                speedUp\n                            \n                            \n                                stepBackward\n                            \n                            \n                                stepFirst\n                            \n                            \n                                stepForward\n                            \n                            \n                                stepLast\n                            \n                            \n                                toggleLoop\n                            \n                            \n                                togglePlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                step\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:48\n                            \n                        \n                \n                    \n                        Maximum value (last frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value (first frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:43\n                            \n                        \n                \n                    \n                        If true, the value (current frame) is displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:50\n                            \n                        \n                \n                    \n                        Step size for incrementing/decrementing the value (frame).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:53\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:53\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChanged\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:55\n                            \n                        \n                \n                    \n                        Event emitted when the value (frame) changes, overrides default model behavior.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Continuously updates the animation frame based on the current speed and play state.\nIf the animation is playing and the current value is less than the maximum value, it increments the value.\nIf the current value reaches the maximum and looping is enabled, it resets to the minimum value.\nThe function uses a timeout to control the update frequency based on the speed setting.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSpeed\n                        \n                    \n                \n            \n            \n                \nmaxSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Returns the maximum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minSpeed\n                        \n                    \n                \n            \n            \n                \nminSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Returns the minimum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Cleans up resources when the component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Initializes the component and starts the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Sets the current value (frame) of the animation.\nIf the new value is different from the current value, it updates the value and emits the valueChanged event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value (frame) to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedDown\n                        \n                    \n                \n            \n            \n                \nspeedDown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Decreases the animation speed to the next lower predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedUp\n                        \n                    \n                \n            \n            \n                \nspeedUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Increases the animation speed to the next higher predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepBackward\n                        \n                    \n                \n            \n            \n                \nstepBackward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Steps backward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepFirst\n                        \n                    \n                \n            \n            \n                \nstepFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Steps to the first frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepForward\n                        \n                    \n                \n            \n            \n                \nstepForward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Steps forward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepLast\n                        \n                    \n                \n            \n            \n                \nstepLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Steps to the last frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoop\n                        \n                    \n                \n            \n            \n                \ntoggleLoop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Toggles the looping behavior of the animation.\nWhen enabled, the animation will restart from the beginning after reaching the end.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlay\n                        \n                    \n                \n            \n            \n                \ntogglePlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Toggles the play/pause state of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentSpeedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:64\n                        \n                    \n\n            \n                \n                    Current index in the predefined speed levels\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 250\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:66\n                        \n                    \n\n            \n                \n                    Interval in milliseconds for animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _speeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:62\n                        \n                    \n\n            \n                \n                    Predefined speed levels for the animation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _timeoutId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:60\n                        \n                    \n\n            \n                \n                    Timeout ID for managing animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:34\n                        \n                    \n\n            \n                \n                    If true, the animation will loop continuously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the animation is currently playing.\nWhen false, the animation is paused.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:40\n                        \n                    \n\n            \n                \n                    Speed multiplier for the animation playback. Higher values result in faster playback.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, input, model, OnDestroy, OnInit, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\n\n/** \n * A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\n * It allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n */\n@Component({\n  selector: 'app-animation-controller',\n  imports: [\n    MatCardModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatInputModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './animation-controller.component.html',\n  styleUrl: './animation-controller.component.css'\n})\nexport class AnimationControllerComponent implements OnInit, OnDestroy {\n  //public\n  \n  /** If true, the animation will loop continuously. */\n  loop: boolean = false;\n  /** If true, the animation is currently playing.\n   * When false, the animation is paused.\n   */\n  playing: boolean = false;\n  /** Speed multiplier for the animation playback. Higher values result in faster playback. */\n  speed: number = 1;\n  \n  /** If true, the value (current frame) is displayed. */\n  showValue = input(true);\n\n  /** Minimum value (first frame) of the animation. */\n  min = input(1);\n  /** Maximum value (last frame) of the animation. */\n  max = input(255);\n  /** Step size for incrementing/decrementing the value (frame). */\n  step = input(1);\n\n  /** Current value (frame) of the animation. */\n  value = model(0);\n  /** Event emitted when the value (frame) changes, **overrides default model behavior.** */\n  valueChanged = output();\n\n  //private\n\n  /** Timeout ID for managing animation updates */\n  private _timeoutId: any;\n  /** Predefined speed levels for the animation */\n  private readonly _speeds = [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10];\n  /** Current index in the predefined speed levels */\n  private _currentSpeedIndex = 4;\n  /** Interval in milliseconds for animation updates */\n  private readonly _interval = 250;\n\n  /**\n   * Initializes the component and starts the animation.\n   */\n  ngOnInit(): void {\n    this.animate();\n  }\n\n  /** Sets the current value (frame) of the animation.\n   * If the new value is different from the current value, it updates the value and emits the `valueChanged` event.\n   * @param value The new value (frame) to set.\n   */\n  setValue(value: number): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n      this.valueChanged.emit(value);\n    }\n  }\n\n  /**\n   * Steps to the first frame of the animation.\n   */\n  stepFirst(): void {\n    this.setValue(this.min());\n  }\n  \n  /**\n   * Steps backward in the animation.\n   */\n  stepBackward(): void {\n    this.setValue(Math.max(this.min(), this.value() - this.step()));\n  }\n  /**\n   * Toggles the play/pause state of the animation.\n   */\n  togglePlay(): void {\n    this.playing = !this.playing;\n    this.animate();\n  }\n  /**\n   * Steps forward in the animation.\n   */\n  stepForward(): void {\n    this.setValue(Math.min(this.max(), this.value() + this.step()));\n  }\n  /**\n   * Steps to the last frame of the animation.\n   */\n  stepLast(): void {\n    this.setValue(this.max());\n  }\n\n  /** Toggles the looping behavior of the animation.\n   * When enabled, the animation will restart from the beginning after reaching the end.\n   */\n  toggleLoop(): void {\n    this.loop = !this.loop;\n  }\n\n\n\n  //speedControl\n\n  /** Decreases the animation speed to the next lower predefined speed level. */\n  speedDown(): void {\n    this._currentSpeedIndex = Math.max(0, this._currentSpeedIndex - 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Increases the animation speed to the next higher predefined speed level. */\n  speedUp(): void {\n    this._currentSpeedIndex = Math.min(this._speeds.length - 1, this._currentSpeedIndex + 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Returns the maximum speed value from the predefined speed levels. */\n  maxSpeed(): number {\n    return this._speeds[this._speeds.length - 1];\n  }\n  /** Returns the minimum speed value from the predefined speed levels. */\n  minSpeed(): number {\n    return this._speeds[0];\n  }\n\n  /** Continuously updates the animation frame based on the current speed and play state.\n   * If the animation is playing and the current value is less than the maximum value, it increments the value.\n   * If the current value reaches the maximum and looping is enabled, it resets to the minimum value.\n   * The function uses a timeout to control the update frequency based on the speed setting.\n   */\n  animate(): void {\n    if(this.playing){\n      if(this.value() {\n        this.animate();\n      }, this._interval / this.speed);\n    }\n  }\n\n  /** Cleans up resources when the component is destroyed.\n   */\n  ngOnDestroy(): void{\n    clearTimeout(this._timeoutId);\n  }\n}\n\n    \n\n    \n        \n\n    \n        first_page\n    \n    \n    \n        skip_previous\n    \n    \n    \n        {{ playing ? 'pause' : 'play_arrow' }}\n    \n    \n    \n        skip_next\n    \n     \n        \n        last_page\n    \n\n\n    \n        speed\n    \n\n    \n        \n\n            \n                \n                    keyboard_double_arrow_left\n                \n            \n            \n                {{speed}}x\n            \n            = maxSpeed()\">\n                \n                    keyboard_double_arrow_right\n                \n            \n\n        \n    \n\n\n    \n        {{ loop ? 'repeat_on' : 'repeat' }}\n    \n\n    @if(showValue()){\n        \n            {{value()}}\n        \n    }\n    \n    \n\n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            first_page                    skip_previous                    {{ playing ? \\'pause\\' : \\'play_arrow\\' }}                    skip_next                         last_page                speed                                                                keyboard_double_arrow_left                                                        {{speed}}x                        = maxSpeed()\">                                    keyboard_double_arrow_right                                                    {{ loop ? \\'repeat_on\\' : \\'repeat\\' }}        @if(showValue()){                    {{value()}}            }                                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                            MatButtonModule\n                            MatSliderModule\n                            MatToolbarModule\n                            MatSidenavModule\n                            MatCardModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThemeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Image Processing Course Support'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ThemeService } from './services/theme/theme.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n  ],    \n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Image Processing Course Support';\n\n  constructor(public themeService: ThemeService) {}\n}\n\n    \n\n    \n        \n  \n    menu\n  \n\n  \n    {{title}}\n  \n  \n\n  \n    help\n  \n\n  \n    {{themeService.getTheme()=='light'?'dark_mode':'light_mode'}}\n  \n\n\n\n\n\n  \n    \n\n      @if (sidenav.opened) {\n      \n        Home\n        Help -->\n        Bitmap Editor\n        Shape Editor #tmp\n        Binary Bitmap Editor #tmp -->\n        Histogram\n        Median Filters\n        Convolutional Filters\n        Morphological Operations\n        Hough Transform\n      \n      }\n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        {{title}}          help        {{themeService.getTheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode\\'}}              @if (sidenav.opened) {              Home        Help -->        Bitmap Editor        Shape Editor #tmp        Binary Bitmap Editor #tmp -->        Histogram        Median Filters        Convolutional Filters        Morphological Operations        Hough Transform            }              '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BinaryBitmapEditorComponent.html":{"url":"components/BinaryBitmapEditorComponent.html","title":"component - BinaryBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BinaryBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing binary bitmaps (black and white images).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-binary-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./binary-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./binary-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapComponentTick\n                            \n                            \n                                height\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bitmap_storage: BitmapStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of the BinaryBitmapEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The activated route to access route parameters.\n\n                                                        \n                                                \n                                                \n                                                        bitmap_storage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks if the bitmap can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                        \n                    \n\n            \n                \n                    The ID of the bitmap being edited, if loaded from storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapComponentTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Tick counter to trigger bitmap component updates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 9\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:50\n                        \n                    \n\n            \n                \n                    Height of the bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:43\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:48\n                        \n                    \n\n            \n                \n                    Width and height of the bitmap being edited.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { Point } from '../../static/point';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\n\n/** Component for editing binary bitmaps (black and white images). */\n@Component({\n  selector: 'app-binary-bitmap-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n],\n  templateUrl: './binary-bitmap-editor.component.html',\n  styleUrl: './binary-bitmap-editor.component.css'\n})\nexport class BinaryBitmapEditorComponent {\n  /** The interactive bitmap being edited. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Tick counter to trigger bitmap component updates. */\n  bitmapComponentTick: number = 0;\n  \n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 50;\n  /** If true, pixel values are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  \n  /** Width and height of the bitmap being edited. */\n  width: number = 16;\n  /** Height of the bitmap being edited. */\n  height: number = 9;\n\n  /** The ID of the bitmap being edited, if loaded from storage. */\n  private _id: string | null = null;\n\n  /** Creates an instance of the BinaryBitmapEditorComponent.\n   * @param route The activated route to access route parameters.\n   * @param bitmap_storage The service for loading and saving bitmaps.\n   * @param router The router for navigation.\n   */\n  constructor(private route: ActivatedRoute, private bitmap_storage: BitmapStorageService, private router: Router) {\n    this._id = this.route.snapshot.paramMap.get('id');\n    let bitmap = this.bitmap_storage.load(this._id);\n    if(bitmap) \n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    this.width = this.bitmap.width;\n    this.height = this.bitmap.height;\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Checks if the bitmap can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return this._id !== null;\n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current bitmap to storage and navigates back. */\n  save(): void {\n    if (this._id !== null) {\n      this.bitmap_storage.save(this._id, this.bitmap);\n      this.quit();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BinaryBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bitmap.html":{"url":"classes/Bitmap.html","title":"class - Bitmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bitmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/bitmap.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\nThe bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\nThe class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\nand retrieving the dimensions of the bitmap.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _height\n                            \n                            \n                                    Protected\n                                _matrix\n                            \n                            \n                                    Protected\n                                _width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cells\n                            \n                            \n                                get\n                            \n                            \n                                getBinary\n                            \n                            \n                                getCellIndex\n                            \n                            \n                                getIndexCell\n                            \n                            \n                                getWithPadding\n                            \n                            \n                                isOut\n                            \n                            \n                                length\n                            \n                            \n                                pixels\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/bitmap.ts:17\n                            \n                        \n\n                \n                    \n                            Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\nIf an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The width of the bitmap (number of columns). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The height of the bitmap (number of rows). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        oldMatrix\n                                                  \n                                                        \n                                                                        Bitmap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                An optional old Bitmap instance to copy values from.\n\n                                                        \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default pixel value to use for uninitialized pixels. Default is 0.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:15\n                        \n                    \n\n            \n                \n                    The height of the bitmap (number of rows).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _matrix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:17\n                        \n                    \n\n            \n                \n                    The 2D array representing the bitmap, where each element is a pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:13\n                        \n                    \n\n            \n                \n                    The width of the bitmap (number of columns).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cells\n                        \n                    \n                \n            \n            \n                \ncells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:120\n                        \n                    \n\n\n            \n                \n                        Gets all cells in the bitmap as an array of Point objects.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Point objects representing all cells in the bitmap.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number | undefined\n\n                        \n                            \n                                The pixel value at the specified cell, or undefined if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBinary\n                        \n                    \n                \n            \n            \n                \ngetBinary(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the binary value (0 or 1) at the specified cell.\nA value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the binary value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the pixel value is 0, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellIndex\n                        \n                    \n                \n            \n            \n                \ngetCellIndex(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:159\n                        \n                    \n\n\n            \n                \n                        Gets the linear index corresponding to the specified cell (Point).\nIf the cell is out of bounds, it returns 0.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell (Point) to convert to a linear index.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexCell\n                        \n                    \n                \n            \n            \n                \ngetIndexCell(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:147\n                        \n                    \n\n\n            \n                \n                        Gets the cell (Point) corresponding to the specified linear index.\nIf the index is out of bounds, it returns a Point(0, 0).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The linear index to convert to a cell (Point).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWithPadding\n                        \n                    \n                \n            \n            \n                \ngetWithPadding(cell: Point, padding: Padding, defaultValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\nIf the cell is out of bounds, the method applies the specified padding mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The padding mode to apply if the cell is out of bounds.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    255\n                                            \n\n                                            \n                                                    The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOut\n                        \n                    \n                \n            \n            \n                \nisOut(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:57\n                        \n                    \n\n\n            \n                \n                        Checks if the specified cell is out of the bounds of the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to check, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is out of bounds, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:166\n                        \n                    \n\n\n            \n                \n                        Gets the total number of pixels in the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total number of pixels in the bitmap (width * height).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixels\n                        \n                    \n                \n            \n            \n                \npixels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:130\n                        \n                    \n\n\n            \n                \n                        Gets all pixels in the bitmap as an array of objects containing the cell (Point) and its value.\n\n\n                        \n                            Returns :     literal type[]\n\n                        \n                            \n                                An array of objects, each containing a 'cell' property (Point) and a 'value' property (number).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(cell: Point, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets the pixel value at the specified cell.\nIf the cell is out of bounds, the method does nothing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to set the pixel value at, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to set at the specified cell.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:43\n                                \n                            \n                    \n                        \n                                Gets the width of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:49\n                                \n                            \n                    \n                        \n                                Gets the height of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { DragArea } from \"./drag-area\";\nimport { Padding } from \"./enums\";\nimport { Point } from \"./point\";\n\n\n/** * Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\n * The bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\n * The class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\n * and retrieving the dimensions of the bitmap.\n */   \nexport class Bitmap{\n  /** The width of the bitmap (number of columns). */\n  protected _width: number;\n  /** The height of the bitmap (number of rows). */\n  protected _height: number;\n  /** The 2D array representing the bitmap, where each element is a pixel value. */\n  protected _matrix: number[][];\n\n  /** Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * @param width The width of the bitmap (number of columns). Default is 10.\n   * @param height The height of the bitmap (number of rows). Default is 10.\n   * @param oldMatrix An optional old Bitmap instance to copy values from.\n   * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 0.\n   */\n  constructor(width: number = 10, height: number = 10, oldMatrix?: Bitmap, defaultValue: number = 0) {\n    this._width = width;\n    this._height = height;\n    this._matrix = Array.from({ length: height }, () => Array(width).fill(defaultValue));\n\n    oldMatrix?._matrix?.forEach((row, r) => {\n      row.forEach((value, c) => {\n        if (r = this._height || cell.col = this._width || !Number.isInteger(cell.row) || !Number.isInteger(cell.col);\n  }\n  /** Gets the pixel value at the specified cell.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @returns The pixel value at the specified cell, or undefined if the cell is out of bounds.\n   */\n  get(cell: Point): number | undefined {\n    if (this.isOut(cell)) return undefined;\n    return this._matrix[cell.row]?.[cell.col];\n  }\n  /** Gets the binary value (0 or 1) at the specified cell.\n   * A value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n   * @param cell The cell to get the binary value from, represented as a Point object with row and column properties.\n   * @returns True if the pixel value is 0, false otherwise.\n   */\n  getBinary(cell: Point): boolean {\n    return this._matrix[cell.row]?.[cell.col] === 0;\n  }\n  /** Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\n   * If the cell is out of bounds, the method applies the specified padding mode.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @param padding The padding mode to apply if the cell is out of bounds.\n   * @param defaultValue The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n   * @returns The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n   */\n  getWithPadding(cell: Point, padding: Padding, defaultValue: number = 255): number {\n    if (!this.isOut(cell))\n      return this.get(cell) ?? 0;\n\n    if (padding == Padding.Edge) {\n      let row = cell.row;\n      let col = cell.col;\n\n      if (row = this.height)\n        row = this.height - 1;\n\n      if (col = this.width)\n        col = this.width - 1;\n      return this.get(new Point(row, col)) ?? 0;\n    }\n    else if (padding == Padding.DefaultValue){\n      return defaultValue;\n    }\n    return 0;\n  }\n\n  /** Sets the pixel value at the specified cell.\n    * If the cell is out of bounds, the method does nothing.\n    * @param cell The cell to set the pixel value at, represented as a Point object with row and column properties.\n    * @param value The pixel value to set at the specified cell.\n  */\n  set(cell: Point, value: number): void {\n    if(this.isOut(cell)) return;\n    this._matrix[cell.row][cell.col] = value;\n  }\n  /** Gets all cells in the bitmap as an array of Point objects.\n   * @returns An array of Point objects representing all cells in the bitmap.\n   */\n  cells(): Point[]{\n    let values: Point[] = [];\n    for(let row=0;row {\n      row.forEach((value, c) => {\n        values.push({cell: new Point(r, c), value});\n      });\n    });\n    \n    return values;\n  }\n\n  /** Gets the cell (Point) corresponding to the specified linear index.\n   * If the index is out of bounds, it returns a Point(0, 0).\n   * @param index The linear index to convert to a cell (Point).\n   * @returns A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n   */\n  getIndexCell(index: number): Point {\n    if (index = this.length()) return new Point(0, 0);\n    const x = Math.trunc(index / this.width);\n    const y = index % this.width;\n    return new Point(x, y);\n  }\n  /** Gets the linear index corresponding to the specified cell (Point).\n   * If the cell is out of bounds, it returns 0.\n   * @param cell The cell (Point) to convert to a linear index.\n   * @returns The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n   */\n  getCellIndex(cell: Point): number {\n    if (this.isOut(cell)) return 0;\n    return cell.row * this.width + cell.col;\n  }\n  /** Gets the total number of pixels in the bitmap.\n   * @returns The total number of pixels in the bitmap (width * height).\n   */\n  length(): number {\n    return this.width * this.height;\n  }\n}\n\n\n\n/** * Represents an interactive bitmap that extends the Bitmap class with additional features for selection and dragging.\n * This class adds functionality for selecting and dragging cells within the bitmap, as well as highlighting a specific element.\n * It also provides methods for managing the selection state and calculating histograms based on the selected pixels.\n * @extends Bitmap\n */\nexport class InteractiveBitmap extends Bitmap {\n  /** The set of selected cells, represented as strings in the format \"row,col\". */\n  private _selected: Set;\n  /** The drag area for managing dragging operations within the bitmap. */\n  private _dragArea: DragArea;  \n  /** The currently highlighted element, or null if no element is highlighted. Used in morphological operations. */\n  highlightedElement: Point | null = null;\n\n  /** Gets the drag area for managing dragging operations within the bitmap. */\n  get dragArea(): DragArea {\n    return this._dragArea;\n  }\n  /** Sets the drag area for managing dragging operations within the bitmap. */\n  set dragArea(drag_area: DragArea) {\n    this._dragArea = drag_area;\n  }\n  /** Gets the currently selected cells as an array of Point objects.\n   * @returns An array of Point objects representing the selected cells.\n   */\n  get selected(): Point[] {\n    return Array.from(this._selected).map(pos => {\n      const [row, col] = pos.split(',').map(Number);\n      return new Point(row, col);\n    });\n  }\n\n  /** Creates a new InteractiveBitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * Initializes the selection set and drag area.\n    * @param width The width of the bitmap (number of columns).\n    * @param height The height of the bitmap (number of rows).\n    * @param oldMatrix An optional old Bitmap instance to copy values from.\n    * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 255 (white). \n  */\n  constructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number = 255) {\n    super(width, height, oldMatrix, defaultValue);\n    this._selected = new Set();\n    this._dragArea = new DragArea();\n  }\n\n  /** Checks if the specified cell is currently being dragged.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is being dragged, false otherwise.\n   */\n  isDragged(cell: Point): boolean {\n    return this._dragArea.dragging&&this._dragArea.includes(cell);\n  }\n  /** Checks if the specified cell is currently selected.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is selected, false otherwise.\n   */\n  isSelected(cell: Point): boolean {\n    if (this.isOut(cell)) \n      return false;\n    return this._selected.has(cell.toString());\n  }\n\n  /** Selects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to select, represented as a Point object with row and column properties.\n   */\n  select(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.add(cell.toString());\n  }\n  /** Unselects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to unselect, represented as a Point object with row and column properties.\n   */\n  unselect(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.delete(cell.toString());\n  }\n  /** Sets the selection state of the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to set the selection state for, represented as a Point object with row and column properties.\n   * @param value True to select the cell, false to unselect it.\n   */\n  setSelection(cell: Point, value: boolean): void {\n    if (value) \n      this.select(cell);\n    else \n      this.unselect(cell);\n  }\n  /** Clears the current selection, unselecting all selected cells. */\n  clearSelection(): void {\n    this._selected.clear();\n  }\n  /** Calculates the histogram of pixel values in the bitmap.\n   * The histogram is calculated based on the specified group size and whether to include only selected pixels.\n   * @param groupSize The size of each group in the histogram. Default is 1 (individual pixel values).\n   * @param selectedOnly If true, only selected pixels are included in the histogram.\n   * @returns An array representing the histogram of pixel values.\n   */\n  histogram(groupSize: number = 1, selectedOnly: boolean): number[] {\n    let histogram = Array(Math.ceil(256 / groupSize)).fill(0);\n\n    this.pixels().forEach(\n      pixel => {\n        if (!selectedOnly || (selectedOnly && this.isSelected(pixel.cell)))\n          if (!Number.isNaN(pixel.value))\n            histogram[Math.trunc(pixel.value / groupSize)]++;\n      }\n    );\n\n    return histogram;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BitmapRenderer.html":{"url":"classes/BitmapRenderer.html","title":"class - BitmapRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BitmapRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/render-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class for rendering bitmaps onto a canvas.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorScale\n                            \n                            \n                                grid\n                            \n                            \n                                gridColor\n                            \n                            \n                                headerColor\n                            \n                            \n                                headers\n                            \n                            \n                                numbers\n                            \n                            \n                                pixelSize\n                            \n                            \n                                selectionColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createDiagonalPattern\n                            \n                            \n                                drawGrid\n                            \n                            \n                                drawString\n                            \n                            \n                                getCursorCell\n                            \n                            \n                                    Private\n                                getOffsetX\n                            \n                            \n                                    Private\n                                getOffsetY\n                            \n                            \n                                isCursorOnCell\n                            \n                            \n                                isCursorOnColHeader\n                            \n                            \n                                isCursorOnRowHeader\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:18\n                        \n                    \n\n            \n                \n                    Color scale used for rendering the bitmap. Default is Grayscale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:12\n                        \n                    \n\n            \n                \n                    If true, the grid lines will be drawn. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#74777f'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:21\n                        \n                    \n\n            \n                \n                    Color used for drawing the grid lines. Default is '#74777f'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#c1cce5'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:23\n                        \n                    \n\n            \n                \n                    Color used for the header background. Default is '#c1cce5'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:16\n                        \n                    \n\n            \n                \n                    If true, row and column headers will be displayed. Default is false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:14\n                        \n                    \n\n            \n                \n                    If true, the numerical values of each cell will be displayed. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:9\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap when rendered on the canvas. Default is 50.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#222\"\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:25\n                        \n                    \n\n            \n                \n                    Color used for selection highlighting. Default is '#222'.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDiagonalPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiagonalPattern(size: number, lineWidth: number, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:153\n                        \n                    \n\n\n            \n                \n                        Creates a diagonal line pattern for selection highlighting.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    The size of the pattern canvas. Default is 20.\n\n                                            \n                                        \n                                        \n                                                lineWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    The width of the diagonal lines. Default is 2.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '#ccc'\n                                            \n\n                                            \n                                                    The color of the diagonal lines. Default is '#ccc'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                A canvas element containing the diagonal line pattern.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawGrid\n                        \n                    \n                \n            \n            \n                \ndrawGrid(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:125\n                        \n                    \n\n\n            \n                \n                        Draws the grid lines on the canvas for the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to draw the grid for.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color of the grid lines.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawString\n                        \n                    \n                \n            \n            \n                \ndrawString(ctx: CanvasRenderingContext2D, scale: number, text: string, x: number, y: number, color: string, stroke: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:111\n                        \n                    \n\n\n            \n                \n                        Draws a string on the canvas at the specified position with the given scale and color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The scale factor for the text size.\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text string to be drawn.\n\n                                            \n                                        \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The x-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The y-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The color of the text.\n\n                                            \n                                        \n                                        \n                                                stroke\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    If true, the text will be stroked for better visibility. Default is false.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCursorCell\n                        \n                    \n                \n            \n            \n                \ngetCursorCell(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:52\n                        \n                    \n\n\n            \n                \n                        Gets the cell coordinates (row and column) under the cursor.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing the row and column indices of the cell under the cursor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetX\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetX()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets the X offset (row headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The X offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetY\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetY()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:99\n                        \n                    \n\n\n            \n                \n                        Gets the Y offset (column headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The Y offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnCell\n                        \n                    \n                \n            \n            \n                \nisCursorOnCell(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:36\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over a specific cell in the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over a cell in the bitmap, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnColHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnColHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the column header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the column header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnRowHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnRowHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:80\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the row header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the row header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:181\n                        \n                    \n\n\n            \n                \n                        Renders the bitmap onto the provided canvas context with the specified scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to be rendered.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Bitmap, InteractiveBitmap } from \"./bitmap\";\nimport { getContrastColor, scaleColor } from \"./color-utils\";\nimport { ColorScale } from \"./enums\";\nimport { Point } from \"./point\";\n\n/** Utility class for rendering bitmaps onto a canvas. */\nexport class BitmapRenderer {\n    /** Size of each pixel in the bitmap when rendered on the canvas. Default is 50. */\n    pixelSize: number = 50;\n    \n    /** If true, the grid lines will be drawn. Default is true. */\n    grid: boolean = true;\n    /** If true, the numerical values of each cell will be displayed. Default is true. */\n    numbers: boolean = true;\n    /** If true, row and column headers will be displayed. Default is false. */\n    headers: boolean = false;\n    /** Color scale used for rendering the bitmap. Default is Grayscale. */\n    colorScale: ColorScale = ColorScale.Grayscale;\n    \n    /** Color used for drawing the grid lines. Default is '#74777f'. */\n    gridColor: string = '#74777f';\n    /** Color used for the header background. Default is '#c1cce5'. */\n    headerColor: string = '#c1cce5';\n    /** Color used for selection highlighting. Default is '#222'. */\n    selectionColor: string = \"#222\";\n\n\n    //cursor\n\n    /** Checks if the cursor is over a specific cell in the bitmap.\n     * @param x The x-coordinate of the cursor.\n     * @param y The y-coordinate of the cursor.\n     * @param bitmap The bitmap to check against.\n     * @returns True if the cursor is over a cell in the bitmap, false otherwise.\n     */\n    isCursorOnCell(x: number, y: number, bitmap: Bitmap): boolean {\n       let cell = this.getCursorCell(x, y);\n       return (\n           x >= this.getOffsetX() &&\n           y >= this.getOffsetY() &&\n           cell.row >= 0 &&\n           cell.row = 0 &&\n           cell.col = offsetX && x = offsetY && y  bitmap.isDragged(cell);\n                const isSel = (cell: Point) => bitmap.isSelected(cell) || bitmap.isDragged(cell);\n                if(!isSel(cell)) continue;\n\n\n                \n                ctx.fillStyle = pattern;\n                ctx.strokeStyle = selectionColor;\n\n                // const value = bitmap.get(row, col);\n                // const fillColor = scaleColor(value, colorScale); \n                // if(isDark(fillColor)){\n                // }\n                // else{\n                //     ctx.fillStyle = darkPattern;\n                //     ctx.strokeStyle = getContrastColor(selectionColor);\n                // }\n                if(isSel(cell) && (bitmap.dragArea.button != 2 || !isDragged(cell))){\n                    const width = Math.round(((col+1) * pixelSize + offsetX) * scale)-Math.round((col * pixelSize + offsetX) * scale);\n                    const height = Math.round(((row+1) * pixelSize + offsetY) * scale)-Math.round((row * pixelSize + offsetY) * scale);\n                    ctx.fillRect(Math.round((col * pixelSize + offsetX) * scale), Math.round((row * pixelSize + offsetY) * scale), width, height);\n                }\n\n\n                //above\n                if((isSel(cell)&&!isSel(cell.up())) || (isDragged(cell)&&!isDragged(cell.up()))) {\n                    let slw = bitmap.isOut(cell.up()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(((col * pixelSize + offsetX) * scale)+0.5,               Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.lineTo(((col * pixelSize + offsetX + pixelSize) * scale)-0.5,   Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //bottom\n                if((isSel(cell)&&!isSel(cell.down())) || (isDragged(cell)&&!isDragged(cell.down()))) {\n                    let slw = bitmap.isOut(cell.down()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX) * scale)+0.5,             Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + pixelSize + offsetX) * scale)-0.5, Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.stroke();\n                }\n                //left\n                if((isSel(cell)&&!isSel(cell.left())) || (isDragged(cell)&&!isDragged(cell.left()))) {\n                    let slw = bitmap.isOut(cell.left()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + pixelSize + offsetY) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //right\n                if((isSel(cell)&&!isSel(cell.right())) || (isDragged(cell)&&!isDragged(cell.right()))) {\n                    let slw = bitmap.isOut(cell.right()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY + pixelSize) * scale)-0.5);\n                    ctx.stroke();\n                }\n\n            }\n        }\n       \n        \n\n        //numbers\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.lineJoin = 'round';\n        if (numbers) {\n            for (let row = 0; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BitmapStorageService.html":{"url":"injectables/BitmapStorageService.html","title":"injectable - BitmapStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BitmapStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bitmap-storage/bitmap-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle storage and retrieval of bitmaps using local storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                has\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if a bitmap with the given ID exists in storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the bitmap exists, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Loads a bitmap from local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier of the bitmap to load.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap | null\n\n                        \n                            \n                                The loaded bitmap, or null if not found or invalid.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(id: string, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Saves a bitmap to local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier for the bitmap.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bitmap-storage-'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:11\n                        \n                    \n\n            \n                \n                    Key prefix for storing bitmaps in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\n\n\n/** Service to handle storage and retrieval of bitmaps using local storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BitmapStorageService {\n  /** Key prefix for storing bitmaps in local storage. */\n  private _storageKey: string = 'bitmap-storage-';\n\n  /** Saves a bitmap to local storage.\n   * @param id The identifier for the bitmap.\n   * @param bitmap The bitmap to save.\n   * @see Bitmap\n   */\n  save(id: string, bitmap: Bitmap) {\n    localStorage.setItem(this._storageKey + id, JSON.stringify(bitmap));\n  }\n\n  /** Checks if a bitmap with the given ID exists in storage.\n   * @param id The identifier to check.\n   * @returns True if the bitmap exists, false otherwise.\n   */\n  has(id: string): boolean {\n    return this.load(this._storageKey + id) !== null;\n  }\n\n  /** Loads a bitmap from local storage.\n   * @param id The identifier of the bitmap to load.\n   * @returns The loaded bitmap, or null if not found or invalid.\n   * @see Bitmap\n   */\n  load(id: string | null): Bitmap | null {\n    if (!id) return null;\n    const raw = localStorage.getItem(this._storageKey + id);\n    if (!raw) return null;\n\n    try {\n      const obj = JSON.parse(raw) as any;\n      if (!obj || typeof obj !== \"object\") return null;\n      if (typeof obj._width !== \"number\" || typeof obj._height !== \"number\" || obj._matrix === undefined || obj._matrix === null) return null;\n      const inst = Object.create(Bitmap.prototype) as Bitmap;\n      return Object.assign(inst, obj);\n    } catch {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConvolutionalFilterAnimationComponent.html":{"url":"components/ConvolutionalFilterAnimationComponent.html","title":"component - ConvolutionalFilterAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ConvolutionalFilterAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate the application of a convolutional filter on a bitmap image.\nIt allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-convolutional-filter-animation\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSliderModule\n                            RouterModule\n                            MatFormFieldModule\n                            MatMenuModule\n                                BitmapComponent\n                            FormsModule\n                                AnimationControllerComponent\n                            MatCheckboxModule\n                            MatSelectModule\n                            MathjaxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./convolutional-filter-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./convolutional-filter-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                filteredBitmap\n                            \n                            \n                                kernel\n                            \n                            \n                                padding\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                resultKernel\n                            \n                            \n                                selectedColorScale\n                            \n                            \n                                showBase\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                showNumberValues\n                            \n                            \n                                sourceKernel\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                getEquation\n                            \n                            \n                                    Private\n                                getResultKernel\n                            \n                            \n                                    Private\n                                getSourceKernel\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                openDialog\n                            \n                            \n                                refresh\n                            \n                            \n                                    Private\n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                            \n                        \n\n                \n                    \n                            Constructor to initialize the component with necessary services and load initial data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage dialog interactions.\n\n                                                        \n                                                \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to load and save bitmaps in storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFilter(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Applies the convolutional filter to the source bitmap and stores the result in the destination bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the filtered result is stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the convolutional filter is applied.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEquation\n                        \n                    \n                \n            \n            \n                \ngetEquation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Generates a LaTeX representation of the convolution operation for display.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getResultKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResultKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Computes the result kernel by multiplying the convolutional kernel with the source kernel.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the weighted values used to compute the filtered pixel value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Retrieves the kernel of pixel values centered around the current animation index.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the pixel values in the neighborhood.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to jump to a specific pixel in the animation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Opens a dialog to edit the convolutional kernel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValues(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Sets pixel values from the source bitmap to the destination bitmap up to a specified length.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to set.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the pixel values are set.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap from which the pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the convolutional filter is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"convolutional-filter\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:59\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:51\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the convolutional filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    The convolutional kernel used for filtering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Padding\n\n                    \n                \n                \n                    \n                        Default value : Padding.Edge\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Padding strategy used when accessing pixels outside the bitmap boundaries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:53\n                        \n                    \n\n            \n                \n                    The result bitmap after the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    The kernel representing the weighted values used to compute the filtered pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedColorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:83\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:81\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result for comparison.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:75\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:77\n                        \n                    \n\n            \n                \n                    If true, headers (row/column indices) are displayed around the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNumberValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:79\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    The kernel representing the current neighborhood of pixels being processed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:57\n                        \n                    \n\n            \n                \n                    Used to trigger re-rendering of the bitmap component when the bitmap changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KernelDialogComponent } from '../dialogs/kernel-dialog/kernel-dialog.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Kernel } from '../../static/kernel';\nimport { ColorScale, OutOfRangeHandling, Padding, QuantizationMode } from '../../static/enums';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Point } from '../../static/point';\nimport { MatrixDisplayComponent } from \"../matrix-display/matrix-display.component\";\nimport { MathjaxModule } from 'mathjax-angular';\nimport { MatSelectModule } from '@angular/material/select';\n\n/** Component to visualize and animate the application of a convolutional filter on a bitmap image.\n * It allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n */\n@Component({\n  selector: 'app-convolutional-filter-animation',\n  imports: [\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSliderModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    BitmapComponent,\n    FormsModule,\n    AnimationControllerComponent,\n    MatCheckboxModule,\n    MatSelectModule,\n    MathjaxModule,\n],\n  templateUrl: './convolutional-filter-animation.component.html',\n  styleUrl: './convolutional-filter-animation.component.css'\n})\nexport class ConvolutionalFilterAnimationComponent {\n  /** The original bitmap image to which the convolutional filter is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the convolutional filter. */\n  filteredBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the animation. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n\n\n  /** Used to trigger re-rendering of the bitmap component when the bitmap changes. */\n  tick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = \"convolutional-filter\";\n\n  /** The convolutional kernel used for filtering. */\n  kernel: Kernel = new Kernel(3);\n  /** The kernel representing the current neighborhood of pixels being processed. */\n  sourceKernel: Kernel = new Kernel(3);\n  /** The kernel representing the weighted values used to compute the filtered pixel value. */\n  resultKernel: Kernel = new Kernel(3);\n  /** Padding strategy used when accessing pixels outside the bitmap boundaries. */\n  padding: Padding = Padding.Edge;\n\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers (row/column indices) are displayed around the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, pixel values are displayed on the bitmap. */\n  showNumberValues: boolean = true;\n  /** If true, the original bitmap is shown under the result for comparison. */\n  showBase: boolean = false;\n  /** Color scale used for displaying the bitmap. */\n  selectedColorScale: ColorScale = ColorScale.Grayscale;\n  \n  \n  //controls\n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n\n  /** Constructor to initialize the component with necessary services and load initial data. \n   * @param dialog Service to manage dialog interactions.\n   * @param bitmapStorage Service to load and save bitmaps in storage.\n  */\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n    \n    this.kernel.load(\"kernel\");\n    this.refresh();\n  }\n\n  /** Opens a dialog to edit the convolutional kernel. */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(KernelDialogComponent, {\n      width: '650px',\n      disableClose: true,\n      // hasBackdrop: false,\n      data: this.kernel.clone()\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.kernel = result;\n        this.sourceKernel = new Kernel(result.size);\n        this.resultKernel = new Kernel(result.size);\n        this.kernel.save(\"kernel\");\n        this.refresh();\n      }\n    });\n  }\n  \n  /** Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation. */\n  refresh(): void {\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.filteredBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.applyFilter(this.bitmap.length(), this.filteredBitmap, this.bitmap);\n    this.animate();\n  }\n\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    const index = this.animationIndex;\n    this.bitmap.clearSelection();\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.setValues(index+1, this.resultBitmap, this.filteredBitmap);\n    \n\n    this.sourceKernel = this.getSourceKernel()\n    this.resultKernel = this.getResultKernel();\n\n    const size = this.kernel.size;\n    const r = Math.trunc((size - 1) / 2);\n    const cell = this.bitmap.getIndexCell(index);\n\n    if (index \n    \n\n    \n        \n\n    \n        \n            edit\n            Edit\n        \n        \n            grid_on\n            Kernel\n        \n        \n        \n            Padding\n            \n                Zero\n                Edge\n            \n        \n        \n        Pixel Size\n        \n            \n        \n        \n        \n            Numbers\n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Base\n        \n        \n        \n        \n    \n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"\n                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"\n                    (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"\n                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n    \n\n    \n        \n             -->\n            \n                asterisk\n             -->\n\n             -->\n            \n            \n            \n                equal\n             -->\n\n             -->\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        edit            Edit                            grid_on            Kernel                                    Padding                            Zero                Edge                                    Pixel Size                                                        Numbers                            Grid                            Headers                            Base                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"                    (cellClicked)=\"onCellClicked($event)\">                                                                        =40\" [showGrid]=\"showGrid\"                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">                                                                 -->                            asterisk             -->             -->                                                    equal             -->             -->            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConvolutionalFilterAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragArea.html":{"url":"classes/DragArea.html","title":"class - DragArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/drag-area.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a draggable area defined by two points (start and end).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                ctrlKey\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragging\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAreaCells\n                            \n                            \n                                includes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:10\n                        \n                    \n\n            \n                \n                    Mouse button used for dragging (0: left, 1: middle, 2: right).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ctrlKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:8\n                        \n                    \n\n            \n                \n                    Indicates whether the Ctrl key is pressed during the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:14\n                        \n                    \n\n            \n                \n                    Ending point of the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:6\n                        \n                    \n\n            \n                \n                    Indicates whether the area is currently being dragged.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:12\n                        \n                    \n\n            \n                \n                    Starting point of the drag operation.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAreaCells\n                        \n                    \n                \n            \n            \n                \ngetAreaCells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets all cells within the dragged area.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Points representing all cells within the dragged area.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includes\n                        \n                    \n                \n            \n            \n                \nincludes(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:20\n                        \n                    \n\n\n            \n                \n                        Checks if a given cell is within the dragged area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is within the dragged area, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from \"./point\";\n\n/** Class representing a draggable area defined by two points (start and end). */\nexport class DragArea{\n    /** Indicates whether the area is currently being dragged. */\n    dragging: boolean = false;\n    /** Indicates whether the Ctrl key is pressed during the drag operation. */\n    ctrlKey: boolean = false;\n    /** Mouse button used for dragging (0: left, 1: middle, 2: right). */\n    button: number = 0;\n    /** Starting point of the drag operation. */\n    dragStart: Point = new Point(0, 0);\n    /** Ending point of the drag operation. */\n    dragEnd: Point = new Point(0, 0);\n\n    /** Checks if a given cell is within the dragged area.\n     * @param cell The Point to check.\n     * @returns True if the cell is within the dragged area, false otherwise.\n     */\n    includes(cell: Point): boolean {\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n        return cell.row = select_row_start && cell.col = select_col_start;\n    }\n\n    /** Gets all cells within the dragged area.\n     * @returns An array of Points representing all cells within the dragged area.\n     */\n    getAreaCells(): Point[] {\n        const cells: Point[] = [];\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n\n        for(let row = select_row_start; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n            \n                styleUrl\n                ./help.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-help',\n  imports: [\n    MatCardModule\n  ],\n  templateUrl: './help.component.html',\n  styleUrl: './help.component.css'\n})\nexport class HelpComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history/history.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage applied expression history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                history\n                            \n                            \n                                    Private\n                                historyLimit\n                            \n                            \n                                    Private\n                                storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToHistory\n                            \n                            \n                                clearHistory\n                            \n                            \n                                getHistory\n                            \n                            \n                                getHistoryReversed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToHistory\n                        \n                    \n                \n            \n            \n                \naddToHistory(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Adds an action to the history, ensuring no duplicates and respecting the history limit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The action (expression) to add to the history.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHistory\n                        \n                    \n                \n            \n            \n                \nclearHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Clears the history both in memory and in local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves the history.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The history array.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistoryReversed\n                        \n                    \n                \n            \n            \n                \ngetHistoryReversed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the history in reverse order (most recent first).\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The reversed history array.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:9\n                        \n                    \n\n            \n                \n                    List of applied expressions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        historyLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:11\n                        \n                    \n\n            \n                \n                    Maximum number of history entries to keep.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'history'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:13\n                        \n                    \n\n            \n                \n                    Key for storing the history in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Service to manage applied expression history. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  /** List of applied expressions. */\n  private history: string[] = [];\n  /** Maximum number of history entries to keep. */\n  private historyLimit: number = 25;\n  /** Key for storing the history in local storage. */\n  private storageKey: string = 'history';\n\n\n  /** Adds an action to the history, ensuring no duplicates and respecting the history limit.\n   * @param action The action (expression) to add to the history.\n   */\n  addToHistory(action: string): void {\n    if(this.history.includes(action)) \n      this.history = this.history.filter(item => item !== action);\n    \n    this.history.push(action);\n    if (this.history.length > this.historyLimit) {\n      this.history.shift();\n    }\n    localStorage.setItem(this.storageKey, JSON.stringify(this.history));\n  }\n\n  /** Retrieves the history in reverse order (most recent first).\n   * @returns The reversed history array.\n   */\n  getHistoryReversed(): string[] {\n    return this.getHistory().slice().reverse();\n  }\n\n  /** Retrieves the history.\n   * @returns The history array.\n   */\n  getHistory(): string[] {\n    const history = localStorage.getItem(this.storageKey);\n    if (history) {\n      this.history = JSON.parse(history);\n    }\n    return this.history;\n  }\n\n  /** Clears the history both in memory and in local storage. */\n  clearHistory(): void {\n    this.history = [];\n    localStorage.removeItem(this.storageKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatDividerModule\n                            MatIconModule\n                            MatListModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  imports: [\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n        Bitmap Editor\n        open_in_new\n    \n\n    \n        \n        Bitmap element controls\n    \n\n    \n        \n            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:\n        \n        \n            \n                Left-click on a cell: Selects the clicked cell.\n            \n            \n                Right-click on a selected cell: Deselects the clicked cell.\n            \n            \n                Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.\n            \n            \n                Click on a column header: Selects or deselects the whole column.\n            \n            \n                Click on a row header: Selects or deselects the whole row.\n            \n            \n                Ctrl + A: Selects all cells in the editor.\n            \n            \n                Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.\n            \n            \n                Ctrl + Z: Undoes the last action.\n            \n            \n                Ctrl + Y: Redoes the last undone action.\n            \n        \n        \n    \n\n\n    \n        Expression\n    \n    \n        \n            The editor includes support for mathematical expressions using the expr-eval library, enabling\n            advanced manipulation of pixel values.\n            You can write formulas to apply color transformations, perform calculations for each pixel, or generate\n            procedural effects.\n        \n            \n        \n            Each pixel’s position can be accessed through the variables x (column index) and y (row index).\n            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,\n            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.\n                \n        \n        \n            Expressions can use these variables and functions together with built-in math functions such as\n            sin(), cos(), max(), and random()\n            to create dynamic and complex image modifications.\n        \n        \n    \n\n    \n        Expression Examples\n    \n\n    \n        \n            \n                \n                    255\n                \n            \n            \n                \n                    b(x, y)*1.1\n                \n            \n            \n                \n                    b(y, min(WIDTH, HEIGHT)-1-x)\n                \n            \n            \n                \n                    x/WIDTH*255\n                \n            \n            \n                \n                    simplex(x, y, RANDOM) * 128 + 128\n                \n            \n        \n        \n    \n\n    \n    \n        Expression Syntax\n    \n\n    \n        \n            \n                Variables\n                \n                    x: The column index of the pixel being processed (0 to WIDTH-1).\n                    y: The row index of the pixel being processed (0 to HEIGHT-1).\n                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).\n                \n            \n            \n                Operators\n            \n            \n                Unary Operators\n            \n            \n                Predefined Functions\n                \n                    b(x, y): Returns the value of the pixel at (x, y).\n                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.\n                \n            \n            \n                Constants\n                \n                    WIDTH: The width of the bitmap.\n                    HEIGHT: The height of the bitmap.\n                    RANDOM: Random value between 0 and 255.\n\n                \n            \n        \n        \n    \n\n    \n    \n    \n        Binary Bitmap Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n        \n    \n\n    \n\n    \n        Structuring Element Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n            MMB: Sets the origin of the structuring element\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitmap Editor        open_in_new                        Bitmap element controls                            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:                                            Left-click on a cell: Selects the clicked cell.                                        Right-click on a selected cell: Deselects the clicked cell.                                        Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.                                        Click on a column header: Selects or deselects the whole column.                                        Click on a row header: Selects or deselects the whole row.                                        Ctrl + A: Selects all cells in the editor.                                        Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.                                        Ctrl + Z: Undoes the last action.                                        Ctrl + Y: Redoes the last undone action.                                            Expression                            The editor includes support for mathematical expressions using the expr-eval library, enabling            advanced manipulation of pixel values.            You can write formulas to apply color transformations, perform calculations for each pixel, or generate            procedural effects.                                        Each pixel’s position can be accessed through the variables x (column index) and y (row index).            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.                                            Expressions can use these variables and functions together with built-in math functions such as            sin(), cos(), max(), and random()            to create dynamic and complex image modifications.                                Expression Examples                                                                255                                                                            b(x, y)*1.1                                                                            b(y, min(WIDTH, HEIGHT)-1-x)                                                                            x/WIDTH*255                                                                            simplex(x, y, RANDOM) * 128 + 128                                                                Expression Syntax                                            Variables                                    x: The column index of the pixel being processed (0 to WIDTH-1).                    y: The row index of the pixel being processed (0 to HEIGHT-1).                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).                                                        Operators                                        Unary Operators                                        Predefined Functions                                    b(x, y): Returns the value of the pixel at (x, y).                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.                                                        Constants                                    WIDTH: The width of the bitmap.                    HEIGHT: The height of the bitmap.                    RANDOM: Random value between 0 and 255.                                                                    Binary Bitmap Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel                            Structuring Element Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel            MMB: Sets the origin of the structuring element            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoughTransformAnimationComponent.html":{"url":"components/HoughTransformAnimationComponent.html","title":"component - HoughTransformAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HoughTransformAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hough-transform-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                            MatTabsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hough-transform-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hough-transform-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accumulator\n                            \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Private\n                                    Optional\n                                chart\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                limit\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                tabIndex\n                            \n                            \n                                    Readonly\n                                thetaStep\n                            \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                getCanvasHeight\n                            \n                            \n                                getCanvasWidth\n                            \n                            \n                                linePoint\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                openDialog\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasHeight\n                        \n                    \n                \n            \n            \n                \ngetCanvasHeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:255\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasWidth\n                        \n                    \n                \n            \n            \n                \ngetCanvasWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:258\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linePoint\n                        \n                    \n                \n            \n            \n                \nlinePoint(x: number, rho: number, thetaRad: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rho\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                thetaRad\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:278\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Opens a dialog to edit the convolutional kernel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Line[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accumulator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hough-transform'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        thetaStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AccumulatorDialogComponent } from '../dialogs/accumulator-dialog/accumulator-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  accumulator: number[][] = [];\n  readonly thetaStep = 15;\n  transform(bitmap: Bitmap): Line[] {\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          this.accumulator[rIdx][tIdx]++;\n        });\n\n      }\n    });\n\n    const threshold = this.threshold;\n    const lines: Line[] = [];\n\n    for (let r = 0; r = threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n\n        \n        \n            table\n            Accumulator\n        \n\n        \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n\n        \n        \n        \n            Threshold\n            \n        \n        \n        \n        \n        \n            Limit\n            \n        \n        \n        \n        \n        \n        \n    \n    \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n      \n         -->\n            \n        \n                \n             \n                \n                \n                Panel 1\n                \n\n                Panel 2\n            \n         -->\n\n            \n                \n\n\n                        \n                            \n                                =40?'30px':'0'\"\n                                    [style.left]=\"showHeaders&&pixelSize>=40?'30px':'0'\"\n                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">\n                \n                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"\n                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"\n                                    (cellClicked)=\"onCellClicked($event)\">\n                \n                                \n                            \n                        \n\n\n\n\n            \n         -->\n\n    \n\n\n    \n     -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                                    table            Accumulator                                        Pixel Size                                                        Grid                            Headers                                            Threshold                                                                Limit                                                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                   -->                                                                                                 Panel 1                                Panel 2                     -->                                                                                                                =40?\\'30px\\':\\'0\\'\"                                    [style.left]=\"showHeaders&&pixelSize>=40?\\'30px\\':\\'0\\'\"                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">                                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"                                    (cellClicked)=\"onCellClicked($event)\">                                                                                                                         -->             -->'\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HoughTransformAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Kernel.html":{"url":"classes/Kernel.html","title":"class - Kernel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Kernel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/kernel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _divider\n                            \n                            \n                                    Private\n                                _kernel\n                            \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                clone\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                            \n                                toLatex\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                                \n                                    kernel\n                                \n                                \n                                    divider\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: number, kernel?: number[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/static/kernel.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kernel\n                                                  \n                                                        \n                                                                    number[][]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _divider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantization\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outOfRange\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Kernel\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLatex\n                        \n                    \n                \n            \n            \n                \ntoLatex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     number[]\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n\n                \n                    \n                        getkernel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        divider\n                    \n                \n\n                \n                    \n                        getdivider()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:13\n                                \n                            \n\n                \n                    \n                        setdivider(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Bitmap } from \"./bitmap\";\nimport { OutOfRangeHandling, Padding, QuantizationMode } from \"./enums\";\nimport { outOfRangeHandle, quantizationHandle } from \"./expression-utils\";\nimport { Point } from \"./point\";\n\nexport class Kernel {\n    private _divider: number = 1;\n    private _kernel: number[][] = [];\n    private _size: number = 3;\n    get size() {return this._size} \n    get kernel() {return this._kernel}\n    set divider(value: number) { this._divider = Math.round(value == 0 ? 1 : value); }\n    get divider() { return this._divider; }\n\n    constructor(size: number, kernel?: number[][]) {\n        this._size = size;\n        this._kernel = kernel || Array.from({ length: size }, () =>\n            Array.from({ length: size }, () => 0)\n        );\n    }\n\n    apply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding): number {\n        const r = Math.trunc((this._size - 1) / 2);\n        let sum = 0;\n        for (let oy = -r; oy  [...row]);\n        clone._divider = this._divider;\n        return clone;\n    }\n\n    toLatex(): string {\n        const transposed = this._kernel[0].map((_, colIndex) =>\n            this._kernel.map(row => row[colIndex])\n        );\n        const rows = transposed.map(row => row.join(' & '));\n        const body = rows.join(' \\\\\\\\ \\n');\n        return `\\\\begin{bmatrix}\n        ${body}\n        \\\\end{bmatrix}`;\n    }\n\n\n    save(storageKey: string=\"kernel\"): void {\n        localStorage.setItem(storageKey, JSON.stringify(this));\n    }\n\n    load(storageKey: string=\"kernel\"): void {\n        const raw = localStorage.getItem(storageKey);\n        if (!raw) return;\n        try {\n            const obj = JSON.parse(raw) as any;\n            if (!obj || typeof obj !== 'object') return;\n            const inst = Object.create(Kernel.prototype) as Kernel;\n            let kernel = Object.assign(inst, obj);\n            if (kernel) {\n                if(kernel.kernel)\n                    this._kernel = kernel.kernel;\n                if(kernel.divider)\n                    this._divider = kernel.divider;\n            }\n        } catch { }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KernelDialogComponent.html":{"url":"components/KernelDialogComponent.html","title":"component - KernelDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  KernelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-kernel-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatSliderModule\n                            MatCardModule\n                            MatButtonModule\n                            MatButtonToggleModule\n                            MatIconModule\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./kernel-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./kernel-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                kernel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: Kernel)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Kernel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:31\n                                \n                            \n\n                \n                    \n                        setsize(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { Kernel } from '../../../static/kernel';\n\n@Component({\n  selector: 'app-kernel-dialog',\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatDialogModule\n],\n  templateUrl: './kernel-dialog.component.html',\n  styleUrl: './kernel-dialog.component.css'\n})\nexport class KernelDialogComponent {\n  kernel: Kernel;\n  get size(): number {\n    return this.kernel.size;\n  }\n  set size(value: number) {\n    this.kernel = new Kernel(value);\n  }\n\n  \n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: Kernel) {\n    this.kernel = data;\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(this.kernel);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                grid_on\n            \n            Enter Kernel Values\n        \n\n         -->\n            \n                \n                    3x3 Kernel\n                    5x5 Kernel\n                    7x7 Kernel\n                \n            \n            \n           \n         -->\n\n        \n            @for (row of kernel.kernel; track $index; let i=$index) {\n            \n                @for (value of row; track $index; let j=$index) {\n                 -->\n                \n                 -->\n                }\n            \n            }\n        \n\n    \n\n\n\n    \n        Divider\n        \n    \n    \n    \n        cancel\n        Cancel\n    \n    \n        save\n        OK\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        grid_on                        Enter Kernel Values                 -->                                                3x3 Kernel                    5x5 Kernel                    7x7 Kernel                                                            -->                    @for (row of kernel.kernel; track $index; let i=$index) {                            @for (value of row; track $index; let j=$index) {                 -->                                 -->                }                        }                        Divider                            cancel        Cancel                save        OK    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'KernelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a line in polar coordinates along with its voting information and endpoints.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                rho\n                            \n                            \n                                    Public\n                                theta\n                            \n                            \n                                    Public\n                                votes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rho: number, theta: number, votes: number, min: Point, max: Point)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:297\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rho\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theta\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        votes\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rho\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        theta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        votes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AccumulatorDialogComponent } from '../dialogs/accumulator-dialog/accumulator-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  accumulator: number[][] = [];\n  readonly thetaStep = 15;\n  transform(bitmap: Bitmap): Line[] {\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          this.accumulator[rIdx][tIdx]++;\n        });\n\n      }\n    });\n\n    const threshold = this.threshold;\n    const lines: Line[] = [];\n\n    for (let r = 0; r = threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatrixDisplayComponent.html":{"url":"components/MatrixDisplayComponent.html","title":"component - MatrixDisplayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MatrixDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matrix-display/matrix-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matrix-display\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./matrix-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./matrix-display.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enumerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                kernel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/matrix-display/matrix-display.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enumerator\n                        \n                    \n                \n            \n            \n                \nenumerator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/matrix-display/matrix-display.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { Kernel } from '../../static/kernel';\n\n@Component({\n  selector: 'app-matrix-display',\n  imports: [],\n  templateUrl: './matrix-display.component.html',\n  styleUrl: './matrix-display.component.css'\n})\nexport class MatrixDisplayComponent {\n  kernel = input.required();\n\n  enumerator(){\n    return Array.from({ length: this.kernel().size }, (_, i) => i + 1);\n  }\n}\n\n    \n\n    \n        \n    @for (row of enumerator(); track $index;) {\n\n    \n        @for (col of enumerator(); track $index) {\n        \n            {{kernel().kernel[row-1][col-1]}}\n        \n        }\n    \n\n    }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (row of enumerator(); track $index;) {            @for (col of enumerator(); track $index) {                    {{kernel().kernel[row-1][col-1]}}                }        }'\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatrixDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorphologicalOperationsAnimationComponent.html":{"url":"components/MorphologicalOperationsAnimationComponent.html","title":"component - MorphologicalOperationsAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MorphologicalOperationsAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-morphological-operations-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./morphological-operations-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./morphological-operations-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                appliedBitmap\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                operation\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showBase\n                            \n                            \n                                showDifference\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                apply\n                            \n                            \n                                commit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                            \n                        \n\n                \n                    \n                            Creates an instance of the MorphologicalOperationsAnimationComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(apply: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Applies or reverts the morphological operation on the original bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apply\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    If true, applies the operation; if false, reverts to the original bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commit\n                        \n                    \n                \n            \n            \n                \ncommit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:196\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to start the animation from the clicked pixel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Updates the applied and result bitmaps based on the current operation and structuring element.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Sets pixel values in the destination bitmap based on the selected morphological operation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap where the results are stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap from which pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:71\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appliedBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:43\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the morphological operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:41\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the morphological operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'morphological-operations'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:47\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        operation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MorphologicalOperations\n\n                    \n                \n                \n                    \n                        Default value : MorphologicalOperations.Erosion\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:54\n                        \n                    \n\n            \n                \n                    The morphological operation to perform.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:58\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:45\n                        \n                    \n\n            \n                \n                    The result bitmap after the operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Color used to highlight selected pixels.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDifference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    If true, the difference is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:60\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    If true, headers are displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:52\n                        \n                    \n\n            \n                \n                    The structuring element used for the morphological operation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { StructuringElement } from '../../static/structuringElement';\nimport { ColorScale, MorphologicalOperations } from '../../static/enums';\nimport { getVar } from '../../static/style-utils';\n\n/** Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image. */\n@Component({\n  selector: 'app-morphological-operations-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n],\n  templateUrl: './morphological-operations-animation.component.html',\n  styleUrl: './morphological-operations-animation.component.css'\n})\nexport class MorphologicalOperationsAnimationComponent {\n  /** The original bitmap image to which the morphological operation is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the morphological operation. */\n  appliedBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the operation is applied. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Used to trigger bitmap component refresh. */\n  bitmapTick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = 'morphological-operations';\n\n  /** The structuring element used for the morphological operation. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The morphological operation to perform. */\n  operation: MorphologicalOperations = MorphologicalOperations.Erosion;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers are displayed. */\n  showHeaders: boolean = true;\n  /** If true, the difference is displayed. */\n  showDifference: boolean = true;\n  /** If true, the original bitmap is shown under the result. */\n  showBase: boolean = false;\n  /** Color used to highlight selected pixels. */\n  selectionColor: string = getVar(\"--selection-color\");\n  \n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n  /** Color scale used for displaying the bitmap. */\n  readonly colorscale: ColorScale = ColorScale.Binary;\n\n  /** Creates an instance of the MorphologicalOperationsAnimationComponent.\n   * @param bitmapStorage The service for loading and saving bitmaps.\n   */\n  constructor(private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.structuringElement.save();\n    this.refresh();\n  }\n\n  /** Updates the applied and result bitmaps based on the current operation and structuring element. */\n  refresh(): void {\n    this.appliedBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.structuringElement.applyComplex(this.bitmap, this.appliedBitmap, this.operation, this.showDifference);\n    this.animate();\n  }\n  /** Saves the current bitmap to storage. */\n  commit(): void {\n    this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n  }\n  /** Applies or reverts the morphological operation on the original bitmap.\n   * @param apply If true, applies the operation; if false, reverts to the original bitmap.\n  */\n  apply(apply: boolean = true): void {\n    this.bitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    if(apply)\n      this.appliedBitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell, 0));\n    else{\n      let bitmap = this.bitmapStorage.load(this.bitmapKey);\n      if (bitmap)\n        this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    }\n\n    this.refresh();\n  }\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.resultBitmap.pixels().filter(p=>p.value===0).forEach(p => this.resultBitmap.set(p.cell, 128));\n    this.setValues(this.animationIndex+1, this.resultBitmap, this.appliedBitmap);\n\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n\n    this.resultBitmap.select(cell);\n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    if(this.operation===MorphologicalOperations.Dilation){\n      this.resultBitmap.highlightedElement = cell;\n      if(!this.bitmap.getBinary(cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    if(this.operation===MorphologicalOperations.Erosion){\n      if(!this.structuringElement.getErosion(this.bitmap, cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    \n    if(this.operation===MorphologicalOperations.Dilation || this.operation===MorphologicalOperations.Erosion){\n      this.bitmap.highlightedElement = cell;\n      for(let row = 0; row pixel.value===0).forEach(pixel => {\n        if (destination.isOut(pixel.cell) || source.isOut(pixel.cell))\n          return;\n        destination.set(pixel.cell, source.get(pixel.cell) ?? 255);\n      });\n      return;\n    \n    }\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n        \n            crossword\n            Structuring Element\n        \n        \n        \n            Operation\n            \n                Erosion\n                Dilation\n                Opening\n                Closing\n            \n        \n    \n    \n        \n    \n    \n        \n            check\n            Apply\n        \n        \n            cleaning_services\n            Revert\n        \n        \n            commit\n            Save\n        \n    \n    \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Difference\n        \n        \n            Base\n        \n    \n    \n        \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\"\n                    [selectedColorScale]=\"colorscale\"\n                    [selectionColor]=\"selectionColor\"\n                    [tick]=\"bitmapTick\" [userSelect]=\"false\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n    \n\n\n    \n           \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                            crossword            Structuring Element                                    Operation                            Erosion                Dilation                Opening                Closing                                                                check            Apply                            cleaning_services            Revert                            commit            Save                                        Pixel Size                                                        Grid                            Headers                            Difference                            Base                                                                =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                                        =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\"                    [selectedColorScale]=\"colorscale\"                    [selectionColor]=\"selectionColor\"                    [tick]=\"bitmapTick\" [userSelect]=\"false\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                           '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorphologicalOperationsAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display a \"Page Not Found\" message.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                            MatDividerModule\n                            MatButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/page-not-found/page-not-found.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or to the home page if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router, RouterModule } from '@angular/router';\n\n/** Component to display a \"Page Not Found\" message. */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    MatDividerModule,\n    MatButtonModule,\n    RouterModule\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n  constructor(private router: Router) {\n\n  }\n  /** Navigates back to the previous page or to the home page if no history exists. */\n  goBack(): void {\n    if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    404\n    Page Not Found\n\n    \n        We could not find this page. It may have been moved, removed, or the address is incorrect.\n    \n\n    \n\n    \n        \n            home\n            Home\n        \n        \n            arrow_back\n            Back\n        \n\n    \n\n    \n        tips_and_updates\n        Tip: Check the URL or refresh the page if you believe this is an error.\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    404    Page Not Found            We could not find this page. It may have been moved, removed, or the address is incorrect.                                home            Home                            arrow_back            Back                        tips_and_updates        Tip: Check the URL or refresh the page if you believe this is an error.    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/point.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a point in a 2D grid with row and column coordinates.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                col\n                            \n                            \n                                    Static\n                                    Readonly\n                                one\n                            \n                            \n                                    Public\n                                row\n                            \n                            \n                                    Static\n                                    Readonly\n                                zero\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                down\n                            \n                            \n                                equals\n                            \n                            \n                                left\n                            \n                            \n                                limit\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                right\n                            \n                            \n                                subtract\n                            \n                            \n                                toString\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/point.ts:2\n                            \n                        \n\n                \n                    \n                            Creates a new Point instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The row coordinate of the point.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The column coordinate of the point.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The column coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(1, 1)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:94\n                        \n                    \n\n            \n                \n                    A Point instance representing the coordinates (1, 1).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The row coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        zero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:92\n                        \n                    \n\n            \n                \n                    A Point instance representing the origin (0, 0).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:20\n                        \n                    \n\n\n            \n                \n                        Adds the coordinates of another Point to the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the sum of the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:13\n                        \n                    \n\n\n            \n                \n                        Creates a copy of the current Point instance.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the same row and column coordinates as the current instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:67\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit down.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit down.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:82\n                        \n                    \n\n\n            \n                \n                        Checks if the current Point is equal to another Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if both Points have the same row and column coordinates, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        left\n                        \n                    \n                \n            \n            \n                \nleft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:49\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the left.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the left.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n            \n                \nlimit(max: Point, min: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:75\n                        \n                    \n\n\n            \n                \n                        Limits the point's coordinates to be within the specified bounds.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                max\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The maximum bounds as a Point instance.\n\n                                            \n                                        \n                                        \n                                                min\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Point.zero\n                                            \n\n                                            \n                                                    The minimum bounds as a Point instance. Default is (0, 0).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the limited coordinates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n            \n                \nmax(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the maximum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the maximum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        min\n                        \n                    \n                \n            \n            \n                \nmin(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:35\n                        \n                    \n\n\n            \n                \n                        Gets the minimum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the minimum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        right\n                        \n                    \n                \n            \n            \n                \nright()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:55\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the right.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the right.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtract\n                        \n                    \n                \n            \n            \n                \nsubtract(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:27\n                        \n                    \n\n\n            \n                \n                        Subtracts the coordinates of another Point from the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to subtract.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the difference between the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:88\n                        \n                    \n\n\n            \n                \n                        Converts the Point to a string representation.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string in the format \"row,col\".\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:61\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit up.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit up.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Point{\n    /** Creates a new Point instance.\n     * @param row The row coordinate of the point.\n     * @param col The column coordinate of the point.\n     */\n    constructor(public row: number, public col: number) {\n        \n    }\n    /** Creates a copy of the current Point instance.\n     * @returns A new Point instance with the same row and column coordinates as the current instance.\n     */\n    clone(): Point {\n        return new Point(this.row, this.col);\n    }\n    /** Adds the coordinates of another Point to the current Point.\n     * @param other The Point to add.\n     * @returns A new Point instance representing the sum of the two Points.\n     */\n    add(other: Point): Point {\n        return new Point(this.row + other.row, this.col + other.col);\n    }\n    /** Subtracts the coordinates of another Point from the current Point.\n     * @param other The Point to subtract.\n     * @returns A new Point instance representing the difference between the two Points.\n     */\n    subtract(other: Point): Point {\n        return new Point(this.row - other.row, this.col - other.col);\n    }\n    /** Gets the minimum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the minimum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n     */\n    min(other: Point): Point{\n        return new Point(Math.min(this.row, other.row), Math.min(this.col, other.col)); \n    }\n    /** Gets the maximum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the maximum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n     */\n    max(other: Point): Point{\n        return new Point(Math.max(this.row, other.row), Math.max(this.col, other.col)); \n    }\n    /** Moves the point one unit to the left.\n     * @returns A new Point instance representing the point moved one unit to the left.\n     */\n    left(): Point{\n        return new Point(this.row, this.col - 1);\n    }\n    /** Moves the point one unit to the right.\n     * @returns A new Point instance representing the point moved one unit to the right.\n     */\n    right(): Point{\n        return new Point(this.row, this.col + 1);\n    }\n    /** Moves the point one unit up.\n     * @returns A new Point instance representing the point moved one unit up.\n     */\n    up(): Point{\n        return new Point(this.row - 1, this.col);\n    }\n    /** Moves the point one unit down.\n     * @returns A new Point instance representing the point moved one unit down.\n     */\n    down(): Point{\n        return new Point(this.row + 1, this.col);\n    }\n    /** Limits the point's coordinates to be within the specified bounds.\n     * @param max The maximum bounds as a Point instance.\n     * @param min The minimum bounds as a Point instance. Default is (0, 0).\n     * @returns A new Point instance with the limited coordinates.\n     */\n    limit(max: Point, min: Point = Point.zero): Point {\n        return new Point(Math.max(min.row, Math.min(max.row, this.row)), Math.max(min.col, Math.min(max.col, this.col)));\n    }\n    /** Checks if the current Point is equal to another Point.\n     * @param other The Point to compare with.\n     * @returns True if both Points have the same row and column coordinates, false otherwise.\n     */\n    equals(other: Point): boolean {\n        return this.row === other.row && this.col === other.col;\n    }\n    /** Converts the Point to a string representation.\n     * @returns A string in the format \"row,col\".\n     */\n    toString(): string {\n        return `${this.row},${this.col}`;\n    }\n    /** A Point instance representing the origin (0, 0). */\n    static readonly zero: Point = new Point(0, 0);\n    /** A Point instance representing the coordinates (1, 1). */\n    static readonly one: Point = new Point(1, 1);\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShapeBitmapEditorComponent.html":{"url":"components/ShapeBitmapEditorComponent.html","title":"component - ShapeBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ShapeBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shape-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shape-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shape-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                distanceTransform\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        distanceTransform\n                        \n                    \n                \n            \n            \n                \ndistanceTransform(isInside: (x: number,y: number) => void, w: number, h: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isInside\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                w\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                h\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     [][]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { getVar } from '../../static/style-utils';\n\n@Component({\n  selector: 'app-shape-bitmap-editor',\n  imports: [\n    MatCardModule\n  ],\n  templateUrl: './shape-bitmap-editor.component.html',\n  styleUrl: './shape-bitmap-editor.component.css'\n})\nexport class ShapeBitmapEditorComponent implements AfterViewInit {\n  @ViewChild('canvas') canvasRef!: ElementRef;\n\n  ngAfterViewInit() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n\n    //draw a rectangle\n    if (!ctx) return;\n\n\n\n    canvas.width = 1000;\n    canvas.height = 500;\n\n    ctx.imageSmoothingEnabled = false;\n    ctx.fillStyle = getVar('--mat-sys-primary');\n    // ctx.beginPath();\n    // ctx.ellipse(200, 200, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n    \n    // ctx.beginPath();\n    // ctx.ellipse(280, 280, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(290, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n\n    // ctx.beginPath();\n    // ctx.ellipse(120, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    ctx.fillRect(500, 100, 400, 200);\n    ctx.fillRect(300, 150, 400, 200);\n    ctx.fillRect(350, 250, 400, 200);\n\n    // pobieramy dane obrazu\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n\n    // helper: sprawdź czy piksel jest \"wewnątrz kształtu\"\n    function isInside(x: number, y: number): boolean {\n      const idx = (y * canvas.width + x) * 4;\n      return data[idx + 3] > 0; // sprawdzamy alpha kanał\n    }\n\n    // --- 2. Liczymy distance transform ---\n    const dist = this.distanceTransform(isInside, canvas.width, canvas.height);\n    console.log(dist.length);\n\n    // --- 3. Lokalna maksymalność = medial axis ---\n  const medial: [number, number][] = [];\n  const eps = 0.99;//7512; // tolerancja na równości\n  for (let y = 1; y  2) {\n        medial.push([x, y]);\n      }\n    }\n  }\n\n  \n    // Rysujemy medial axis\n    console.log(medial);\n    ctx.fillStyle = getVar('--mat-sys-on-primary');\n\n    for (const [x, y] of medial) {\n      ctx.fillRect(x, y, 1, 1);\n    }\n\n  }\n\n  distanceTransform(isInside: (x: number, y: number) => boolean, w: number, h: number): number[][] {\n    const dist: number[][] = Array.from({ length: h }, () => Array(w).fill(Infinity));\n\n    // inicjalizacja: 0 na brzegu, inf w środku\n    for (let y = 0; y  0) d = Math.min(d, dist[y][x - 1] + 1);\n        if (y > 0) d = Math.min(d, dist[y - 1][x] + 1);\n        if (x > 0 && y > 0) d = Math.min(d, dist[y - 1][x - 1] + Math.SQRT2);\n        if (x  0) d = Math.min(d, dist[y - 1][x + 1] + Math.SQRT2);\n        dist[y][x] = d;\n      }\n    }\n\n    // 2. Pass od dołu-prawej do góry-lewej\n    for (let y = h - 1; y >= 0; y--) {\n      for (let x = w - 1; x >= 0; x--) {\n        if (!isInside(x, y)) continue;\n        let d = dist[y][x];\n        if (x  0 && y \n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShapeBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StructuringElementEditorComponent.html":{"url":"components/StructuringElementEditorComponent.html","title":"component - StructuringElementEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  StructuringElementEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-structuring-element-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./structuring-element-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./structuring-element-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bitmap\n                            \n                            \n                                height\n                            \n                            \n                                origin\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                            \n                                tick\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                refresh\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of the StructuringElementEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Checks if the structuring element can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to set the origin of the structuring element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Refreshes the bitmap display and highlights the origin.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Saves the current structuring element to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap representing the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                        \n                    \n\n            \n                \n                    Height of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    The origin point of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 75\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:49\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:47\n                        \n                    \n\n            \n                \n                    If true, headers are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:39\n                        \n                    \n\n            \n                \n                    The structuring element being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:52\n                        \n                    \n\n            \n                \n                    Width of the structuring element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { Point } from '../../static/point';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { StructuringElement } from '../../static/structuringElement';\n\n@Component({\n  selector: 'app-structuring-element-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './structuring-element-editor.component.html',\n  styleUrl: './structuring-element-editor.component.css'\n})\nexport class StructuringElementEditorComponent {\n  /** The interactive bitmap representing the structuring element. */\n  bitmap: InteractiveBitmap;\n  /** Used to trigger bitmap component refresh. */\n  tick: number = 0;\n  /** The structuring element being edited. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The origin point of the structuring element. */\n  origin: Point;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 75;\n  /** If true, headers are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n\n  /** Width of the structuring element. */\n  width: number;\n  /** Height of the structuring element. */\n  height: number;\n\n  /** Creates an instance of the StructuringElementEditorComponent.\n   * @param router The router for navigation.\n   */\n  constructor(private router: Router) {\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.width = this.structuringElement.width;\n    this.height = this.structuringElement.height;\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.structuringElement);\n    this.origin = this.structuringElement.origin;\n    \n    this.refresh();\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.refresh();\n  }\n\n  /** Handles cell click events to set the origin of the structuring element.\n   * @param $event The event containing the clicked cell and mouse event details.\n   */\n  onCellClicked($event: { cell: Point; event: MouseEvent; }): void {\n    if($event.event.buttons !== 4) return;\n    this.origin = $event.cell;\n    this.refresh();\n  }\n  \n  /** Refreshes the bitmap display and highlights the origin. */\n  refresh(): void {\n    this.bitmap.clearSelection();\n    this.bitmap.highlightedElement = this.origin.clone();\n    this.bitmap.select(this.origin);\n    // this.bitmap.dragArea.button = 2;\n    // this.bitmap.dragArea.dragStart = this.origin.clone();\n    // this.bitmap.dragArea.dragEnd = this.origin.clone();\n    // this.bitmap.dragArea.dragging = true;\n    this.tick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.refresh();\n  }\n  \n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.origin = new Point(Math.min(this.origin.row, this.height-1), Math.min(this.origin.col, this.width-1));\n    this.refresh();\n  }\n  \n  /** Checks if the structuring element can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return true;\n    // return this._id !== null; \n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current structuring element to storage and navigates back. */\n  save(): void {\n    this.structuringElement = new StructuringElement(this.bitmap.width, this.bitmap.height, this.origin, this.bitmap);\n    this.structuringElement.save();\n    this.quit();\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StructuringElementEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application themes (light/dark).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storageKey\n                            \n                            \n                                themeChanged$\n                            \n                            \n                                    Private\n                                themeChangedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTheme\n                            \n                            \n                                getThemeClass\n                            \n                            \n                                setTheme\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme/theme.service.ts:15\n                            \n                        \n\n                \n                    \n                            Initializes the theme service, setting the theme based on local storage or defaulting to light theme.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves the current application theme.\nSee Themes\n\n\n                        \n                            Returns :         Themes\n\n                        \n                            \n                                The current theme (light or dark).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getThemeClass\n                        \n                    \n                \n            \n            \n                \ngetThemeClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves the CSS class corresponding to the current theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSS class for the current theme.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: Themes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Sets the application theme and updates local storage.\nSee Themes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Themes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The theme to set (light or dark).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Toggles between light and dark themes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-theme'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:11\n                        \n                    \n\n            \n                \n                    Key for storing the theme in local storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeChanged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themeChangedSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:15\n                        \n                    \n\n            \n                \n                    Observable stream for theme changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themeChangedSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:13\n                        \n                    \n\n            \n                \n                    Observable to notify subscribers of theme changes.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Themes } from '../../static/enums';\nimport { Subject } from 'rxjs/internal/Subject';\n\n/** Service to manage application themes (light/dark). */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /** Key for storing the theme in local storage. */\n  private readonly storageKey = 'app-theme';\n  /** Observable to notify subscribers of theme changes. */\n  private themeChangedSource = new Subject();\n  /** Observable stream for theme changes. */\n  themeChanged$ = this.themeChangedSource.asObservable();\n  \n  /** Initializes the theme service, setting the theme based on local storage or defaulting to light theme. */\n  constructor() {\n    const savedTheme = localStorage.getItem(this.storageKey);\n    if (savedTheme) {\n      this.setTheme(savedTheme as Themes);\n    } else {\n      // const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      // this.setTheme(prefersDark ? Themes.Dark : Themes.Light);\n      this.setTheme(Themes.Light);\n    }\n  }\n\n  /** Sets the application theme and updates local storage.\n   * @param theme The theme to set (light or dark).\n   * @see Themes\n   */\n  setTheme(theme: Themes): void {\n    const body = document.body;\n    body.classList.remove('light', 'dark');\n    body.classList.add(`${theme}`);\n    this.themeChangedSource.next(theme);\n    localStorage.setItem(this.storageKey, theme);\n  }\n\n  /** Retrieves the current application theme.\n   * @returns The current theme (light or dark).\n   * @see Themes\n   */\n  getTheme(): Themes {\n    return localStorage.getItem(this.storageKey) as Themes;\n  }\n\n  /** Retrieves the CSS class corresponding to the current theme.\n   * @returns The CSS class for the current theme.\n   */\n  getThemeClass(): string {\n    return `${this.getTheme()}`;\n  }\n\n  /** Toggles between light and dark themes. */\n  toggleTheme(): void {\n    const current = this.getTheme();\n    this.setTheme(current === Themes.Light ? Themes.Dark : Themes.Light);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UndoRedo.html":{"url":"classes/UndoRedo.html","title":"class - UndoRedo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UndoRedo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/undoRedo.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple generic Undo/Redo stack implementation with a limit on the number of states stored.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                redoStack\n                            \n                            \n                                    Private\n                                undoStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                push\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(limit: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/undoRedo.ts:6\n                            \n                        \n\n                \n                    \n                            Creates a new UndoRedo instance with an optional limit on the number of states stored.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The maximum number of states to store in the undo stack (default is 50).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:6\n                        \n                    \n\n            \n                \n                    The stack of states for redo operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        undoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:4\n                        \n                    \n\n            \n                \n                    The stack of states for undo operations.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(state: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:18\n                        \n                    \n\n\n            \n                \n                        Pushes a new state onto the undo stack and clears the redo stack.\nIf the undo stack exceeds the limit, the oldest state is removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new state to push onto the undo stack.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:40\n                        \n                    \n\n\n            \n                \n                        Redoes the last undone state change and returns that state.\nIf there are no states to redo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The state after redoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:29\n                        \n                    \n\n\n            \n                \n                        Undoes the last state change and returns the previous state.\nIf there are no states to undo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The previous state after undoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class UndoRedo {\n  /** The stack of states for undo operations. */\n  private undoStack: T[] = [];\n  /** The stack of states for redo operations. */\n  private redoStack: T[] = [];\n  \n\n  /** Creates a new UndoRedo instance with an optional limit on the number of states stored. \n   * @param limit The maximum number of states to store in the undo stack (default is 50).\n  */\n  constructor(private limit = 50) {}\n\n  /** Pushes a new state onto the undo stack and clears the redo stack.\n   * If the undo stack exceeds the limit, the oldest state is removed.\n   * @param state The new state to push onto the undo stack.\n   */\n  push(state: T): void {\n    this.undoStack.push(state);\n    if (this.undoStack.length > this.limit)\n      this.undoStack.shift();\n    this.redoStack = [];\n  }\n\n  /** Undoes the last state change and returns the previous state.\n   * If there are no states to undo, it returns null.\n   * @returns The previous state after undoing, or null if no states are available.\n   */\n  undo(): T | null {\n    if (this.undoStack.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/animation-controller/animation-controller.component.ts\n            \n            component\n            AnimationControllerComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                        src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n            \n            component\n            BinaryBitmapEditorComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap-editor/bitmap-editor.component.ts\n            \n            component\n            BitmapEditorComponent\n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap/bitmap.component.ts\n            \n            component\n            BitmapComponent\n            \n                100 %\n                (59/59)\n            \n        \n        \n            \n                \n                        src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n            \n            component\n            ConvolutionalFilterAnimationComponent\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                        src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts\n            \n            component\n            AccumulatorDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n            \n            component\n            KernelDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/components/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/histogram/histogram.component.ts\n            \n            component\n            HistogramComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            component\n            HoughTransformAnimationComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            class\n            Line\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/components/matrix-display/matrix-display.component.ts\n            \n            component\n            MatrixDisplayComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/components/median-filter-animation/median-filter-animation.component.ts\n            \n            component\n            MedianFilterAnimationComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                        src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n            \n            component\n            MorphologicalOperationsAnimationComponent\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                        src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                        src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n            \n            component\n            ShapeBitmapEditorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n            \n            component\n            StructuringElementEditorComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                        src/app/services/bitmap-storage/bitmap-storage.service.ts\n            \n            injectable\n            BitmapStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/services/history/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            Bitmap\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            InteractiveBitmap\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            getContrastColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            isDark\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            scaleColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/drag-area.ts\n            \n            class\n            DragArea\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            declareCustomFunctions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            expressionValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            outOfRangeHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            parseAndApply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            quantizationHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            validateExpression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/kernel.ts\n            \n            class\n            Kernel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/static/point.ts\n            \n            class\n            Point\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                        src/app/static/render-utils.ts\n            \n            class\n            BitmapRenderer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/static/structuringElement.ts\n            \n            class\n            StructuringElement\n            \n                54 %\n                (13/24)\n            \n        \n        \n            \n                \n                        src/app/static/style-utils.ts\n            \n            function\n            getVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/undoRedo.ts\n            \n            class\n            UndoRedo\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.19\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.19\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            chart.js : ^4.5.0\n        \n            chroma-js : ^3.1.2\n        \n            expr-eval : ^2.0.2\n        \n            fast-simplex-noise : ^4.0.0\n        \n            mathjax-angular : ^3.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScale   (src/.../enums.ts)\n                        \n                        \n                            MorphologicalOperations   (src/.../enums.ts)\n                        \n                        \n                            OutOfRangeHandling   (src/.../enums.ts)\n                        \n                        \n                            Padding   (src/.../enums.ts)\n                        \n                        \n                            QuantizationMode   (src/.../enums.ts)\n                        \n                        \n                            Themes   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScale\n                    \n                \n                    \n                        \n                            Enumeration for different color scales used in bitmap display.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Grayscale\n                            \n                        \n                        \n                            \n                                Value : grayscale\n                            \n                        \n                        \n                            \n                                 Heatmap\n                            \n                        \n                        \n                            \n                                Value : heatmap\n                            \n                        \n                        \n                            \n                                 Spectral\n                            \n                        \n                        \n                            \n                                Value : spectral\n                            \n                        \n                        \n                            \n                                 Viridis\n                            \n                        \n                        \n                            \n                                Value : viridis\n                            \n                        \n                        \n                            \n                                 Binary\n                            \n                        \n                        \n                            \n                                Value : binary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MorphologicalOperations\n                    \n                \n                    \n                        \n                            Enumeration for different morphological operations.\n\n                        \n                    \n                        \n                            \n                                 Erosion\n                            \n                        \n                        \n                            \n                                Value : erosion\n                            \n                        \n                        \n                            \n                                 Dilation\n                            \n                        \n                        \n                            \n                                Value : dilation\n                            \n                        \n                        \n                            \n                                 Opening\n                            \n                        \n                        \n                            \n                                Value : opening\n                            \n                        \n                        \n                            \n                                 Closing\n                            \n                        \n                        \n                            \n                                Value : closing\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OutOfRangeHandling\n                    \n                \n                    \n                        \n                            Enumeration for handling out-of-range pixel values.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Clipping\n                            \n                        \n                        \n                            \n                                Value : clipping\n                            \n                        \n                        \n                            \n                                 Modulo\n                            \n                        \n                        \n                            \n                                Value : modulo\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Padding\n                    \n                \n                    \n                        \n                            Enumeration for different padding strategies when applying filters.\n\n                        \n                    \n                        \n                            \n                                 Zero\n                            \n                        \n                        \n                            \n                                Value : zero\n                            \n                        \n                        \n                            \n                                 DefaultValue\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 Edge\n                            \n                        \n                        \n                            \n                                Value : edge\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QuantizationMode\n                    \n                \n                    \n                        \n                            Enumeration for different quantization modes.\n\n                        \n                    \n                        \n                            \n                                 Round\n                            \n                        \n                        \n                            \n                                Value : round\n                            \n                        \n                        \n                            \n                                 Floor\n                            \n                        \n                        \n                            \n                                Value : floor\n                            \n                        \n                        \n                            \n                                 Ceil\n                            \n                        \n                        \n                            \n                                Value : ceil\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Themes\n                    \n                \n                    \n                        \n                            Enumeration for application themes.\n\n                        \n                    \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            declareCustomFunctions   (src/.../expression-utils.ts)\n                        \n                        \n                            expressionValidator   (src/.../expression-utils.ts)\n                        \n                        \n                            getContrastColor   (src/.../color-utils.ts)\n                        \n                        \n                            getVar   (src/.../style-utils.ts)\n                        \n                        \n                            isDark   (src/.../color-utils.ts)\n                        \n                        \n                            outOfRangeHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            parseAndApply   (src/.../expression-utils.ts)\n                        \n                        \n                            quantizationHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            scaleColor   (src/.../color-utils.ts)\n                        \n                        \n                            validateExpression   (src/.../expression-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/expression-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        declareCustomFunctions\n                        \n                    \n                \n            \n            \n                \ndeclareCustomFunctions(parser: Parser, bitmap: InteractiveBitmap, padding: Padding, defaultValue: number)\n                \n            \n\n\n\n\n            \n                \n                        Declares custom functions and constants in the expression parser for bitmap manipulation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                parser\n                                            \n                                                        Parser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression parser to which functions and constants will be added.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap used for pixel value retrieval.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to apply when retrieving pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressionValidator\n                        \n                    \n                \n            \n            \n                \nexpressionValidator()\n                \n            \n\n\n\n\n            \n                \n                        Validator function to check the validity of a mathematical expression.\n\n\n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                A validation function that can be used in Angular forms.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outOfRangeHandle\n                        \n                    \n                \n            \n            \n                \noutOfRangeHandle(value: number, mode: OutOfRangeHandling)\n                \n            \n\n\n\n\n            \n                \n                        Handles out-of-range pixel values based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to be handled.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The out-of-range handling mode (None, Clipping, Modulo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The handled pixel value as a number, or NaN if the mode is None and the value is out of range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseAndApply\n                        \n                    \n                \n            \n            \n                \nparseAndApply(expression: string, bitmap: InteractiveBitmap, padding: Padding, outOfRangeHandling: OutOfRangeHandling, quantizationMode: QuantizationMode, defaultValue: number, selectedOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n                        Parses and applies a mathematical expression to a bitmap, producing a new bitmap with the results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mathematical expression to apply.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the expression will be applied.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to use when accessing pixel values.\n\n                                            \n                                        \n                                        \n                                                outOfRangeHandling\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for handling out-of-range pixel values.\n\n                                            \n                                        \n                                        \n                                                quantizationMode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for quantizing pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default pixel value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                        \n                                                selectedOnly\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    If true, the expression is applied only to selected pixels in the bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap\n\n                        \n                            \n                                A new Bitmap instance containing the results of applying the expression.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantizationHandle\n                        \n                    \n                \n            \n            \n                \nquantizationHandle(value: number, mode: QuantizationMode)\n                \n            \n\n\n\n\n            \n                \n                        Handles quantization of a value based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to be quantized.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The quantization mode to apply (Round, Floor, Ceil).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The quantized value as a number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateExpression\n                        \n                    \n                \n            \n            \n                \nvalidateExpression(expression: string)\n                \n            \n\n\n\n\n            \n                \n                        Validates a mathematical expression to ensure it only contains allowed variables and functions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression string to validate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/static/color-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getContrastColor\n                        \n                    \n                \n            \n            \n                \ngetContrastColor(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines a contrasting color (either dark or light) based on the luminance of the input color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The base color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A dark color ('rgb(26, 27, 31)') if the input color is light, or a light color ('rgb(249, 248, 244)') if the input color is dark.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDark\n                        \n                    \n                \n            \n            \n                \nisDark(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines if a given color is considered \"dark\" based on its luminance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the color is dark, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scaleColor\n                        \n                    \n                \n            \n            \n                \nscaleColor(value: number, colorScale: ColorScale)\n                \n            \n\n\n\n\n            \n                \n                        Scales a given  value to a color based on the specified color scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to scale, typically in the range of 0 to 255.\n\n                                            \n                                        \n                                        \n                                                colorScale\n                                            \n                                                            ColorScale\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color scale to use for scaling (e.g., Grayscale, Heatmap, Spectral, Viridis, Binary).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the scaled color in CSS format.\n\n                            \n                \n            \n        \n    \n    src/app/static/style-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getVar\n                        \n                    \n                \n            \n            \n                \ngetVar(variable: string)\n                \n            \n\n\n\n\n            \n                \n                        Utility function to retrieve the value of a CSS variable from the document's body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                variable\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"--mat-sys-primary\"\n                                            \n\n                                            \n                                                    The name of the CSS variable (default is \"--mat-sys-primary\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The value of the specified CSS variable as a string.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nImageProcessingLectureSupportSystem\nThis project is an educational web application designed to support the teaching and learning of image processing concepts. Built with Angular and Angular Material, it provides interactive visualizations and tools for exploring various image processing algorithms and techniques. Key features include bitmap editing, step-by-step animation of convolutional and median filters, morphological operations, histogram analysis, and Hough transform visualization. The application allows users to experiment with different parameters, observe algorithm behavior in real time, and gain a deeper understanding of fundamental image processing operations. Its modular structure and user-friendly interface make it suitable for both classroom demonstrations and individual study.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testDocumentation\nTo generate documentation, use the following command:\nExample :npm run compodocAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    18 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { hideRequiredMarker: true } },\n\n    provideServiceWorker('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    provideAnimationsAsync(),\n    {\n      provide: MAT_ICON_DEFAULT_OPTIONS,\n      useValue: {\n        fontSet: 'material-symbols-rounded'\n      }\n    },\n    \n    importProvidersFrom(MathjaxModule.forRoot(\n      {\n        src: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js\"\n      },\n    ))\n\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: 'editor', component: BitmapEditorComponent },\n    { path: 'edit/:id', component: BitmapEditorComponent },\n    \n    { path: 'binary-editor', component: BinaryBitmapEditorComponent },\n    { path: 'binary-edit/:id', component: BinaryBitmapEditorComponent },\n    \n    { path: 'shape-editor', component: ShapeBitmapEditorComponent },\n\n    { path: 'structuring-element', component: StructuringElementEditorComponent },\n    \n\n    { path: 'help', component: HelpComponent },\n    { path: 'home', component: HomeComponent },\n    \n    { path: 'histogram', component: HistogramComponent },\n    { path: 'convolutional-filters', component: ConvolutionalFilterAnimationComponent },\n    { path: 'median-filters', component: MedianFilterAnimationComponent },\n    { path: 'morphological-operations', component: MorphologicalOperationsAnimationComponent },\n    { path: 'hough-transform', component: HoughTransformAnimationComponent },\n\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: '**', component: PageNotFoundComponent }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
