var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccumulatorDialogComponent.html",[0,0.014,1,0.685]],["body/components/AccumulatorDialogComponent.html",[0,0.023,1,1.228,2,1.139,3,0.4,4,0.313,5,1.031,6,1.031,7,1.031,8,0.356,9,5.179,10,4.06,11,2.637,12,1.031,13,1.529,14,1.418,15,1.602,16,3.059,17,1.139,18,4.751,19,1.139,20,4.307,21,1.139,22,4.307,23,0.513,24,0.695,25,2.615,26,2.699,27,1.941,28,4.164,29,0.89,30,3.363,31,5.01,32,1.127,33,0.808,34,5.116,35,0.493,36,0.029,37,0.502,38,0.595,39,0.542,40,3.775,41,3.995,42,2.637,43,4.307,44,3.995,45,0.542,46,0.542,47,3.775,48,0.631,49,3.363,50,0.648,51,3.363,52,2.389,53,0.4,54,0.05,55,1.279,56,3.995,57,2.948,58,2.948,59,4.307,60,5.116,61,4.643,62,3.995,63,2.368,64,5.116,65,5.116,66,2.047,67,5.116,68,0.958,69,1.32,70,0.994,71,1.031,72,1.536,73,1.031,74,3.995,75,1.32,76,0.763,77,0.763,78,1.031,79,0.89,80,1.031,81,0.825,82,0.763,83,0.565,84,1.457,85,0.89,86,1.031,87,0.89,88,0.825,89,0.89,90,1.227,91,1.588,92,0.825,93,1.031,94,0.825,95,0.958,96,0.825,97,1.031,98,0.89,99,1.031,100,0.825,101,1.031,102,0.763,103,0.825,104,0.763,105,0.89,106,0.825,107,0.89,108,0.958,109,1.031,110,0.89,111,0.89,112,0.825,113,0.763,114,0.648,115,0.825,116,0.958,117,1.031,118,0.763,119,0.958,120,0.825,121,0.958,122,0.89,123,0.958,124,1.031,125,0.021,126,0.021]],["title/components/AnimationControllerComponent.html",[0,0.014,76,0.634]],["body/components/AnimationControllerComponent.html",[0,0.023,1,0.444,2,0.735,3,0.215,4,0.168,5,0.555,6,0.555,7,0.555,8,0.191,12,0.555,13,1.433,14,1.328,15,0.516,17,0.735,19,0.735,21,0.735,23,0.315,24,0.448,25,0.996,27,1.767,32,1.111,33,0.894,35,0.265,36,0.029,37,0.358,38,0.622,39,0.292,45,0.829,46,0.929,48,0.699,50,0.349,53,0.215,54,0.027,68,0.516,69,0.852,70,0.708,71,0.555,72,1.164,73,0.555,75,0.852,76,0.861,77,1.307,78,0.555,79,0.479,80,0.555,81,0.444,82,0.411,83,0.402,84,1.037,85,0.479,86,0.555,87,0.479,88,0.444,89,0.479,90,0.792,91,1.256,92,0.444,93,0.555,94,0.444,95,0.516,96,0.444,97,0.555,98,0.479,99,0.555,100,0.444,101,0.555,102,0.411,103,0.444,104,0.411,105,0.479,106,0.444,107,0.479,108,0.516,109,0.555,110,0.479,111,0.479,112,0.444,113,0.411,114,0.349,115,0.444,116,0.516,117,0.555,118,0.411,119,0.516,120,0.444,121,0.516,122,0.479,123,0.516,124,0.555,125,0.014,126,0.014,127,5.559,128,2.832,129,1.81,130,0.852,131,2.436,132,2.436,133,5.136,134,2.78,135,4.51,136,3.946,137,3.302,138,5.652,139,3.302,140,2.179,141,2.436,142,5.136,143,6.551,144,5.136,145,2.436,146,5.136,147,3.327,148,1.974,149,2.653,150,4.019,151,3.302,152,1.115,153,1.724,154,1.6,155,1.198,156,2.196,157,2.653,158,1.862,159,2.966,160,3.302,161,3.302,162,1.675,163,4.019,164,4.019,165,4.019,166,4.019,167,5.348,168,5.66,169,0.63,170,2.264,171,5.136,172,4.51,173,2.977,174,4.51,175,3.302,176,4.51,177,4.51,178,4.51,179,4.51,180,4.51,181,4.51,182,4.51,183,4.51,184,2.78,185,2.404,186,2.653,187,4.019,188,4.019,189,3.302,190,4.866,191,0.856,192,2.15,193,3.643,194,3.327,195,1.517,196,2.15,197,4.324,198,3.797,199,1.256,200,1.283,201,2.15,202,2.685,203,1.804,204,2.15,205,4.51,206,2.966,207,3.302,208,2.15,209,1.221,210,3.302,211,0.411,212,3.302,213,2.15,214,2.464,215,3.302,216,3.302,217,4.019,218,3.797,219,2.15,220,3.643,221,2.264,222,3.302,223,2.697,224,3.302,225,3.302,226,3.302,227,2.977,228,2.78,229,1.658,230,3.302,231,4.51,232,3.302,233,3.302,234,2.436,235,1.022,236,1.239,237,2.15,238,5.021,239,5.519,240,2.15,241,2.15,242,3.302,243,2.179,244,2.78,245,3.302,246,2.15,247,2.436,248,3.302,249,3.302,250,2.15,251,1.804,252,0.931,253,2.436,254,3.302,255,1.221,256,2.15,257,3.302,258,3.327,259,3.302,260,4.51,261,2.15,262,3.302,263,4.51,264,2.15,265,5.519,266,3.302,267,2.15,268,2.15,269,3.302,270,2.15,271,2.15,272,3.797,273,3.302,274,3.302,275,3.302,276,2.78,277,2.15,278,1.658,279,2.15,280,2.179,281,2.15,282,3.302,283,3.302,284,3.302,285,3.302,286,2.179,287,3.302,288,0.984,289,1.974,290,2.436,291,2.15,292,2.15,293,2.179,294,2.78,295,1.531,296,2.15,297,2.15,298,2.179,299,3.302,300,2.15,301,1.136,302,2.179,303,3.302,304,2.15,305,3.302,306,0.922,307,0.856,308,0.597,309,0.641,310,1.419,311,1.586,312,1.175,313,0.922,314,2.15,315,4.019,316,2.15,317,2.15,318,2.404,319,0.688,320,4.019,321,2.15,322,2.15,323,2.15,324,2.15,325,3.302,326,3.302,327,2.15,328,2.15,329,3.302,330,2.15,331,4.51,332,2.15,333,4.019,334,3.302,335,2.15,336,0.682,337,2.15,338,2.15,339,2.15,340,2.15,341,2.15,342,2.15,343,2.15,344,3.302,345,3.302,346,3.302,347,3.302,348,3.302,349,3.302,350,3.302,351,3.302,352,3.302,353,3.302,354,3.302,355,3.302]],["title/components/AppComponent.html",[0,0.014,79,0.739]],["body/components/AppComponent.html",[0,0.023,1,0.806,2,1.123,3,0.391,4,0.306,5,1.008,6,1.008,7,1.008,8,0.347,12,1.008,13,1.527,14,1.415,15,0.937,17,1.123,19,1.123,21,1.123,23,0.306,24,0.684,25,2.335,29,0.869,33,0.758,35,0.482,36,0.029,37,0.497,38,0.559,39,0.53,45,0.53,46,0.53,48,0.811,50,0.633,53,0.391,54,0.049,68,0.937,69,1.301,70,0.984,71,1.008,72,1.523,73,1.008,75,1.301,76,0.745,77,0.745,78,1.008,79,1.314,80,1.008,81,0.806,82,1.066,83,0.637,84,1.441,85,0.869,86,1.008,87,0.869,88,0.806,89,1.243,90,1.209,91,1.576,92,0.806,93,1.008,94,0.806,95,1.339,96,0.806,97,1.008,98,0.869,99,1.008,100,0.806,101,1.008,102,0.745,103,1.152,104,1.166,105,0.869,106,0.806,107,0.869,108,0.937,109,1.008,110,0.869,111,1.243,112,0.806,113,1.066,114,0.905,115,0.806,116,0.937,117,1.008,118,0.745,119,0.937,120,0.806,121,0.937,122,1.36,123,0.937,124,1.008,125,0.021,126,0.021,152,1.549,153,2.394,154,2.221,155,1.664,307,1.554,308,1.083,309,1.164,313,1.674,356,3.287,357,3.327,358,2.803,359,5.582,360,5.582,361,4.7,362,5.041,363,5.041,364,4.301,365,4.506,366,3.904,367,5.041,368,3.904,369,1.083,370,3.014,371,3.327,372,5.041,373,3.719,374,1.554,375,3.904,376,3.904,377,3.287,378,3.904,379,2.577,380,5.041,381,4.353,382,3.904,383,5.041,384,2.754,385,5.041,386,3.327,387,3.894,388,5.041,389,5.041,390,4.244,391,5.899,392,4.353,393,3.904]],["title/components/BinaryBitmapEditorComponent.html",[0,0.014,81,0.685]],["body/components/BinaryBitmapEditorComponent.html",[0,0.023,1,0.525,2,0.835,3,0.255,4,0.199,5,0.657,6,0.657,7,0.657,8,0.227,12,0.657,13,1.464,14,1.357,15,0.611,17,0.835,19,0.835,21,0.835,23,0.199,24,0.667,29,0.567,32,1.024,33,0.862,35,0.606,36,0.029,37,0.437,38,0.619,39,0.509,45,0.789,46,0.789,48,0.778,50,0.413,53,0.255,54,0.032,55,0.815,66,1.8,68,0.611,69,0.968,70,0.784,71,0.657,72,1.267,73,0.657,75,0.968,76,0.486,77,0.486,78,0.657,79,0.567,80,0.657,81,1.13,82,1.132,83,0.694,84,1.149,85,1.093,86,0.657,87,0.567,88,0.525,89,0.567,90,0.899,91,1.351,92,0.525,93,0.657,94,0.525,95,0.611,96,0.525,97,0.657,98,0.567,99,0.657,100,0.525,101,0.657,102,0.486,103,0.525,104,0.486,105,0.567,106,0.525,107,0.567,108,0.611,109,0.657,110,0.567,111,0.567,112,0.525,113,0.486,114,0.413,115,0.525,116,1.068,117,0.657,118,0.486,119,0.611,120,0.525,121,0.611,122,0.991,123,0.611,124,0.657,125,0.015,126,0.015,130,1.149,152,1.235,153,1.909,154,1.771,155,1.327,158,2.062,162,1.452,169,0.716,191,2.179,195,0.968,199,1.413,200,1.393,202,2.106,203,2.682,209,2.024,211,0.85,214,3.093,220,2.475,221,1.882,223,2.242,235,0.888,236,1.151,252,1.168,255,1.386,288,0.759,293,3.241,301,1.689,306,1.092,307,1.013,308,0.706,309,0.759,313,1.092,319,1.572,336,0.774,369,1.04,374,1.013,384,2.048,394,5.383,395,5.383,396,1.522,397,3.157,398,2.936,399,3.157,400,3.157,401,3.749,402,2.234,403,2.938,404,2.431,405,2.475,406,2.475,407,4.45,408,4.45,409,2.487,410,2.234,411,2.431,412,2.431,413,2.261,414,4.609,415,4.609,416,3.157,417,4.134,418,4.134,419,2.916,420,2.546,421,4.134,422,4.91,423,2.106,424,4.449,425,3.749,426,1.882,427,1.737,428,5.661,429,3.749,430,3.157,431,2.048,432,3.157,433,3.157,434,3.157,435,2.546,436,1.882,437,3.157,438,3.157,439,3.157,440,2.546,441,2.242,442,3.157,443,3.157,444,1.882,445,2.546,446,2.242,447,2.766,448,2.242,449,2.23,450,2.936,451,3.157,452,1.882,453,3.157,454,2.475,455,2.546,456,3.623,457,3.623,458,2.475,459,2.475,460,2.475,461,2.546,462,3.157,463,3.157,464,2.546,465,2.475,466,2.465,467,2.348,468,2.916,469,4.891,470,3.157,471,1.646,472,2.242,473,2.682,474,2.062,475,2.143,476,2.475,477,2.143,478,2.766,479,3.749,480,2.475,481,2.546,482,2.048,483,2.143,484,1.882,485,1.608,486,1.882,487,2.143,488,1.954,489,2.242,490,2.546,491,3.157,492,2.546,493,1.391,494,1.278,495,1.2,496,1.391,497,1.278,498,1.278,499,1.68,500,1.391,501,1.391,502,1.179,503,1.391,504,2.938,505,3.747,506,2.546,507,2.546,508,2.546,509,2.859,510,1.522,511,1.522,512,1.391,513,1.878,514,2.431,515,1.391,516,2.143,517,2.143,518,3.157,519,3.157,520,4.45,521,3.157,522,1.878,523,1.878,524,1.878,525,2.546,526,2.143,527,3.623,528,2.048,529,2.475,530,2.242,531,2.242,532,3.157,533,3.157,534,3.157,535,2.766,536,1.882,537,2.766,538,2.766,539,2.766,540,3.157,541,3.623,542,3.157,543,3.157,544,3.157]],["title/classes/Bitmap.html",[54,0.041,83,0.332]],["body/classes/Bitmap.html",[3,0.183,4,0.144,8,0.163,23,0.49,24,0.818,29,0.408,32,1.192,33,0.818,35,0.645,36,0.029,37,0.465,38,0.574,39,0.801,45,0.826,46,0.917,48,0.448,53,0.292,54,0.06,63,2.44,66,2.369,70,0.795,82,0.79,83,0.674,108,1.153,113,0.35,114,0.67,125,0.012,126,0.012,130,1.391,131,3.33,162,0.809,169,0.962,191,1.645,195,1.24,199,1.3,200,1.292,202,0.786,209,1.078,211,1.207,221,1.463,223,2.17,234,2.151,235,1.042,236,0.918,243,2.395,247,1.353,251,2.259,252,1.231,255,2.121,290,3.545,294,3.481,295,1.606,298,2.729,301,2.052,319,2.042,336,1.316,386,3.326,399,2.454,400,3.055,409,2.502,413,2.249,426,1.822,427,2.226,436,1.822,441,1.096,444,0.92,449,2.453,452,1.463,467,1.556,468,1.463,471,1.078,474,2.091,476,1.21,484,2.412,486,2.961,495,2.177,512,2.625,514,1.982,545,0.786,546,1.543,547,3.799,548,3.172,549,2.151,550,2.915,551,1.924,552,4.295,553,2.151,554,2.915,555,2.915,556,4.773,557,4.773,558,2.454,559,3.799,560,5.387,561,3.629,562,3.629,563,3.629,564,4.295,565,2.915,566,2.915,567,2.915,568,2.915,569,2.915,570,2.266,571,2.151,572,3.629,573,5.039,574,4.231,575,2.915,576,3.92,577,5.387,578,3.055,579,3.055,580,3.055,581,4.513,582,3.799,583,1.543,584,2.677,585,2.395,586,3.629,587,1.833,588,2.857,589,1.833,590,1.833,591,4.076,592,5.229,593,2.915,594,1.833,595,5.966,596,3.978,597,3.893,598,2.915,599,1.833,600,3.481,601,2.465,602,2.915,603,1.833,604,4.074,605,4.046,606,4.135,607,2.915,608,1.833,609,3.33,610,2.915,611,2.44,612,1.833,613,1.743,614,5.039,615,1.924,616,4.046,617,1.743,618,3.629,619,2.915,620,1.833,621,1.833,622,1.822,623,1.833,624,4.135,625,1.833,626,2.915,627,2.915,628,1.833,629,4.513,630,1.833,631,1.833,632,1.833,633,1.833,634,3.172,635,3.799,636,3.33,637,1.353,638,2.915,639,2.915,640,1.833,641,1.096,642,1.833,643,1.833,644,1.463,645,2.915,646,3.055,647,2.677,648,1.833,649,1.833,650,4.805,651,2.915,652,1.833,653,1.543,654,2.151,655,3.172,656,1.833,657,2.915,658,1.833,659,1.833,660,0.92,661,1.833,662,1.833,663,1.833,664,1.833,665,1.162,666,0.849,667,1.833,668,1.351,669,1.833,670,3.629,671,1.833,672,1.543,673,2.412,674,3.799,675,1.21,676,1.833,677,1.833,678,3.051,679,1.543,680,1.543,681,1.353,682,1.833,683,1.833,684,3.645,685,1.833,686,1.21,687,1.543,688,1.833,689,1.833,690,2.915,691,0.849,692,1.833,693,3.629,694,1.833,695,1.833,696,1.833,697,1.833,698,1.833,699,1.833,700,2.454,701,1.543,702,1.833,703,1.833,704,1.833,705,1.543,706,2.915,707,1.833,708,1.833,709,1.833,710,2.915,711,1.833,712,1.833,713,1.833,714,1.833,715,1.833,716,1.833,717,1.833,718,1.833,719,1.833,720,1.833,721,2.915,722,1.543,723,1.543,724,2.915,725,1.543,726,3.481,727,1.833,728,1.833,729,1.833,730,1.833,731,1.833,732,1.833,733,1.833,734,1.833]],["title/classes/BitmapRenderer.html",[54,0.041,735,2.448]],["body/classes/BitmapRenderer.html",[3,0.234,4,0.183,8,0.208,23,0.183,24,0.477,32,1.186,33,0.867,35,0.699,36,0.029,37,0.504,38,0.635,39,0.769,45,0.904,46,0.814,48,0.581,53,0.234,54,0.053,63,2.306,66,2.031,70,0.411,83,0.676,125,0.014,126,0.014,130,1.495,162,1.471,169,0.671,199,1.568,200,1.54,203,2.57,209,1.866,211,1.051,235,0.972,236,0.807,286,3.738,288,1.26,295,1.76,301,1.209,319,1.354,336,0.482,369,1.749,398,2.102,409,1.399,410,3.362,413,1.563,426,1.172,436,2.362,444,1.172,449,1.3,452,1.765,471,1.866,482,2.57,484,2.362,486,1.765,488,2.349,489,3.386,495,1.354,535,1.723,536,2.763,545,1.001,548,2.791,553,3.723,576,2.102,578,1.966,591,2.791,596,1.541,597,3.632,601,2.57,622,2.362,636,3.471,637,1.723,647,1.723,654,2.594,655,1.541,665,1.616,666,2.941,668,3.025,673,2.123,680,3.56,681,2.594,691,2.624,701,1.966,735,2.594,736,5.405,737,1.723,738,2.96,739,5.048,740,3.56,741,3.319,742,2.763,743,4.228,744,4.228,745,3.105,746,3.515,747,3.515,748,3.515,749,3.515,750,4.228,751,4.228,752,3.515,753,3.515,754,3.515,755,3.515,756,2.96,757,2.335,758,2.753,759,4.363,760,2.594,761,2.335,762,4.178,763,5.046,764,4.705,765,2.335,766,3.515,767,4.705,768,2.335,769,4.465,770,3.515,771,2.335,772,2.335,773,3.515,774,2.335,775,4.228,776,4.705,777,2.335,778,2.335,779,3.515,780,2.335,781,4.705,782,2.102,783,4.705,784,2.96,785,3.515,786,1.723,787,2.335,788,5.303,789,2.335,790,3.515,791,2.31,792,4.705,793,4.228,794,2.335,795,2.335,796,4.178,797,3.515,798,2.335,799,1.966,800,1.396,801,5.115,802,2.335,803,2.335,804,2.335,805,2.335,806,1.541,807,2.594,808,6.479,809,1.966,810,2.335,811,4.705,812,2.335,813,3.515,814,2.335,815,4.705,816,2.335,817,2.335,818,2.335,819,2.335,820,2.335,821,2.335,822,2.335,823,1.723,824,1.723,825,1.082,826,2.335,827,2.335,828,2.335,829,6.075,830,6.075,831,3.515,832,2.335,833,2.335,834,2.335,835,1.723,836,2.32,837,2.594,838,2.335,839,2.335,840,1.966,841,2.335,842,2.335,843,2.335,844,2.335,845,2.335,846,2.335,847,2.335,848,2.335,849,5.903,850,2.335,851,2.335,852,2.335,853,2.335,854,6.075,855,2.335,856,4.705,857,3.105,858,2.335,859,5.663,860,2.335,861,3.471,862,2.335,863,2.335,864,2.335,865,2.335,866,4.228,867,4.228,868,1.541,869,2.335,870,2.335,871,2.335,872,1.541,873,2.335,874,2.335,875,2.335,876,2.335,877,2.335,878,2.335,879,1.966,880,2.335,881,1.723]],["title/injectables/BitmapStorageService.html",[423,1.423,882,1.666]],["body/injectables/BitmapStorageService.html",[3,0.392,4,0.307,8,0.349,23,0.307,24,0.686,32,0.891,33,0.802,35,0.69,36,0.029,37,0.498,38,0.591,39,0.76,45,0.532,46,0.532,48,0.624,50,0.636,53,0.392,54,0.049,83,0.694,125,0.021,126,0.021,130,1.525,162,1.552,169,0.965,199,1.304,200,1.212,235,0.992,236,0.748,293,4.396,295,1.506,319,1.892,336,1.315,357,2.588,369,1.837,398,3.533,419,2.966,423,2.168,431,2.761,436,2.537,460,3.9,465,3.336,466,3.374,467,2.882,470,4.255,471,1.45,474,1.816,494,1.968,502,2.833,596,2.588,601,2.761,622,2.537,665,1.791,800,3.022,882,2.537,883,2.588,884,5.149,885,3.3,886,5.054,887,4.255,888,3.729,889,4.26,890,5.593,891,3.9,892,5.054,893,3.92,894,5.272,895,5.054,896,3.92,897,5.054,898,4.359,899,4.255,900,5.054,901,5.054,902,3.92,903,3.92,904,2.537,905,5.054,906,3.729,907,2.892,908,3.92,909,3.92,910,3.92,911,4.255,912,3.92,913,3.3,914,4.975,915,3.3,916,4.709,917,3.92,918,3.92,919,5.054,920,3.3,921,3.92,922,3.3,923,3.3]],["title/components/ConvolutionalFilterAnimationComponent.html",[0,0.014,88,0.685]],["body/components/ConvolutionalFilterAnimationComponent.html",[0,0.023,1,0.414,2,0.697,3,0.201,4,0.444,5,0.518,6,0.518,7,0.518,8,0.179,12,0.518,13,1.419,14,1.316,15,0.481,16,3.119,17,0.697,19,0.697,21,0.697,23,0.391,24,0.425,26,1.65,27,1.324,29,0.857,32,1.034,33,0.88,35,0.536,36,0.029,37,0.444,38,0.638,39,0.59,40,1.481,45,0.84,46,0.857,48,0.787,50,0.325,52,1.2,53,0.201,54,0.025,55,0.643,66,1.324,68,0.481,69,0.808,70,0.678,71,0.518,72,1.122,73,0.518,75,0.808,76,0.83,77,1.149,78,0.518,79,0.447,80,0.518,81,0.414,82,0.383,83,0.673,84,0.993,85,0.968,86,0.518,87,0.447,88,0.897,89,1.442,90,1.651,91,1.216,92,0.414,93,0.518,94,0.414,95,0.481,96,0.414,97,0.518,98,0.447,99,0.518,100,0.414,101,0.518,102,0.383,103,0.414,104,0.383,105,0.697,106,1.349,107,0.697,108,0.751,109,0.518,110,0.447,111,0.447,112,0.414,113,0.383,114,0.325,115,0.414,116,0.481,117,0.518,118,0.383,119,0.481,120,0.414,121,0.481,122,0.447,123,0.481,124,0.518,125,0.013,126,0.013,128,0.861,130,1.216,132,1.481,136,3.207,140,2.066,141,2.309,147,2.309,152,1.068,153,1.65,154,1.531,155,1.147,156,2.102,158,1.783,159,2.839,162,1.538,169,0.598,170,2.507,191,2.256,195,0.518,199,1.463,200,1.472,202,2.021,203,2.728,209,1.743,211,0.83,214,2.102,228,2.635,235,0.899,236,1.059,243,1.325,251,1.096,252,1.286,255,1.157,258,2.309,288,0.598,295,1.147,301,1.95,302,3.812,306,0.861,307,0.799,308,0.557,309,0.598,311,1.481,312,1.096,313,0.861,318,1.2,319,1.002,358,1.932,369,1.068,370,3.226,371,2.066,374,0.799,398,2.599,402,1.932,404,2.102,410,1.932,411,2.102,412,2.102,413,0.742,419,2.182,423,1.864,427,1.45,431,2.375,444,1.571,446,1.2,448,1.2,449,2.345,450,1.2,452,1.932,454,1.325,466,2.182,468,2.182,471,2.248,472,2.986,473,2.728,474,2.416,478,2.839,480,2.066,484,2.182,485,1.65,486,2.709,488,1.73,489,1.872,493,1.096,494,1.007,495,0.643,496,1.096,497,1.007,498,1.007,500,1.096,501,1.096,502,0.93,503,1.096,504,1.325,509,2.375,510,1.2,511,1.2,515,2.102,528,2.728,530,2.599,531,2.599,536,2.182,549,2.309,551,1.325,553,2.309,570,1.932,576,1.2,588,2.375,611,2.256,613,1.872,615,1.325,644,1.007,653,2.635,665,1.509,673,1.571,681,1.481,691,2.755,739,2.635,742,1.932,756,2.635,758,1.343,759,2.066,807,2.309,809,2.635,891,3.296,898,2.309,904,1.571,924,5.471,925,5.471,926,1.096,927,2.635,928,2.066,929,3.13,930,3.848,931,1.872,932,1.872,933,1.932,934,2.54,935,3.848,936,2.54,937,3.848,938,3.848,939,3.24,940,3.848,941,3.848,942,3.13,943,3.848,944,3.848,945,3.848,946,2.066,947,3.66,948,2.375,949,2.309,950,1.69,951,3.207,952,2.869,953,3.13,954,3.13,955,3.13,956,3.13,957,3.13,958,2.309,959,3.13,960,2.007,961,2.635,962,2.635,963,2.007,964,3.561,965,2.007,966,2.007,967,1.69,968,4.994,969,2.54,970,2.007,971,2.007,972,2.007,973,1.69,974,2.007,975,1.481,976,2.007,977,2.007,978,2.007,979,3.848,980,3.848,981,2.007,982,1.481,983,2.007,984,3.848,985,3.848,986,1.325,987,2.301,988,2.007,989,2.007,990,1.325,991,1.69,992,2.007,993,2.635,994,3.296,995,2.007,996,2.635,997,3.13,998,1.325,999,2.007,1000,1.69,1001,3.207,1002,1.481,1003,3.66,1004,2.007,1005,2.007,1006,4.204,1007,1.481,1008,3.13,1009,1.69,1010,3.13,1011,3.13,1012,3.13,1013,1.69,1014,1.69,1015,1.69,1016,2.007,1017,2.635,1018,2.007,1019,2.635,1020,3.13,1021,2.007,1022,2.007,1023,3.13,1024,2.007,1025,1.69,1026,1.69,1027,3.13,1028,1.007,1029,2.007,1030,1.325,1031,1.481,1032,1.481,1033,1.325,1034,1.325,1035,1.2,1036,1.481,1037,2.007,1038,1.69,1039,1.325,1040,1.325,1041,1.69,1042,2.007,1043,1.872,1044,2.007,1045,2.007,1046,2.007,1047,2.007,1048,2.007,1049,2.007,1050,1.69,1051,3.13,1052,3.13,1053,3.13,1054,2.007,1055,2.54,1056,2.54,1057,3.848,1058,2.007,1059,2.007,1060,1.2,1061,1.69,1062,2.007,1063,2.007,1064,2.007,1065,1.69,1066,2.007,1067,2.007,1068,2.635,1069,2.309,1070,2.309,1071,2.309,1072,4.347,1073,4.347,1074,4.347,1075,2.309,1076,2.309,1077,3.207,1078,3.13,1079,2.635]],["title/components/DocsComponent.html",[0,0.014,92,0.685]],["body/components/DocsComponent.html",[0,0.025,1,0.947,2,1.242,3,0.459,4,0.359,5,1.184,6,1.184,7,1.184,8,0.408,12,1.184,13,1.545,14,1.432,15,1.101,17,1.022,19,1.242,21,1.242,36,0.028,37,0.496,48,0.566,50,0.744,53,0.459,54,0.057,68,1.101,69,1.44,70,1.059,71,1.184,72,1.614,73,1.184,75,1.44,76,0.876,77,0.876,78,1.184,79,1.022,80,1.184,81,0.947,82,0.876,83,0.601,84,1.551,85,1.022,86,1.184,87,1.022,88,0.947,89,1.022,90,1.338,91,1.654,92,1.29,93,1.184,94,0.947,95,1.101,96,0.947,97,1.184,98,1.022,99,1.184,100,0.947,101,1.184,102,0.876,103,0.947,104,0.876,105,1.022,106,0.947,107,1.022,108,1.101,109,1.184,110,1.022,111,1.022,112,0.947,113,0.876,114,0.744,115,0.947,116,1.101,117,1.184,118,0.876,119,1.101,120,0.947,121,1.101,122,1.022,123,1.101,124,1.184,125,0.023,126,0.023,1080,3.863,1081,4.696,1082,5.578,1083,5.578]],["title/classes/DragArea.html",[54,0.041,634,2.19]],["body/classes/DragArea.html",[3,0.386,4,0.302,8,0.344,23,0.302,24,0.68,32,0.882,33,0.883,35,0.476,36,0.029,37,0.344,38,0.624,39,0.524,45,0.826,46,0.826,48,0.476,53,0.386,54,0.069,63,1.991,66,2.145,125,0.021,126,0.021,130,1.292,169,0.955,195,1.292,199,1.609,200,1.2,211,1.228,235,0.952,252,1.213,276,4.213,288,1.492,295,1.859,298,3.303,319,1.236,336,0.797,436,2.512,450,2.992,468,2.512,495,2.175,545,1.656,552,3.692,564,4.49,588,3.209,591,3.303,601,2.734,609,4.334,622,2.512,634,3.303,635,5.25,636,4.903,647,2.848,654,2.848,660,1.938,665,2.082,674,5.124,678,4.747,691,2.318,700,5.522,722,4.946,800,2.992,868,3.303,872,3.303,879,4.213,904,2.512,975,4.601,1084,5.417,1085,3.25,1086,5.004,1087,4.213,1088,3.877,1089,3.692,1090,6.086,1091,5.552,1092,5.552,1093,5.552,1094,5.874,1095,3.692,1096,3.86,1097,3.86,1098,5.874,1099,4.213,1100,5.004,1101,5.004,1102,3.86,1103,5.004,1104,3.86,1105,3.86,1106,5.004,1107,3.86,1108,5.004,1109,3.86,1110,5.874,1111,5.004,1112,5.874,1113,5.004,1114,5.004,1115,5.552,1116,5.004,1117,5.874,1118,5.004,1119,5.004]],["title/components/GrassfireAnimationComponent.html",[0,0.014,94,0.685]],["body/components/GrassfireAnimationComponent.html",[0,0.019,1,0.588,2,0.905,3,0.285,4,0.223,5,0.735,6,0.735,7,0.735,8,0.253,12,0.735,13,1.483,14,1.374,15,0.683,17,0.905,19,0.905,21,0.905,23,0.223,24,0.552,26,1.221,27,2.127,29,0.634,32,1.176,33,0.891,35,0.502,36,0.029,37,0.46,38,0.633,39,0.552,42,1.879,45,0.84,46,0.84,48,0.702,50,0.462,53,0.285,54,0.035,55,0.911,68,0.683,69,1.049,70,0.836,71,0.735,72,1.335,73,0.735,75,1.049,76,0.988,77,0.988,78,0.735,79,0.634,80,0.735,81,0.588,82,0.544,83,0.475,84,1.224,85,0.634,86,0.735,87,0.634,88,0.588,89,0.634,90,0.975,91,1.412,92,0.588,93,0.735,94,1.068,95,1.405,96,0.588,97,0.735,98,0.634,99,0.735,100,0.588,101,0.735,102,0.544,103,0.588,104,0.544,105,0.634,106,0.588,107,0.634,108,0.683,109,0.735,110,0.634,111,0.634,112,0.588,113,0.544,114,0.462,115,0.588,116,0.683,117,0.735,118,0.544,119,0.683,120,0.588,121,0.683,122,0.634,123,0.683,124,0.735,125,0.017,126,0.017,128,1.221,152,1.316,155,1.414,162,1.821,169,0.776,170,2.381,173,3.131,195,1.573,199,1.049,211,1.242,229,2.041,235,0.923,236,1.118,252,0.839,255,1.504,278,1.429,280,1.879,288,1.696,295,1.212,308,0.79,309,0.849,336,1.209,409,1.887,413,1.754,482,1.555,512,2.221,514,2.221,611,2.059,665,2.057,666,1.884,668,2.976,741,2.826,791,3.272,825,1.319,836,3.415,857,3.415,926,1.555,931,2.431,932,2.431,933,2.747,1028,1.429,1120,5.549,1121,5.549,1122,3.499,1123,3.499,1124,3.499,1125,3.499,1126,3.499,1127,3.499,1128,3.499,1129,3.817,1130,4.066,1131,3.817,1132,3.817,1133,3.499,1134,3.094,1135,2.397,1136,4.199,1137,4.066,1138,2.847,1139,4.066,1140,2.847,1141,2.847,1142,2.847,1143,2.847,1144,2.847,1145,2.847,1146,2.847,1147,2.847,1148,2.847,1149,2.847,1150,2.847,1151,3.499,1152,3,1153,2.847,1154,3,1155,2.847,1156,3,1157,2.847,1158,3,1159,2.847,1160,1.702,1161,2.1,1162,2.197,1163,1.555,1164,2.1,1165,1.879,1166,1.879,1167,2.1,1168,2.1,1169,1.702,1170,3.817,1171,3.094,1172,3.499,1173,3,1174,2.1,1175,2.431,1176,2.684,1177,2.684,1178,2.1,1179,2.1,1180,2.1,1181,3.817,1182,3.817,1183,3.817,1184,3.817,1185,3.817,1186,2.1,1187,2.1,1188,2.1,1189,3.499,1190,2.1,1191,2.1,1192,2.1,1193,2.1,1194,2.1,1195,2.1,1196,2.1,1197,2.1,1198,2.1,1199,2.1,1200,2.1,1201,3,1202,2.1,1203,2.1,1204,2.1,1205,2.1,1206,2.1,1207,2.1,1208,4.199,1209,2.1,1210,2.1,1211,1.133,1212,2.1,1213,2.1,1214,2.1,1215,2.1,1216,2.1,1217,2.1,1218,2.847,1219,2.1,1220,2.1,1221,1.879,1222,2.847]],["title/components/HelpComponent.html",[0,0.014,96,0.685]],["body/components/HelpComponent.html",[0,0.025,1,0.938,2,1.235,3,0.455,4,0.356,5,1.173,6,1.173,7,1.173,8,0.405,12,1.173,13,1.544,14,1.431,15,1.09,17,1.235,19,1.235,21,1.235,36,0.028,37,0.494,48,0.684,50,0.737,53,0.455,54,0.057,68,1.09,69,1.431,70,1.055,71,1.173,72,1.608,73,1.173,75,1.431,76,0.868,77,0.868,78,1.173,79,1.012,80,1.173,81,0.938,82,0.868,83,0.599,84,1.545,85,1.012,86,1.173,87,1.012,88,0.938,89,1.012,90,1.33,91,1.649,92,0.938,93,1.173,94,0.938,95,1.09,96,1.286,97,1.173,98,1.012,99,1.173,100,0.938,101,1.173,102,0.868,103,0.938,104,0.868,105,1.012,106,0.938,107,1.012,108,1.09,109,1.173,110,1.012,111,1.012,112,0.938,113,0.868,114,0.737,115,0.938,116,1.09,117,1.173,118,0.868,119,1.09,120,0.938,121,1.09,122,1.012,123,1.09,124,1.173,125,0.023,126,0.023,152,1.66,308,1.261,381,4.092,1223,3.827,1224,5.546,1225,5.546]],["title/injectables/HistoryService.html",[882,1.666,1226,2.448]],["body/injectables/HistoryService.html",[3,0.408,4,0.32,8,0.363,23,0.32,24,0.704,32,1.057,33,0.873,35,0.503,36,0.029,37,0.363,38,0.6,39,0.554,45,0.774,46,0.774,48,0.503,50,0.661,53,0.408,54,0.051,125,0.021,126,0.021,130,1.338,162,1.822,169,0.99,193,3.422,198,4.365,235,1.026,236,1.145,319,1.306,336,1.07,357,2.693,369,1.848,431,2.832,441,3.1,459,4.576,466,3.011,552,4.425,665,1.306,675,3.422,882,2.603,883,2.693,889,3.958,904,2.603,906,3.825,907,3.01,958,3.825,969,3.958,982,4.425,1226,3.825,1227,3.435,1228,3.958,1229,5.699,1230,4.205,1231,5.184,1232,5.997,1233,5.997,1234,5.997,1235,5.184,1236,4.079,1237,5.412,1238,5.184,1239,5.184,1240,5.184,1241,2.832,1242,4.365,1243,4.079,1244,3.825,1245,5.184,1246,4.079,1247,4.079,1248,5.184,1249,5.184,1250,5.184,1251,5.184,1252,4.079,1253,4.365,1254,4.365,1255,4.365,1256,4.079,1257,5.184,1258,5.184,1259,4.079,1260,4.079,1261,5.997,1262,4.079,1263,4.079,1264,4.079,1265,4.079,1266,4.079,1267,4.079,1268,3.435,1269,4.079,1270,4.079,1271,3.435,1272,4.079,1273,4.079]],["title/components/HomeComponent.html",[0,0.014,100,0.685]],["body/components/HomeComponent.html",[0,0.019,1,0.573,2,0.89,3,0.278,4,0.218,5,0.717,6,0.717,7,0.717,8,0.247,12,0.717,13,1.479,14,1.371,15,0.666,17,0.89,19,0.89,21,0.89,23,0.466,26,1.713,36,0.029,37,0.356,46,0.835,48,0.697,50,0.45,53,0.278,54,0.035,63,2.368,66,2.116,68,0.666,69,1.031,70,1.068,71,0.717,72,1.32,73,0.717,75,1.031,76,0.53,77,0.53,78,0.717,79,0.619,80,0.717,81,0.573,82,0.893,83,0.652,84,1.207,85,0.619,86,0.717,87,0.619,88,0.573,89,0.619,90,0.958,91,1.399,92,0.573,93,0.717,94,0.573,95,0.666,96,0.573,97,0.717,98,0.619,99,0.717,100,1.056,101,0.717,102,0.53,103,0.573,104,0.53,105,0.619,106,0.573,107,0.619,108,0.666,109,0.717,110,0.619,111,0.619,112,0.573,113,0.53,114,0.45,115,0.573,116,0.666,117,0.717,118,0.53,119,0.666,120,0.573,121,1.3,122,1.414,123,0.666,124,0.717,125,0.016,126,0.016,132,4.164,140,2.637,152,1.298,155,1.394,185,2.389,191,2.036,194,4.643,195,1.457,202,2.194,211,1.078,229,2.568,235,0.915,238,3.364,251,3.083,298,2.637,301,1.374,308,0.771,309,0.828,358,2.349,361,3.939,370,2.389,373,2.948,374,1.105,377,2.339,384,2.183,403,3.088,409,2.448,413,2.2,430,3.364,449,2.469,468,2.833,484,2.568,488,1.59,499,1.834,548,2.637,559,3.364,564,4.721,579,3.364,584,3.775,585,2.637,597,3.928,617,2.389,646,4.752,666,2.757,668,3.076,673,2.006,675,2.637,679,3.364,684,3.928,686,3.377,705,5.01,758,1.713,769,4.307,799,3.364,800,2.389,806,2.637,868,3.377,872,2.637,888,2.948,987,3.678,990,3.725,1001,4.164,1095,2.948,1099,5.648,1228,3.725,1237,5.298,1254,4.307,1274,2.339,1275,3.995,1276,3.995,1277,5.643,1278,3.995,1279,5.643,1280,3.995,1281,3.995,1282,5.116,1283,3.995,1284,3.995,1285,4.752,1286,3.364,1287,3.364,1288,4.752,1289,3.364,1290,3.364,1291,3.364,1292,3.995,1293,3.995,1294,3.995,1295,3.364,1296,3.995,1297,3.995,1298,3.995,1299,3.364,1300,3.995,1301,3.364,1302,3.995,1303,3.995,1304,3.995,1305,3.995,1306,3.995,1307,3.725,1308,5.95,1309,3.995,1310,4.307,1311,3.995,1312,4.164,1313,3.995,1314,3.364,1315,3.995,1316,3.364,1317,3.995,1318,3.995,1319,5.95,1320,3.995,1321,3.364,1322,3.995,1323,3.995,1324,3.995,1325,3.995,1326,3.995,1327,3.995,1328,3.995,1329,5.116,1330,4.307,1331,3.995,1332,5.643,1333,5.116,1334,5.116,1335,3.995,1336,3.995,1337,3.364,1338,3.364,1339,2.948,1340,4.307,1341,4.307,1342,5.116,1343,5.116,1344,5.116,1345,5.116,1346,5.116,1347,3.995,1348,2.948]],["title/components/HoughTransformAnimationComponent.html",[0,0.014,102,0.634]],["body/components/HoughTransformAnimationComponent.html",[0,0.016,1,0.664,2,0.716,3,0.208,4,0.347,5,0.536,6,0.536,7,0.536,8,0.185,10,1.371,12,0.536,13,1.427,14,1.322,15,1.215,16,2.353,17,0.716,19,0.716,21,0.716,23,0.308,24,0.437,26,1.379,27,1.743,28,2.903,29,0.463,32,1.165,33,0.886,35,0.591,36,0.029,37,0.47,38,0.651,39,0.717,45,0.839,46,0.839,47,2.373,48,0.791,50,0.337,52,1.242,53,0.208,54,0.026,55,0.665,57,3.738,58,1.533,66,0.715,68,1.062,69,0.83,70,0.693,71,0.536,72,1.143,73,0.536,75,0.83,76,0.846,77,0.915,78,0.536,79,0.463,80,0.536,81,0.429,82,0.397,83,0.635,84,1.015,85,0.986,86,0.536,87,0.463,88,0.429,89,0.716,90,0.771,91,1.236,92,0.429,93,0.536,94,0.429,95,0.498,96,0.429,97,0.536,98,0.463,99,0.536,100,0.429,101,0.536,102,0.846,103,1.156,104,1.31,105,0.463,106,0.664,107,0.463,108,0.498,109,0.536,110,0.463,111,0.463,112,0.429,113,0.397,114,0.337,115,0.429,116,0.498,117,0.536,118,0.397,119,0.498,120,0.429,121,0.498,122,0.463,123,0.498,124,0.536,125,0.013,126,0.013,128,0.891,145,1.533,148,1.923,149,1.371,152,1.091,153,1.687,154,1.566,155,1.173,156,2.149,157,2.597,158,1.823,162,1.229,169,0.614,170,2.223,185,2.353,186,2.597,191,2.102,195,1.143,199,1.307,200,1.267,209,1.189,211,1.188,214,1.135,227,1.371,235,0.928,236,1.009,252,1.203,286,2.123,288,1.173,289,2.648,295,1.67,306,0.891,307,0.827,308,0.576,309,0.619,310,1.371,312,1.135,313,0.891,318,1.242,336,0.914,358,1.975,365,3.268,369,1.229,374,0.827,402,1.975,404,2.149,409,1.906,410,1.975,411,2.149,412,2.149,413,1.771,423,1.9,444,1.614,448,1.923,449,1.189,467,0.891,471,1.771,472,2.648,473,2.419,474,2.219,485,2.173,488,1.566,493,1.135,494,1.043,495,1.534,496,1.135,497,1.043,498,1.043,500,1.135,501,1.135,502,0.963,503,1.135,509,1.757,510,1.242,511,1.923,513,2.903,515,2.617,528,2.767,529,2.923,530,2.648,531,2.648,536,1.614,570,1.975,604,2.373,611,0.827,641,1.923,644,1.614,660,1.043,665,2.019,666,2.448,668,2.219,673,2.223,741,1.135,742,2.543,745,2.597,758,1.9,762,3.268,782,3.159,786,2.373,791,1.135,796,2.373,825,0.963,926,1.135,931,1.923,932,1.923,933,1.975,934,2.597,936,2.597,946,2.123,947,3.312,948,2.419,949,2.373,950,1.749,951,3.268,952,2.597,964,2.597,986,1.371,987,1.923,993,1.749,994,3.162,998,2.123,1002,1.533,1007,2.373,1014,1.749,1026,1.749,1028,1.043,1031,1.533,1035,1.242,1040,1.371,1043,2.353,1055,2.123,1056,2.123,1060,1.242,1075,3.268,1076,3.268,1077,3.268,1088,1.371,1134,2.648,1160,2.353,1162,2.219,1163,1.135,1171,1.242,1221,3.487,1241,2.617,1285,2.707,1349,4.829,1350,4.829,1351,3.312,1352,2.903,1353,4.265,1354,3.312,1355,3.729,1356,3.729,1357,3.216,1358,2.078,1359,2.078,1360,2.078,1361,2.707,1362,3.312,1363,2.078,1364,2.078,1365,2.078,1366,2.078,1367,2.078,1368,2.078,1369,2.707,1370,2.078,1371,2.078,1372,1.749,1373,2.078,1374,2.078,1375,2.373,1376,2.078,1377,1.749,1378,1.749,1379,1.749,1380,2.078,1381,2.078,1382,2.078,1383,1.749,1384,1.749,1385,2.707,1386,2.707,1387,2.707,1388,3.312,1389,1.533,1390,1.749,1391,1.749,1392,1.749,1393,1.749,1394,1.749,1395,1.749,1396,1.749,1397,1.749,1398,1.749,1399,1.749,1400,1.749,1401,1.749,1402,1.371,1403,1.749,1404,1.749,1405,1.749,1406,1.533,1407,2.707,1408,1.749,1409,3.312,1410,2.707,1411,2.707,1412,1.749,1413,1.749,1414,2.707,1415,1.749,1416,1.749,1417,1.749,1418,1.749,1419,2.707,1420,1.749,1421,1.749,1422,1.749,1423,1.749,1424,1.749,1425,2.707,1426,1.749,1427,1.749,1428,1.749,1429,1.749,1430,1.749,1431,2.707,1432,1.749,1433,1.749,1434,1.749,1435,1.749,1436,1.749,1437,1.749,1438,1.749,1439,1.749,1440,1.533,1441,1.749,1442,1.533,1443,1.533,1444,1.371,1445,1.533,1446,1.749,1447,1.533,1448,1.749,1449,2.707,1450,1.749,1451,2.373,1452,1.749,1453,2.707,1454,1.749,1455,1.749,1456,1.749,1457,1.749,1458,1.749,1459,1.749,1460,1.749,1461,1.749,1462,1.749,1463,1.749,1464,1.749,1465,1.749,1466,1.749,1467,1.749,1468,1.749,1469,1.749,1470,1.749,1471,1.749,1472,1.749,1473,1.749,1474,1.749,1475,1.749,1476,1.749,1477,1.749,1478,1.749,1479,1.749,1480,1.749,1481,1.749,1482,1.749,1483,2.707,1484,2.707,1485,2.707,1486,1.749,1487,1.749,1488,2.373,1489,3.729,1490,3.729,1491,4.429,1492,2.078,1493,2.078,1494,3.216,1495,3.216,1496,3.216,1497,2.373,1498,2.078,1499,2.078]],["title/classes/Kernel.html",[54,0.041,106,0.685]],["body/classes/Kernel.html",[3,0.369,4,0.289,8,0.328,23,0.289,24,0.66,29,0.821,32,1.2,33,0.906,35,0.74,36,0.029,37,0.534,38,0.638,39,0.814,45,0.814,46,0.853,48,0.712,53,0.369,54,0.046,63,1.468,66,1.868,83,0.616,106,1.382,125,0.02,126,0.02,162,1.788,169,0.928,195,1.548,209,2.322,211,1.037,235,1.018,236,1.145,255,1.364,288,1.1,301,1.868,336,1.296,369,1.709,419,2.439,495,1.92,545,1.582,570,2.439,571,3.584,582,3.106,583,3.106,596,2.435,611,2.499,617,2.905,637,2.722,641,2.905,644,2.439,665,2.01,825,1.709,891,3.206,911,4.09,913,3.106,914,4.86,915,3.106,916,3.106,920,3.106,922,3.106,923,3.106,1033,3.81,1034,3.81,1211,1.933,1228,2.435,1230,3.584,1500,3.106,1501,5.431,1502,5.431,1503,5.431,1504,4.86,1505,5.772,1506,5.286,1507,4.857,1508,4.857,1509,3.689,1510,3.689,1511,3.689,1512,4.857,1513,4.007,1514,5.431,1515,3.689,1516,3.689,1517,4.857,1518,3.689,1519,4.857,1520,3.689,1521,3.689,1522,3.689,1523,3.106,1524,3.689,1525,3.689,1526,3.689,1527,3.689,1528,3.689,1529,3.689,1530,2.722,1531,2.722,1532,4.857,1533,5.431,1534,3.689,1535,5.998,1536,3.689,1537,3.689,1538,3.106,1539,4.857,1540,3.689,1541,3.689,1542,3.689,1543,3.689,1544,3.689,1545,3.689,1546,3.689,1547,3.689,1548,3.584,1549,3.689,1550,3.689,1551,3.689,1552,3.689,1553,4.857,1554,3.689,1555,3.689,1556,3.689,1557,3.689,1558,3.689,1559,3.106,1560,3.689,1561,3.689]],["title/components/KernelDialogComponent.html",[0,0.014,105,0.739]],["body/components/KernelDialogComponent.html",[0,0.018,1,0.522,2,0.831,3,0.253,4,0.198,5,0.653,6,0.653,7,0.653,8,0.225,11,1.67,12,0.653,13,1.463,14,1.356,15,0.607,16,2.232,17,0.831,18,3.733,19,0.831,20,3.142,21,0.831,22,3.142,23,0.409,24,0.507,25,2.054,26,2.343,27,1.525,29,0.563,30,2.13,31,4.121,32,0.862,33,0.804,35,0.547,36,0.029,37,0.465,38,0.652,39,0.602,40,2.753,42,1.67,43,3.142,45,0.344,46,0.665,48,0.77,49,2.13,50,0.41,51,2.13,52,1.513,53,0.373,54,0.032,55,0.81,61,3.612,63,1.948,68,0.607,69,0.963,70,0.781,71,0.653,72,1.263,73,0.653,75,0.963,76,0.483,77,0.483,78,0.653,79,0.563,80,0.653,81,0.522,82,0.483,83,0.444,84,1.144,85,0.563,86,0.653,87,0.563,88,0.522,89,0.563,90,0.895,91,1.347,92,0.522,93,0.653,94,0.522,95,0.607,96,0.522,97,0.653,98,0.563,99,0.653,100,0.522,101,0.653,102,0.483,103,0.522,104,0.483,105,1.09,106,1.369,107,0.563,108,0.607,109,0.653,110,0.563,111,0.563,112,0.522,113,0.483,114,0.41,115,0.522,116,0.607,117,0.653,118,0.483,119,0.607,120,0.522,121,0.607,122,0.563,123,0.607,124,0.653,125,0.015,126,0.015,152,1.23,153,1.902,154,1.765,155,1.322,156,2.422,157,2.927,158,2.054,159,3.272,169,0.713,195,1.79,209,2.189,211,1.324,235,0.794,236,0.935,252,1.31,255,0.935,278,3.161,288,1.958,289,2.652,301,1.284,306,1.085,307,1.485,308,0.702,309,0.754,310,1.67,311,1.866,312,1.382,313,1.085,336,0.522,402,2.226,419,1.873,447,2.753,473,1.382,491,4.599,497,1.27,498,1.27,541,3.612,571,2.753,1006,4.882,1030,3.974,1032,1.866,1050,5.378,1065,2.13,1068,4.121,1070,2.753,1211,2.174,1255,2.13,1506,3.142,1523,2.13,1559,3.142,1562,4.442,1563,4.434,1564,4.984,1565,4.895,1566,3.732,1567,4.895,1568,2.53,1569,2.53,1570,3.732,1571,2.53,1572,2.53,1573,2.53,1574,2.53,1575,2.53,1576,2.53,1577,2.53,1578,2.53,1579,2.53,1580,2.53,1581,2.53,1582,2.53,1583,2.53,1584,2.53,1585,2.53,1586,2.53,1587,2.53,1588,2.53,1589,2.53,1590,2.53,1591,2.53,1592,2.53,1593,4.434,1594,2.53,1595,2.53,1596,4.895,1597,4.895,1598,2.53,1599,2.53,1600,2.53,1601,2.53,1602,4.434,1603,2.53,1604,2.53,1605,2.53,1606,5.798,1607,4.895,1608,4.895,1609,4.895,1610,2.53,1611,2.53,1612,2.53,1613,2.53,1614,2.53,1615,2.53,1616,2.53,1617,4.434,1618,2.53,1619,2.53,1620,3.142,1621,3.142,1622,3.142,1623,3.142,1624,3.142,1625,3.142,1626,3.142,1627,3.142,1628,4.434,1629,3.732,1630,3.142,1631,3.142,1632,3.142,1633,4.434,1634,3.142,1635,3.142,1636,3.142,1637,3.732,1638,3.732,1639,5.462,1640,3.732,1641,5.462,1642,6.178,1643,5.462,1644,3.732,1645,3.732,1646,3.732,1647,3.732,1648,3.732,1649,3.732,1650,3.732]],["title/classes/Line.html",[54,0.041,782,1.984]],["body/classes/Line.html",[0,0.017,1,0.58,3,0.281,4,0.316,8,0.25,10,1.856,13,0.626,14,0.58,15,0.675,16,1.681,17,0.626,19,0.626,21,0.626,23,0.22,24,0.547,25,2.858,26,1.729,27,1.386,28,2.075,29,0.626,32,1.175,33,0.77,35,0.347,36,0.029,37,0.25,38,0.608,39,0.382,47,2.075,48,0.821,50,0.456,52,1.681,53,0.281,54,0.035,55,0.9,57,4.306,58,4.018,66,0.967,68,1.13,76,0.77,77,0.899,83,0.597,85,0.898,102,0.537,103,1.062,104,1.251,125,0.017,126,0.017,128,1.206,130,0.726,145,2.075,148,1.681,149,1.856,152,1.118,153,1.729,154,1.604,155,1.201,156,2.202,157,2.66,158,1.867,162,1.118,170,1.412,185,3.49,186,3.852,191,2.167,199,1.04,200,1.306,211,1.224,227,1.856,236,0.537,252,1.255,286,2.66,288,0.838,289,2.41,295,1.779,306,1.206,307,1.119,308,0.78,309,0.838,310,1.856,312,1.536,313,1.206,318,1.681,336,1.062,358,2.023,365,3.796,369,1.118,374,1.119,402,2.023,404,2.202,409,2.167,410,1.412,411,1.536,412,1.536,413,2.014,423,1.729,467,1.206,471,1.742,472,2.41,473,2.202,474,2.182,485,2.431,488,1.119,493,1.536,494,1.412,495,1.975,496,1.536,497,1.412,498,1.412,500,1.536,501,1.536,502,1.303,503,1.536,509,2.202,510,1.681,511,2.41,513,3.475,515,2.975,528,1.536,545,1.206,547,2.367,570,2.023,604,2.974,611,1.119,641,2.41,644,2.023,660,1.412,665,2.107,666,2.626,668,2.523,673,2.365,741,1.536,742,2.365,745,1.856,758,2.02,762,3.796,782,3.57,786,2.974,791,1.536,796,2.974,806,1.856,825,1.303,926,1.536,931,1.681,932,1.681,933,1.412,934,1.856,936,1.856,948,1.536,951,2.974,952,1.856,964,1.856,998,1.856,1028,1.412,1031,2.075,1035,1.681,1040,1.856,1043,2.817,1055,2.66,1056,2.66,1060,1.681,1088,1.856,1134,1.681,1160,2.41,1162,2.384,1163,1.536,1171,1.681,1221,3.109,1241,1.536,1349,4.306,1350,4.306,1351,3.393,1352,2.075,1353,3.966,1354,2.367,1355,2.367,1356,2.367,1361,2.367,1362,2.367,1369,2.367,1375,2.075,1384,2.367,1385,3.393,1386,3.393,1387,3.393,1388,3.966,1389,2.075,1390,2.367,1391,2.367,1392,2.367,1393,2.367,1394,2.367,1395,2.367,1396,2.367,1397,2.367,1398,2.367,1399,2.367,1400,2.367,1401,2.367,1402,1.856,1403,2.367,1404,2.367,1405,2.367,1406,2.075,1407,3.393,1408,2.367,1409,3.966,1410,3.393,1411,3.393,1412,2.367,1413,2.367,1414,3.393,1415,2.367,1416,2.367,1417,2.367,1418,2.367,1419,3.393,1420,2.367,1421,2.367,1422,2.367,1423,2.367,1424,2.367,1425,3.393,1426,2.367,1427,2.367,1428,2.367,1429,2.367,1430,2.367,1431,4.771,1432,2.367,1433,2.367,1434,2.367,1435,2.367,1436,2.367,1437,2.367,1438,2.367,1439,2.367,1440,2.075,1441,2.367,1442,2.075,1443,2.075,1444,1.856,1445,2.075,1446,2.367,1447,2.075,1448,2.367,1449,3.393,1450,2.367,1451,2.974,1452,2.367,1453,3.393,1454,2.367,1455,2.367,1456,2.367,1457,2.367,1458,2.367,1459,2.367,1460,2.367,1461,2.367,1462,2.367,1463,2.367,1464,2.367,1465,2.367,1466,2.367,1467,2.367,1468,2.367,1469,2.367,1470,2.367,1471,2.367,1472,2.367,1473,2.367,1474,2.367,1475,2.367,1476,2.367,1477,2.367,1478,2.367,1479,2.367,1480,2.367,1481,2.367,1482,2.367,1483,3.393,1484,3.393,1485,3.393,1486,2.367,1487,2.367,1651,2.812,1652,2.812,1653,2.812,1654,2.367,1655,2.812,1656,2.812,1657,2.812,1658,5.446]],["title/classes/MATAnimationElement.html",[54,0.041,1169,1.984]],["body/classes/MATAnimationElement.html",[0,0.016,3,0.279,4,0.218,8,0.248,13,0.621,14,0.576,17,0.621,19,0.621,21,0.621,23,0.401,24,0.544,25,2.888,26,1.196,27,1.763,29,0.621,32,1.193,33,0.737,35,0.344,36,0.029,37,0.248,38,0.543,39,0.379,48,0.697,50,0.452,53,0.279,54,0.05,55,0.893,70,0.491,76,0.765,77,0.533,83,0.645,118,0.533,119,1.125,122,0.621,125,0.016,126,0.016,128,1.196,148,1.668,152,1.112,155,1.194,162,1.568,173,1.841,195,1.69,199,1.034,200,0.669,211,1.281,229,2.011,236,1.037,252,0.576,255,1.031,278,1.4,280,1.841,288,1.894,295,1.194,308,0.774,309,0.831,336,1.287,369,0.774,379,1.841,396,1.668,405,1.841,406,1.841,409,1.11,413,1.031,482,1.524,512,2.189,514,2.189,545,1.196,611,2.04,644,3.091,660,2.011,665,2.149,666,2.76,668,3.122,741,2.966,791,3.364,825,1.292,835,3.782,836,4.114,837,2.956,857,4.064,861,2.956,933,1.4,1028,1.4,1122,2.058,1123,2.058,1124,2.058,1125,2.058,1126,2.058,1127,2.058,1128,2.058,1129,2.956,1131,2.058,1132,2.058,1133,2.058,1134,1.668,1136,3.46,1151,2.956,1152,2.058,1154,2.058,1156,2.058,1158,2.058,1160,2.396,1161,2.058,1162,2.375,1163,1.524,1164,2.058,1165,1.841,1166,1.841,1167,2.058,1168,2.058,1169,2.804,1170,4.005,1171,3.246,1172,3.46,1173,2.956,1174,2.956,1175,2.804,1176,3.095,1177,2.645,1178,2.058,1179,2.058,1180,2.058,1181,3.782,1182,3.782,1183,4.543,1184,4.543,1185,4.543,1186,2.058,1187,2.058,1188,2.058,1189,3.46,1190,2.058,1191,2.058,1192,2.058,1193,2.058,1194,2.058,1195,2.058,1196,2.058,1197,2.058,1198,2.058,1199,2.956,1200,2.058,1201,2.956,1202,2.058,1203,2.058,1204,2.058,1205,2.058,1206,2.058,1207,2.058,1208,4.17,1209,2.058,1210,2.058,1211,2.04,1212,2.058,1213,2.058,1214,2.058,1215,2.058,1216,2.058,1217,2.058,1219,2.058,1220,2.058,1659,4.17,1660,4.17,1661,4.57,1662,2.789,1663,2.789,1664,5.125,1665,2.348,1666,2.348,1667,2.348,1668,2.348,1669,2.348,1670,3.373,1671,3.373,1672,3.373,1673,4.315,1674,5.184,1675,3.373,1676,4.315,1677,2.348,1678,2.348,1679,3.373,1680,3.373,1681,3.373,1682,3.373,1683,3.373,1684,3.373,1685,5.184,1686,3.373,1687,3.373,1688,4.315,1689,3.373,1690,2.348,1691,3.373,1692,3.948,1693,2.348,1694,3.373,1695,2.348,1696,2.348,1697,2.348,1698,2.348,1699,2.348,1700,2.348,1701,2.348,1702,2.348,1703,3.373,1704,2.058,1705,2.348,1706,3.373,1707,2.348,1708,3.948,1709,2.956,1710,2.348,1711,3.373,1712,3.373,1713,4.315,1714,3.373,1715,3.373,1716,2.348]],["title/components/MatrixDisplayComponent.html",[0,0.014,107,0.739]],["body/components/MatrixDisplayComponent.html",[0,0.024,1,0.877,2,1.185,3,0.425,4,0.333,5,1.097,6,1.097,7,1.097,8,0.378,12,1.097,13,1.537,14,1.424,15,1.019,17,0.946,19,1.185,21,1.185,23,0.491,33,0.722,36,0.029,37,0.473,38,0.425,48,0.656,50,0.689,53,0.425,54,0.053,59,3.577,61,4.49,63,2.117,68,1.019,69,1.373,70,1.023,71,1.097,72,1.571,73,1.097,75,1.373,76,0.811,77,0.811,78,1.097,79,0.946,80,1.097,81,0.877,82,0.811,83,0.581,84,1.499,85,0.946,86,1.097,87,0.946,88,0.877,89,0.946,90,1.276,91,1.617,92,0.877,93,1.097,94,0.877,95,1.019,96,0.877,97,1.097,98,0.946,99,1.097,100,0.877,101,1.097,102,0.811,103,0.877,104,0.811,105,0.946,106,1.32,107,1.355,108,1.556,109,1.097,110,0.946,111,0.946,112,0.877,113,0.811,114,0.689,115,0.877,116,1.019,117,1.097,118,0.811,119,1.019,120,0.877,121,1.019,122,0.946,123,1.019,124,1.097,125,0.022,126,0.022,169,1.016,184,4.478,195,1.499,200,1.019,206,3.135,235,0.689,336,0.877,485,2.281,570,2.133,641,2.541,655,3.511,1032,3.135,1036,4.284,1717,4.889,1718,3.577,1719,5.319,1720,5.319,1721,6.558,1722,4.249,1723,4.249,1724,4.249,1725,4.249,1726,4.249,1727,5.319,1728,5.319]],["title/components/MorphologicalOperationsAnimationComponent.html",[0,0.014,112,0.685]],["body/components/MorphologicalOperationsAnimationComponent.html",[0,0.022,1,0.448,2,0.74,3,0.217,4,0.317,5,0.56,6,0.56,7,0.56,8,0.193,12,0.56,13,1.435,14,1.33,15,0.52,17,0.74,19,0.74,21,0.74,23,0.317,24,0.451,27,1.773,29,0.483,32,1,33,0.875,35,0.559,36,0.029,37,0.459,38,0.642,39,0.615,45,0.852,46,0.852,48,0.779,50,0.352,53,0.217,54,0.027,55,0.695,63,1.323,66,1.773,68,0.52,69,0.858,70,1,71,0.56,72,1.169,73,0.56,75,0.858,76,0.865,77,1.084,78,0.56,79,0.483,80,0.56,81,0.448,82,0.414,83,0.678,84,1.043,85,1.009,86,0.56,87,0.483,88,0.448,89,0.483,90,0.798,91,1.261,92,0.448,93,0.56,94,0.448,95,0.52,96,0.448,97,0.56,98,0.483,99,0.56,100,0.448,101,0.56,102,0.414,103,0.448,104,0.414,105,0.483,106,0.448,107,0.483,108,0.52,109,0.56,110,0.483,111,0.483,112,1.064,113,1.23,114,1.109,115,0.448,116,0.52,117,0.56,118,0.414,119,0.52,120,0.448,121,1.287,122,0.483,123,0.52,124,0.56,125,0.017,126,0.014,128,0.93,130,1.261,152,1.121,153,1.734,154,1.608,155,1.205,156,2.208,158,1.873,169,0.635,170,2.588,191,2.408,199,1.562,200,1.514,202,2.211,203,2.816,209,1.675,211,1.057,214,2.208,220,2.195,221,2.029,235,0.836,236,1.106,251,1.185,252,1.262,258,2.453,295,1.456,301,1.144,302,3.402,306,0.93,307,0.863,308,0.602,309,0.647,312,1.185,313,0.93,318,1.297,319,1.064,336,0.686,358,2.029,369,1.257,370,3.082,371,2.195,374,0.863,398,2.709,402,2.029,404,2.208,410,2.029,411,2.208,412,2.208,419,2.275,423,1.943,426,1.669,427,1.54,431,1.816,432,2.799,433,2.799,444,1.669,446,1.297,448,1.297,449,2.178,450,1.297,452,1.089,454,1.432,465,2.195,466,2.275,467,0.93,468,1.669,471,1.984,472,3.082,473,2.816,474,2.564,480,2.195,484,1.669,485,1.426,486,2.453,488,1.803,489,1.988,493,1.185,494,1.089,495,0.695,496,1.185,497,1.089,498,1.089,500,1.185,501,1.185,502,1.005,503,1.185,504,1.432,509,2.816,510,1.988,511,1.988,515,2.475,527,2.453,528,2.816,529,2.991,530,2.709,531,2.709,536,2.275,539,3.803,551,1.432,570,1.089,613,1.988,615,2.991,617,3.082,622,1.669,660,1.089,673,2.453,684,2.668,691,2.683,742,2.588,745,2.668,758,2.301,759,2.195,807,2.453,825,1.005,891,2.195,904,1.669,926,1.185,927,2.799,931,1.988,932,1.988,933,2.029,934,2.668,936,2.668,939,3.403,946,2.195,948,2.816,949,2.453,952,2.668,961,2.799,962,2.799,964,2.668,967,1.827,969,3.402,975,4.754,986,1.432,987,2.417,990,2.195,991,1.827,994,2.991,998,1.432,1000,1.827,1001,2.453,1002,1.601,1003,4.66,1007,1.601,1009,1.827,1013,2.799,1015,1.827,1017,2.799,1019,2.799,1025,1.827,1028,1.089,1035,1.297,1040,2.195,1041,2.799,1043,1.988,1055,2.668,1056,2.991,1060,1.297,1061,1.827,1071,2.453,1075,2.453,1076,2.453,1077,3.343,1089,1.601,1162,2.099,1163,1.185,1211,1.323,1299,2.799,1330,1.827,1352,2.982,1372,1.827,1375,2.453,1377,1.827,1378,1.827,1379,1.827,1383,1.827,1440,1.601,1442,1.601,1443,1.601,1444,2.195,1445,2.982,1447,1.601,1489,3.815,1490,3.815,1729,5.447,1730,5.447,1731,3.815,1732,3.815,1733,3.815,1734,3.815,1735,4.042,1736,4.042,1737,3.803,1738,2.169,1739,2.169,1740,3.325,1741,2.169,1742,4.531,1743,2.169,1744,2.169,1745,2.169,1746,2.169,1747,2.169,1748,2.169,1749,2.169,1750,3.403,1751,3.325,1752,2.169,1753,3.325,1754,3.815,1755,2.799,1756,1.827,1757,1.827,1758,1.827,1759,1.827,1760,4.042,1761,2.169,1762,2.169,1763,2.169,1764,2.169,1765,2.169,1766,2.169,1767,2.169,1768,3.325,1769,2.169,1770,2.169,1771,3.325,1772,2.169,1773,2.169,1774,2.169,1775,2.169,1776,2.169,1777,2.169,1778,2.169,1779,2.169,1780,3.325,1781,3.325,1782,3.325]],["title/components/PageNotFoundComponent.html",[0,0.014,115,0.685]],["body/components/PageNotFoundComponent.html",[0,0.025,1,0.818,2,1.134,3,0.397,4,0.311,5,1.023,6,1.023,7,1.023,8,0.353,12,1.023,13,1.528,14,1.417,15,0.951,17,1.134,19,1.134,21,1.134,23,0.311,29,0.883,33,0.691,35,0.489,36,0.029,37,0.501,38,0.397,39,0.538,48,0.775,50,0.643,53,0.397,54,0.049,55,1.27,68,0.951,69,1.314,70,0.991,71,1.023,72,1.532,73,1.023,75,1.314,76,0.757,77,0.757,78,1.023,79,0.883,80,1.023,81,0.818,82,0.757,83,0.563,84,1.451,85,0.883,86,1.023,87,0.883,88,0.818,89,0.883,90,1.221,91,1.584,92,0.818,93,1.023,94,0.818,95,0.951,96,0.818,97,1.023,98,0.883,99,1.023,100,0.818,101,1.023,102,0.757,103,0.818,104,0.757,105,0.883,106,0.818,107,0.883,108,0.951,109,1.023,110,0.883,111,0.883,112,0.818,113,0.757,114,0.643,115,1.225,116,1.637,117,1.023,118,0.757,119,0.951,120,0.818,121,0.951,122,0.883,123,0.951,124,1.023,125,0.021,126,0.021,130,1.023,152,1.56,154,2.238,155,1.676,169,0.972,195,1.023,235,0.643,236,0.972,307,1.578,308,1.1,309,1.182,358,2.823,374,1.578,384,3.431,403,3.712,424,4.634,456,3.757,457,4.378,458,3.361,459,3.361,460,3.361,485,2.184,499,2.617,522,2.926,523,2.926,524,2.926,622,2.556,899,5.288,948,2.781,1704,3.757,1783,4.735,1784,4.735,1785,3.338,1786,5.091,1787,5.091,1788,5.091,1789,5.934,1790,3.338,1791,3.965,1792,3.965,1793,5.091,1794,5.091,1795,4.287,1796,4.287,1797,5.091,1798,5.091,1799,5.091,1800,5.091,1801,5.091,1802,5.091,1803,5.091]],["title/classes/Point.html",[54,0.041,495,1.062]],["body/classes/Point.html",[3,0.263,4,0.206,8,0.234,23,0.206,24,0.521,25,2.456,27,1.904,29,0.585,32,1.033,33,0.877,35,0.705,36,0.029,37,0.509,38,0.616,39,0.776,45,0.72,46,0.615,53,0.263,54,0.048,63,2.571,125,0.016,126,0.016,130,1.512,169,0.732,185,2.98,186,3.654,193,3.654,195,1.568,197,4.661,199,0.99,200,0.92,202,2.81,211,1.16,235,1.076,243,3.868,252,1.401,278,3.001,288,1.782,289,3.574,295,1.143,302,3.654,319,1.914,336,1.285,369,1.536,379,1.734,426,2.502,427,3.137,436,1.926,488,1.045,495,2.25,545,1.126,548,1.734,557,4.084,576,2.294,580,5.493,584,2.83,588,3.53,591,3.289,597,4.109,601,2.096,609,2.83,655,3.654,675,2.532,678,2.83,686,2.532,687,3.23,801,4.661,806,4.369,868,3.868,872,3.868,973,3.23,1069,3.344,1079,3.23,1087,4.196,1088,3.654,1211,2.378,1241,2.096,1242,4.196,1244,2.83,1339,4.084,1348,2.83,1504,4.196,1538,3.23,1754,3.23,1795,4.934,1804,2.211,1805,5.535,1806,5.86,1807,3.836,1808,4.983,1809,4.983,1810,2.626,1811,2.626,1812,3.836,1813,3.836,1814,2.626,1815,2.626,1816,3.836,1817,2.626,1818,6.074,1819,2.626,1820,4.983,1821,2.626,1822,5.86,1823,5.41,1824,3.836,1825,2.626,1826,5.535,1827,2.626,1828,3.836,1829,2.626,1830,3.836,1831,3.836,1832,3.836,1833,3.836,1834,3.836,1835,2.626,1836,4.661,1837,3.836,1838,2.626,1839,2.626,1840,3.836,1841,2.626,1842,3.836,1843,2.626,1844,3.836,1845,2.626,1846,5.716,1847,5.977,1848,5.3,1849,5.3,1850,2.626,1851,2.626,1852,2.626,1853,2.626,1854,2.626,1855,2.626,1856,3.836,1857,2.626,1858,2.626,1859,2.626]],["title/components/ShapeBitmapEditorComponent.html",[0,0.014,118,0.634]],["body/components/ShapeBitmapEditorComponent.html",[0,0.017,1,0.46,2,0.756,3,0.223,4,0.175,5,0.575,6,0.575,7,0.575,8,0.198,12,0.575,13,1.44,14,1.335,15,0.986,17,0.756,19,0.756,21,0.756,23,0.387,24,0.461,25,1.904,26,0.956,27,2.007,29,0.496,32,1.177,33,0.878,35,0.507,36,0.029,37,0.44,38,0.615,39,0.558,42,1.471,45,0.805,46,0.805,48,0.643,50,0.361,53,0.223,54,0.042,55,0.714,68,0.535,69,0.876,70,0.81,71,0.575,72,1.186,73,0.575,75,0.876,76,0.877,77,0.648,78,0.575,79,0.496,80,0.575,81,0.46,82,0.426,83,0.684,84,1.061,85,0.496,86,0.575,87,0.496,88,0.46,89,0.496,90,0.814,91,1.276,92,0.46,93,0.575,94,0.46,95,0.535,96,0.46,97,0.575,98,0.496,99,0.575,100,0.46,101,0.575,102,0.426,103,0.46,104,0.426,105,0.496,106,0.46,107,0.496,108,0.535,109,0.575,110,0.496,111,0.496,112,0.46,113,0.426,114,0.361,115,0.46,116,0.535,117,0.575,118,0.877,119,1.299,120,0.46,121,0.535,122,0.915,123,0.535,124,0.575,125,0.014,126,0.014,128,0.956,148,2.029,152,1.14,155,1.225,162,1.759,169,0.648,170,2.063,173,3.033,195,1.636,199,0.876,200,0.535,209,1.255,211,1.259,229,1.704,235,0.927,236,1.148,252,0.701,255,1.255,278,1.119,280,1.471,288,1.814,295,1.012,308,0.618,309,0.664,336,1.224,369,0.942,379,1.471,396,1.333,405,2.24,406,2.24,409,1.635,413,1.52,449,1.255,482,1.218,488,1.351,512,1.854,514,1.854,536,1.704,611,1.828,644,2.615,660,1.704,665,2.1,666,2.413,668,3.039,741,2.701,791,3.187,825,1.033,835,3.39,836,3.914,837,2.504,857,3.85,861,2.504,933,2.063,994,3.033,1028,1.119,1122,3.032,1123,3.032,1124,3.032,1125,3.032,1126,3.032,1127,3.032,1128,3.032,1129,3.39,1131,3.39,1132,3.39,1133,3.032,1134,2.748,1135,1.876,1136,3.843,1151,3.032,1152,2.504,1154,2.504,1156,2.504,1158,2.504,1160,2.458,1161,1.644,1162,2.129,1163,1.218,1164,1.644,1165,1.471,1166,1.471,1167,1.644,1168,3.032,1169,2.458,1170,3.648,1171,2.957,1172,3.032,1173,2.504,1174,2.504,1175,2.458,1176,2.713,1177,2.24,1178,1.644,1179,1.644,1180,1.644,1181,3.39,1182,3.39,1183,4.304,1184,4.304,1185,4.304,1186,1.644,1187,1.644,1188,1.644,1189,3.032,1190,1.644,1191,1.644,1192,1.644,1193,1.644,1194,1.644,1195,1.644,1196,1.644,1197,1.644,1198,1.644,1199,2.504,1200,1.644,1201,2.504,1202,1.644,1203,1.644,1204,1.644,1205,1.644,1206,1.644,1207,1.644,1208,3.843,1209,1.644,1210,1.644,1211,1.828,1212,1.644,1213,1.644,1214,1.644,1215,1.644,1216,1.644,1217,1.644,1219,1.644,1220,1.644,1221,2.24,1241,1.854,1488,2.504,1659,4.79,1660,4.79,1661,1.876,1665,2.857,1666,1.876,1667,3.868,1668,1.876,1669,1.876,1670,2.857,1671,2.857,1672,2.857,1673,3.868,1674,4.911,1675,2.857,1676,3.868,1677,2.857,1678,1.876,1679,2.857,1680,2.857,1681,2.857,1682,2.857,1683,2.857,1684,2.857,1685,4.911,1686,2.857,1687,2.857,1688,3.868,1689,2.857,1690,1.876,1691,2.857,1692,3.46,1693,3.868,1694,2.857,1695,1.876,1696,1.876,1697,1.876,1698,1.876,1699,1.876,1700,1.876,1701,1.876,1702,1.876,1703,2.857,1704,1.644,1705,1.876,1706,2.857,1707,1.876,1708,3.46,1709,2.504,1710,1.876,1711,2.857,1712,2.857,1713,3.868,1714,2.857,1715,2.857,1716,1.876,1860,3.394,1861,3.394,1862,3.394,1863,2.229,1864,2.229,1865,2.229,1866,2.229,1867,2.229,1868,2.229,1869,2.229,1870,2.229,1871,2.229,1872,2.229,1873,2.229,1874,2.229,1875,2.229,1876,2.229,1877,2.229,1878,2.229,1879,2.229,1880,2.229,1881,2.229,1882,2.229]],["title/components/StructuringElementEditorComponent.html",[0,0.014,120,0.685]],["body/components/StructuringElementEditorComponent.html",[0,0.021,1,0.505,2,0.81,3,0.245,4,0.192,5,0.631,6,0.631,7,0.631,8,0.218,12,0.631,13,1.457,14,1.351,15,0.587,17,0.81,19,0.81,21,0.81,23,0.192,24,0.654,29,0.544,32,1.012,33,0.873,35,0.536,36,0.029,37,0.458,38,0.636,39,0.59,45,0.699,46,0.699,48,0.779,50,0.396,53,0.245,54,0.03,55,0.783,66,2.054,68,0.587,69,0.939,70,1.216,71,0.631,72,1.242,73,0.631,75,0.939,76,0.467,77,0.467,78,0.631,79,0.544,80,0.631,81,0.505,82,0.467,83,0.655,84,1.122,85,1.072,86,0.631,87,0.544,88,0.505,89,0.544,90,0.873,91,1.328,92,0.505,93,0.631,94,0.505,95,0.587,96,0.505,97,0.631,98,0.544,99,0.631,100,0.505,101,0.631,102,0.467,103,0.505,104,0.467,105,0.544,106,0.505,107,0.544,108,0.587,109,0.631,110,0.544,111,0.544,112,0.505,113,0.467,114,0.396,115,0.505,116,1.043,117,0.631,118,0.467,119,0.587,120,1.114,121,1.575,122,0.968,123,0.587,124,0.631,125,0.015,126,0.015,130,1.122,149,1.614,152,1.206,153,1.864,154,1.729,155,1.295,158,2.014,169,0.695,191,1.729,195,1.242,199,1.392,200,1.432,202,2.065,203,2.63,209,1.995,211,0.919,214,3.419,221,1.827,223,2.176,235,0.931,236,1.195,252,1.211,255,1.78,278,1.227,288,1.085,293,2.402,301,1.252,306,1.049,307,0.973,308,0.678,309,0.729,313,1.049,319,1.392,336,0.994,374,0.973,384,1.988,396,1.462,402,2.182,403,2.869,404,2.374,405,2.402,406,2.402,409,2.411,410,2.182,411,2.374,412,2.374,413,2.241,414,4.542,415,4.542,416,3.064,417,4.053,418,4.053,419,2.882,421,2.058,423,1.049,424,4.329,426,1.827,427,1.686,434,3.064,436,1.827,437,3.064,438,3.064,439,3.064,441,2.176,442,3.064,443,3.064,444,2.417,446,2.879,447,2.685,448,2.879,449,2.123,450,3.226,451,3.064,452,2.417,453,3.064,454,3.178,456,3.552,457,3.552,458,2.402,459,2.402,460,2.402,462,3.064,463,3.064,465,2.402,466,1.827,467,1.049,468,1.827,469,3.064,471,1.607,474,1.133,475,2.058,476,2.402,477,2.058,478,3.207,480,2.402,483,2.058,484,1.827,485,2.065,486,1.827,487,2.058,488,1.916,489,2.176,493,1.336,494,1.227,495,1.789,496,1.336,497,1.227,498,1.227,499,1.614,500,1.336,501,1.336,502,1.133,503,1.336,504,2.869,505,2.058,509,2.812,512,1.988,514,2.812,515,1.336,516,3.064,517,2.058,518,3.659,519,3.064,521,3.659,522,1.804,523,1.804,524,1.804,526,2.058,527,3.552,528,1.988,529,2.402,530,2.176,531,2.176,532,3.064,533,3.064,534,3.064,535,2.685,536,2.417,537,2.685,538,2.685,539,2.685,540,3.064,541,3.552,542,3.064,543,3.064,544,3.064,588,1.988,691,1.686,946,2.402,948,2.947,986,3.178,987,2.176,990,2.402,996,3.064,1043,3.078,1060,1.462,1211,1.448,1348,4.329,1444,1.614,1737,3.981,1755,3.064,1756,2.058,1757,2.058,1758,2.058,1759,2.058,1790,2.058,1883,5.44,1884,5.44,1885,3.639,1886,2.445,1887,2.445,1888,2.445,1889,2.445,1890,2.445,1891,2.445,1892,3.639,1893,2.445,1894,2.445,1895,3.639,1896,2.445,1897,2.445,1898,2.445,1899,2.445,1900,2.445,1901,2.445,1902,3.639,1903,4.814,1904,2.445,1905,2.445,1906,4.346,1907,2.445,1908,2.445,1909,2.445,1910,2.445,1911,2.445,1912,2.445,1913,2.445,1914,2.445,1915,2.445]],["title/injectables/ThemeService.html",[364,2.19,882,1.666]],["body/injectables/ThemeService.html",[3,0.386,4,0.302,8,0.343,14,1.032,23,0.302,24,0.679,27,1.909,29,1.236,33,0.873,35,0.476,36,0.029,37,0.343,38,0.5,39,0.523,45,0.753,46,0.753,48,0.685,50,0.625,53,0.386,54,0.076,125,0.02,126,0.02,130,1.29,147,4.332,162,1.729,169,0.954,202,2.788,220,3.3,221,2.51,234,3.688,235,1.011,236,1.121,247,3.688,251,2.731,252,1.032,255,1.849,272,4.209,319,1.234,336,1.032,357,2.544,364,3.3,369,1.539,431,3.207,466,3.129,605,4.209,665,1.88,758,1.653,882,2.51,883,2.544,889,4.114,898,4.332,904,2.51,906,3.688,907,2.844,928,4.114,958,3.688,982,4.332,1035,2.305,1230,4.094,1268,3.245,1271,4.209,1339,3.688,1548,2.844,1916,3.245,1917,5.687,1918,4.999,1919,5.548,1920,5.548,1921,5.871,1922,5.871,1923,4.999,1924,5.871,1925,4.999,1926,6.909,1927,4.999,1928,4.745,1929,3.854,1930,4.681,1931,3.854,1932,4.943,1933,4.999,1934,3.854,1935,3.854,1936,3.854,1937,4.999,1938,5.871,1939,4.999,1940,5.548,1941,3.854,1942,4.999,1943,4.999,1944,3.854,1945,4.999,1946,3.854,1947,3.854,1948,3.854,1949,3.854,1950,3.854,1951,3.854,1952,4.999,1953,5.548,1954,3.854,1955,3.854,1956,3.854,1957,3.854,1958,3.854,1959,4.999,1960,3.854]],["title/classes/UndoRedo.html",[54,0.041,1961,2.448]],["body/classes/UndoRedo.html",[3,0.406,4,0.318,8,0.362,23,0.318,24,0.702,29,0.905,32,1.132,33,0.858,35,0.638,36,0.029,37,0.46,38,0.599,39,0.813,45,0.813,46,0.702,53,0.406,54,0.051,55,1.301,114,0.971,125,0.021,126,0.021,130,1.468,162,1.754,169,0.987,193,3.413,194,4.197,223,4.072,235,1.072,236,0.987,252,1.305,319,1.656,426,2.596,427,2.396,441,3.092,458,3.952,467,2.815,482,3.107,545,1.742,551,3.754,740,5.041,1241,3.552,1286,4.353,1287,3.42,1288,3.42,1340,5.719,1341,5.473,1406,2.997,1451,4.88,1796,4.353,1961,4.418,1962,3.42,1963,4.062,1964,4.062,1965,4.062,1966,6.772,1967,4.062,1968,6.772,1969,5.688,1970,5.688,1971,5.987,1972,4.062,1973,5.17,1974,4.353,1975,4.062,1976,5.17,1977,4.062,1978,5.17,1979,5.17,1980,5.17,1981,4.062,1982,5.688,1983,4.062,1984,4.789,1985,4.062,1986,5.17,1987,4.062,1988,5.17,1989,4.062,1990,4.062]],["title/coverage.html",[1991,3.81]],["body/coverage.html",[0,0.028,1,0.808,8,0.349,9,3.298,10,2.585,11,3.334,36,0.029,38,0.392,54,0.082,70,0.89,76,0.748,79,0.872,81,0.808,83,0.637,85,0.872,87,0.872,88,0.808,90,1.417,92,0.808,94,0.808,96,0.808,98,0.872,100,0.808,102,0.748,104,1.128,105,0.872,106,0.808,107,0.872,110,0.872,112,0.808,114,0.819,115,0.808,118,0.748,120,0.808,125,0.021,126,0.021,127,3.298,128,1.68,129,3.298,211,1.278,229,3.301,252,0.808,356,3.298,364,2.585,392,2.89,394,3.298,395,3.298,396,3.656,423,1.68,471,1.448,495,1.254,502,1.815,546,4.253,634,2.585,735,2.89,736,3.298,737,4.885,782,2.342,823,2.89,824,2.89,882,2.807,884,3.298,885,3.298,894,3.298,924,3.298,925,3.298,926,3.42,1030,2.585,1036,2.89,1080,3.298,1084,3.298,1085,3.298,1120,3.298,1121,3.298,1162,1.815,1169,2.342,1211,1.559,1223,3.298,1226,2.89,1227,3.298,1274,3.298,1349,3.727,1350,3.727,1488,2.89,1500,3.298,1530,2.89,1531,2.89,1562,2.89,1659,3.727,1660,3.727,1717,3.298,1718,3.298,1729,3.298,1730,3.298,1737,2.89,1783,3.298,1784,3.298,1785,3.298,1804,3.298,1883,3.298,1884,3.298,1916,3.298,1961,2.89,1962,3.298,1991,3.298,1992,3.917,1993,3.917,1994,3.298,1995,4.253,1996,3.298,1997,6.114,1998,3.298,1999,2.585,2000,6.902,2001,5.051,2002,3.917,2003,3.917,2004,3.917,2005,3.917,2006,3.917,2007,3.917,2008,3.917,2009,3.917,2010,3.917,2011,3.917,2012,3.917,2013,3.917,2014,3.917,2015,3.917,2016,3.917,2017,3.917,2018,3.917,2019,3.917,2020,3.917,2021,3.917,2022,3.917,2023,3.917,2024,3.917,2025,3.917,2026,3.917,2027,3.917,2028,5.051,2029,3.917,2030,3.917,2031,3.917,2032,4.707,2033,6.575,2034,3.298,2035,5.271,2036,3.298,2037,3.298,2038,3.298,2039,3.298,2040,3.917,2041,3.917,2042,3.917,2043,3.917,2044,3.917,2045,3.917,2046,3.298,2047,3.917,2048,3.917]],["title/dependencies.html",[2049,2.334,2050,3.359]],["body/dependencies.html",[36,0.029,50,0.817,125,0.024,126,0.024,306,2.162,374,2.006,1038,4.244,1039,3.327,1165,3.327,1166,3.894,1290,4.244,1291,4.244,1321,4.244,1337,4.244,1338,4.244,1389,3.719,2050,4.244,2051,5.04,2052,5.899,2053,5.04,2054,6.763,2055,5.04,2056,5.04,2057,5.899,2058,4.967,2059,5.04,2060,5.04,2061,5.04,2062,5.04,2063,5.04,2064,5.04,2065,5.04,2066,5.04,2067,5.04,2068,5.04,2069,5.04,2070,5.04,2071,5.04,2072,5.04,2073,5.04,2074,5.04,2075,5.04]],["title/miscellaneous/enumerations.html",[2076,1.515,2077,3.359]],["body/miscellaneous/enumerations.html",[11,3.607,23,0.348,36,0.029,45,0.602,46,0.949,82,1.043,83,0.444,113,0.847,114,0.719,125,0.022,126,0.022,253,4.56,301,1.526,387,2.928,449,1.641,485,1.903,556,3.273,574,3.273,611,2.356,613,2.653,691,2.056,742,2.743,758,1.903,760,4.032,881,4.032,928,2.928,1030,2.928,1033,3.607,1034,3.607,1069,4.032,1070,4.032,1402,2.928,1497,4.56,1513,3.273,1562,3.273,1564,4.6,1620,4.6,1621,4.6,1622,4.6,1623,4.6,1624,4.6,1625,4.6,1626,4.6,1627,4.6,1630,4.6,1631,4.6,1632,4.6,1634,4.6,1635,4.6,1636,4.6,1731,4.6,1732,4.6,1733,4.6,1734,4.6,1750,4.6,1917,4.985,1928,4.032,1930,4.032,2076,2.424,2077,3.735,2078,6.462,2079,4.436,2080,4.436,2081,6.462,2082,4.6,2083,4.6,2084,4.6,2085,3.735,2086,3.735,2087,4.6,2088,4.6,2089,4.436,2090,4.436,2091,4.6,2092,4.6]],["title/miscellaneous/functions.html",[1312,2.944,2076,1.515]],["body/miscellaneous/functions.html",[4,0.278,23,0.278,32,1.169,35,0.789,36,0.028,37,0.575,38,0.64,39,0.869,45,0.772,46,0.912,82,0.677,83,0.657,125,0.023,126,0.019,130,1.651,191,1.412,199,1.375,200,1.136,206,3.931,211,0.677,221,2.973,229,2.674,235,1.037,236,0.677,252,0.977,295,1.057,301,2.037,369,1.856,427,1.644,446,2.831,449,2.409,452,1.781,467,1.521,471,2.102,486,1.781,549,2.617,556,4.494,557,3.492,558,2.987,574,4.193,576,3.399,585,3.752,588,1.938,600,2.987,601,1.938,611,2.571,613,2.121,615,2.342,616,5.557,617,3.186,622,1.781,684,2.342,686,3.516,691,2.193,726,3.985,737,4.87,738,2.987,742,2.853,758,2.87,759,3.516,760,2.617,800,2.831,823,3.492,824,3.492,840,2.987,881,2.617,887,2.987,969,3.124,1033,4.021,1034,4.021,1039,2.342,1071,2.617,1162,2.193,1175,2.831,1176,3.124,1177,3.124,1228,4.331,1289,4.785,1295,2.987,1307,2.342,1310,3.985,1312,4.193,1402,2.342,1497,3.492,1513,3.492,1530,3.492,1531,3.492,1548,2.617,1928,3.931,1930,4.369,1932,4.785,1995,4.785,2032,2.987,2034,3.985,2035,2.987,2036,3.985,2037,4.485,2038,3.985,2039,3.985,2046,2.987,2076,1.938,2082,2.987,2083,2.987,2084,2.987,2085,3.985,2086,4.985,2087,2.987,2088,2.987,2091,2.987,2092,2.987,2093,6.091,2094,5.327,2095,3.547,2096,3.547,2097,5.921,2098,3.547,2099,3.547,2100,3.547,2101,3.547,2102,3.547,2103,3.547,2104,3.547,2105,3.547,2106,3.547,2107,4.733,2108,3.547,2109,3.547,2110,3.547,2111,3.547,2112,3.547,2113,3.547,2114,4.733,2115,3.547,2116,3.547,2117,3.547,2118,3.547,2119,3.547,2120,3.547,2121,3.547,2122,4.733,2123,3.547,2124,4.733,2125,4.733,2126,4.733,2127,4.733,2128,3.547,2129,3.547,2130,3.547,2131,3.547,2132,3.547,2133,3.547,2134,3.547,2135,3.547,2136,3.547,2137,3.547,2138,3.547,2139,3.547,2140,3.547,2141,3.547]],["title/index.html",[23,0.26,2142,3.318]],["body/index.html",[0,0.024,2,0.994,4,0.349,35,0.551,36,0.022,45,0.606,77,0.852,83,0.446,89,0.994,103,0.921,104,0.852,111,0.994,113,0.852,114,0.889,116,1.07,123,1.07,125,0.022,126,0.022,131,3.292,134,3.756,136,4.045,138,3.756,140,2.945,141,3.292,218,3.756,244,3.756,252,0.921,253,3.292,370,3.702,371,4.087,373,4.045,386,2.945,387,2.945,390,3.756,392,3.292,397,3.756,476,2.945,537,4.38,538,4.045,585,3.619,672,3.756,723,3.756,725,3.756,888,3.292,889,2.945,904,2.24,928,4.087,1039,4.195,1089,3.292,1095,3.292,1244,3.292,1253,3.756,1301,5.213,1314,3.756,1316,3.756,1654,3.756,1709,3.292,1823,4.616,1836,5.448,1974,3.756,1984,3.756,2058,3.756,2143,4.461,2144,5.936,2145,4.461,2146,4.461,2147,4.461,2148,4.461,2149,4.461,2150,4.461,2151,3.756,2152,4.461,2153,4.461,2154,4.461,2155,4.461,2156,4.461,2157,4.461,2158,4.461,2159,4.461,2160,4.461,2161,4.461,2162,4.461,2163,4.461,2164,4.461,2165,4.461,2166,4.461,2167,4.461,2168,4.461,2169,4.461,2170,4.461,2171,4.461,2172,4.461,2173,4.461,2174,4.461,2175,4.461,2176,4.461,2177,5.483,2178,5.936,2179,6.356,2180,6.356,2181,4.461,2182,5.483,2183,4.461,2184,4.461,2185,4.461,2186,4.461,2187,4.461,2188,4.461,2189,4.461,2190,4.461,2191,5.483,2192,5.483,2193,5.936,2194,4.461,2195,4.461,2196,4.461,2197,4.461,2198,4.461,2199,4.461,2200,4.461,2201,4.461,2202,4.461,2203,4.461,2204,4.461,2205,4.461,2206,4.461,2207,5.483,2208,4.461,2209,4.461,2210,4.461,2211,4.461,2212,5.483,2213,6.191,2214,4.461,2215,4.461,2216,4.461,2217,4.461,2218,4.461,2219,4.461,2220,4.461,2221,3.292,2222,4.461]],["title/modules.html",[2223,3.81]],["body/modules.html",[36,0.025,125,0.025,126,0.025,2223,4.569]],["title/overview.html",[2221,3.339]],["body/overview.html",[2,1.199,36,0.025,125,0.025,126,0.025,211,1.028,290,3.973,545,2.309,784,4.533,883,3.554,1211,2.143,2221,3.973]],["title/properties.html",[24,0.542,2049,2.334]],["body/properties.html",[24,0.734,36,0.026,125,0.025,126,0.025,2224,5.408,2225,5.408]],["title/routes.html",[1999,2.987]],["body/routes.html",[36,0.025,125,0.025,126,0.025,1999,3.582]],["title/miscellaneous/variables.html",[1307,2.634,2076,1.515]],["body/miscellaneous/variables.html",[0,0.028,23,0.35,36,0.029,38,0.55,45,0.746,46,0.746,70,0.788,77,1.049,81,1.134,82,1.049,87,1.223,88,0.923,89,0.996,92,0.923,94,0.923,95,1.073,96,0.923,98,0.996,100,0.923,102,0.854,103,0.923,104,0.854,110,0.996,111,0.996,112,0.923,113,0.854,114,0.725,115,0.923,118,0.854,120,0.923,121,1.073,122,1.223,125,0.023,126,0.023,200,1.318,227,2.953,381,3.301,384,3,386,2.953,387,3.625,1081,3.767,1175,2.675,1307,2.953,1994,3.767,1996,4.624,1998,3.767,1999,3.923,2076,2.444,2151,3.767,2226,4.474,2227,4.474,2228,4.474,2229,4.474,2230,4.474,2231,4.474,2232,4.474,2233,5.943,2234,4.474,2235,4.474,2236,4.474,2237,4.474,2238,5.492,2239,4.474,2240,4.474,2241,4.474,2242,4.474,2243,4.474,2244,4.474,2245,4.474,2246,4.474,2247,4.474,2248,4.474,2249,4.474,2250,4.474,2251,4.474,2252,4.474,2253,6.872,2254,5.492,2255,4.474,2256,4.474,2257,4.474]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":211,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["0.0.0",{"_index":2225,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":1167,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["0.1",{"_index":284,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.15.0",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":285,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.5",{"_index":286,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["0.75",{"_index":287,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["0.79",{"_index":1154,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["0/1",{"_index":1997,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2010,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2016,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1993,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2008,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2009,"title":{},"body":{"coverage.html":{}}}],["0?cell",{"_index":67,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["1",{"_index":195,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["1)/2",{"_index":65,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["1/1",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":2013,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2015,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":290,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"overview.html":{}}}],["100",{"_index":2000,"title":{},"body":{"coverage.html":{}}}],["1003",{"_index":1611,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["1050",{"_index":1158,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["120",{"_index":1181,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["128",{"_index":1330,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["13",{"_index":1606,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["13/24",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2014,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":47,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["15/15",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1189,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["159",{"_index":1610,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["16",{"_index":491,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{}}}],["16/16",{"_index":2002,"title":{},"body":{"coverage.html":{}}}],["162d59",{"_index":1178,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["18/18",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["19.2.0",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["19.2.19",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["1][col",{"_index":1728,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["2",{"_index":288,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["2.0.2",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":784,"title":{},"body":{"classes/BitmapRenderer.html":{},"overview.html":{}}}],["200",{"_index":1180,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["201",{"_index":1197,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["22",{"_index":1607,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["222",{"_index":776,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["23/23",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1597,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["244",{"_index":2133,"title":{},"body":{"miscellaneous/functions.html":{}}}],["248",{"_index":2132,"title":{},"body":{"miscellaneous/functions.html":{}}}],["25",{"_index":1255,"title":{},"body":{"injectables/HistoryService.html":{},"components/KernelDialogComponent.html":{}}}],["25/25",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":280,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["255",{"_index":191,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["256",{"_index":1599,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["26/26",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2129,"title":{},"body":{"miscellaneous/functions.html":{}}}],["27/27",{"_index":2007,"title":{},"body":{"coverage.html":{}}}],["280",{"_index":1187,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["2d",{"_index":548,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["3",{"_index":1211,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["3.0.0",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1485,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["30/30",{"_index":2001,"title":{},"body":{"coverage.html":{}}}],["31",{"_index":2130,"title":{},"body":{"miscellaneous/functions.html":{}}}],["31/31",{"_index":2012,"title":{},"body":{"coverage.html":{}}}],["32",{"_index":1688,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["36",{"_index":1598,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["3x3",{"_index":1617,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["4",{"_index":278,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["4.0.0",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["4.11.0",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":528,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["401",{"_index":1196,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["404",{"_index":1793,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["40?'30px':'0",{"_index":1492,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["40?\\'30px\\':\\'0",{"_index":1498,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["49",{"_index":1604,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["5",{"_index":289,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["5/5",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":482,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["501",{"_index":1193,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["54",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":1608,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["59/59",{"_index":2006,"title":{},"body":{"coverage.html":{}}}],["5x5",{"_index":1628,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["6",{"_index":1596,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["60",{"_index":1613,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["601",{"_index":1194,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["636363ff",{"_index":1771,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["650px",{"_index":1045,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["66",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1647,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["7.8.0",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["74777f",{"_index":764,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["75",{"_index":1895,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["750",{"_index":1156,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["7x7",{"_index":1633,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["8",{"_index":1586,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["8/8",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1182,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["9",{"_index":473,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["9/9",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["97",{"_index":1609,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["_",{"_index":59,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["_borderpoints",{"_index":1122,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_currentspeedindex",{"_index":163,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_dist",{"_index":1123,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_divider",{"_index":1501,"title":{},"body":{"classes/Kernel.html":{}}}],["_dragarea",{"_index":689,"title":{},"body":{"classes/Bitmap.html":{}}}],["_frameid",{"_index":1124,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_height",{"_index":561,"title":{},"body":{"classes/Bitmap.html":{}}}],["_id",{"_index":407,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["_interval",{"_index":164,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_kernel",{"_index":1502,"title":{},"body":{"classes/Kernel.html":{}}}],["_matrix",{"_index":562,"title":{},"body":{"classes/Bitmap.html":{}}}],["_medial",{"_index":1125,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_medialpointsbfsqueue",{"_index":1126,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_medialpointsvisited",{"_index":1127,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["_selected",{"_index":688,"title":{},"body":{"classes/Bitmap.html":{}}}],["_size",{"_index":1503,"title":{},"body":{"classes/Kernel.html":{}}}],["_speeds",{"_index":165,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_storagekey",{"_index":890,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["_timeoutid",{"_index":166,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["_width",{"_index":563,"title":{},"body":{"classes/Bitmap.html":{}}}],["a.votes",{"_index":1481,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["above",{"_index":851,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["absolute",{"_index":1495,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["access",{"_index":430,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{}}}],["accessed",{"_index":1305,"title":{},"body":{"components/HomeComponent.html":{}}}],["accessing",{"_index":549,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["accessors",{"_index":571,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["accumulator",{"_index":15,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["accumulator.length",{"_index":64,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["accumulator[0",{"_index":60,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["accumulatordialogcomponent",{"_index":1,"title":{"components/AccumulatorDialogComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["action",{"_index":1237,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["actions",{"_index":540,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["activated",{"_index":429,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["activatedroute",{"_index":421,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["actual_component",{"_index":124,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["add",{"_index":1242,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{}}}],["add(other",{"_index":1816,"title":{},"body":{"classes/Point.html":{}}}],["added",{"_index":2100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":671,"title":{},"body":{"classes/Bitmap.html":{}}}],["address",{"_index":1797,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["adds",{"_index":675,"title":{},"body":{"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["addtohistory",{"_index":1231,"title":{},"body":{"injectables/HistoryService.html":{}}}],["addtohistory(action",{"_index":1235,"title":{},"body":{"injectables/HistoryService.html":{}}}],["adjustment",{"_index":139,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["advanced",{"_index":1294,"title":{},"body":{"components/HomeComponent.html":{}}}],["advances",{"_index":961,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["afterviewinit",{"_index":1160,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["against",{"_index":815,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["algorithm",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["algorithms",{"_index":2155,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":2119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allows",{"_index":140,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["along",{"_index":1652,"title":{},"body":{"classes/Line.html":{}}}],["alpha",{"_index":1213,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["analysis",{"_index":2157,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1039,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/cdk",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":306,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":307,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/card",{"_index":308,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/checkbox",{"_index":500,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/dialog",{"_index":52,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["angular/material/divider",{"_index":499,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/form",{"_index":497,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/icon",{"_index":309,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/input",{"_index":310,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["angular/material/list",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["angular/material/menu",{"_index":311,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["angular/material/select",{"_index":312,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["angular/material/sidenav",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/material/slider",{"_index":313,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["angular/material/tabs",{"_index":1390,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["angular/material/toolbar",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/platform",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":170,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["animation",{"_index":77,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["animation'},{'name",{"_index":91,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["animation.component.css",{"_index":932,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.html",{"_index":931,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts",{"_index":926,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animation.component.ts:105",{"_index":1741,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:106",{"_index":992,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:118",{"_index":1739,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:124",{"_index":1367,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:126",{"_index":995,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:134",{"_index":960,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:164",{"_index":1358,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:165",{"_index":1138,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:167",{"_index":988,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:169",{"_index":1746,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:175",{"_index":970,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:180",{"_index":1140,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:186",{"_index":1371,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:187",{"_index":1382,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:188",{"_index":1370,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:19",{"_index":1153,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:191",{"_index":965,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:196",{"_index":1744,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:20",{"_index":1159,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:200",{"_index":1144,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:205",{"_index":999,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:21",{"_index":1157,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:217",{"_index":981,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:23",{"_index":1155,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:233",{"_index":976,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:25",{"_index":1150,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:255",{"_index":1359,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:258",{"_index":1360,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:261",{"_index":1363,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:265",{"_index":1368,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:278",{"_index":1365,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:28",{"_index":1145,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:287",{"_index":1366,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:29",{"_index":1146,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:297",{"_index":1657,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:298",{"_index":1658,"title":{},"body":{"classes/Line.html":{}}}],["animation.component.ts:30",{"_index":1148,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:31",{"_index":1147,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:32",{"_index":1149,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:33",{"_index":1137,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:38",{"_index":1142,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:41",{"_index":1749,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:43",{"_index":1748,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:45",{"_index":1752,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:46",{"_index":1373,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:47",{"_index":1378,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:48",{"_index":1374,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:49",{"_index":1002,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:51",{"_index":1005,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:52",{"_index":1377,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:53",{"_index":1014,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:54",{"_index":1383,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:55",{"_index":1380,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:56",{"_index":1381,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:57",{"_index":1026,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:58",{"_index":1379,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:59",{"_index":1004,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:60",{"_index":1372,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:61",{"_index":1376,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:62",{"_index":1007,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:64",{"_index":1025,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:66",{"_index":1015,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:68",{"_index":1009,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:71",{"_index":1747,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:72",{"_index":1364,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["animation.component.ts:73",{"_index":1013,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:74",{"_index":1141,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:75",{"_index":1021,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:77",{"_index":1022,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:79",{"_index":1024,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:81",{"_index":1018,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:83",{"_index":1016,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:86",{"_index":1143,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["animation.component.ts:88",{"_index":953,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["animation.component.ts:92",{"_index":1745,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation.component.ts:99",{"_index":1743,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["animation/convolutional",{"_index":925,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["animation/grassfire",{"_index":1121,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"coverage.html":{}}}],["animation/hough",{"_index":1350,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["animation/median",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["animation/morphological",{"_index":1730,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["animationcontrollercomponent",{"_index":76,"title":{"components/AnimationControllerComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["animationelements",{"_index":1168,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["animationindex",{"_index":933,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["another",{"_index":1818,"title":{},"body":{"classes/Point.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["app.component.css",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":79,"title":{"components/AppComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":928,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["applicationconfig",{"_index":2228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applied",{"_index":969,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["appliedbitmap",{"_index":1735,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["applies",{"_index":615,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply",{"_index":617,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["apply(apply",{"_index":1740,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["apply(bitmap",{"_index":1512,"title":{},"body":{"classes/Kernel.html":{}}}],["applyfilter",{"_index":942,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applyfilter(length",{"_index":963,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["applying",{"_index":613,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["area",{"_index":636,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["area.ts",{"_index":1085,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["area.ts:10",{"_index":1096,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:12",{"_index":1105,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:14",{"_index":1102,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:20",{"_index":1109,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:32",{"_index":1107,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:6",{"_index":1104,"title":{},"body":{"classes/DragArea.html":{}}}],["area.ts:8",{"_index":1097,"title":{},"body":{"classes/DragArea.html":{}}}],["around",{"_index":984,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["array",{"_index":552,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{}}}],["array(5).fill(array(5).fill(1",{"_index":1594,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["array(7).fill(array(7).fill(1",{"_index":1603,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["array(math.ceil(256",{"_index":729,"title":{},"body":{"classes/Bitmap.html":{}}}],["array(thetas.length).fill(0",{"_index":1452,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(new",{"_index":1454,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(thetas.length).fill(point.zero",{"_index":1456,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["array(width).fill(defaultvalue",{"_index":642,"title":{},"body":{"classes/Bitmap.html":{}}}],["array.from",{"_index":641,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{}}}],["array.from(this._selected).map(pos",{"_index":696,"title":{},"body":{"classes/Bitmap.html":{}}}],["arrow_back",{"_index":1799,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["artifacts",{"_index":2202,"title":{},"body":{"index.html":{}}}],["asterisk",{"_index":1078,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["async",{"_index":1133,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["auto",{"_index":1076,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["automatically",{"_index":2186,"title":{},"body":{"index.html":{}}}],["available",{"_index":1984,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["axis",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["b",{"_index":1479,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["b(x",{"_index":1308,"title":{},"body":{"components/HomeComponent.html":{}}}],["b(y",{"_index":1326,"title":{},"body":{"components/HomeComponent.html":{}}}],["b.votes",{"_index":1480,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["back",{"_index":457,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["background",{"_index":770,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["backward",{"_index":266,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["base",{"_index":1071,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":221,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["beginning",{"_index":274,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["begin{bmatrix",{"_index":1551,"title":{},"body":{"classes/Kernel.html":{}}}],["behavior",{"_index":218,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["being",{"_index":468,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["believe",{"_index":1803,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["better",{"_index":803,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["between",{"_index":1339,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"injectables/ThemeService.html":{}}}],["binary",{"_index":82,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["binarybitmapeditorcomponent",{"_index":81,"title":{"components/BinaryBitmapEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmap",{"_index":83,"title":{"classes/Bitmap.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bitmap'},{'name",{"_index":86,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap.cells().foreach(p",{"_index":1457,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.dragarea.button",{"_index":845,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.get(row",{"_index":838,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.getbinary(p",{"_index":1458,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap.height",{"_index":511,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmap.isdragged(cell",{"_index":831,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.down",{"_index":865,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.left",{"_index":871,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.right",{"_index":875,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isout(cell.up",{"_index":855,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.isselected(cell",{"_index":833,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["bitmap.width",{"_index":1450,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["bitmap/bitmap.component",{"_index":493,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["bitmap_storage",{"_index":422,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapcomponent",{"_index":85,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmapcomponenttick",{"_index":408,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["bitmapeditorcomponent",{"_index":87,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bitmapkey",{"_index":934,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmaprenderer",{"_index":735,"title":{"classes/BitmapRenderer.html":{}},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["bitmaps",{"_index":398,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorage",{"_index":952,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["bitmapstorageservice",{"_index":423,"title":{"injectables/BitmapStorageService.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["bitmaptick",{"_index":1352,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["black",{"_index":399,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["blank",{"_index":442,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["blur",{"_index":1642,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["body",{"_index":1548,"title":{},"body":{"classes/Kernel.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["body.classlist.add(`${theme",{"_index":1957,"title":{},"body":{"injectables/ThemeService.html":{}}}],["body.classlist.remove('light",{"_index":1956,"title":{},"body":{"injectables/ThemeService.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["bordercolor",{"_index":1433,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["borderpoints",{"_index":1661,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["both",{"_index":1244,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Point.html":{},"index.html":{}}}],["bottom",{"_index":862,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["boundaries",{"_index":1012,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["bounds",{"_index":557,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":1641,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["boxblur3x3",{"_index":1623,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["boxblur5x5",{"_index":1630,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["boxblur7x7",{"_index":1634,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bp",{"_index":1689,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["bp[0",{"_index":1707,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["bp[1",{"_index":1692,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["break",{"_index":1699,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["browser",{"_index":2058,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":537,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["buildthis",{"_index":2200,"title":{},"body":{"index.html":{}}}],["built",{"_index":1314,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["button",{"_index":1090,"title":{},"body":{"classes/DragArea.html":{}}}],["buttons",{"_index":451,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["c",{"_index":646,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["c1cce5",{"_index":767,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["calculated",{"_index":720,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculatematanimationelements",{"_index":1667,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["calculates",{"_index":719,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculating",{"_index":682,"title":{},"body":{"classes/Bitmap.html":{}}}],["calculations",{"_index":1300,"title":{},"body":{"components/HomeComponent.html":{}}}],["cancel",{"_index":541,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cancelanimationframe(this._frameid",{"_index":1716,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["cansave",{"_index":414,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["canvas",{"_index":741,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.getcontext('2d",{"_index":1171,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.height",{"_index":1173,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvas.width",{"_index":1172,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvasref",{"_index":1128,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["canvasrenderingcontext2d",{"_index":788,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["catch",{"_index":923,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["ccc",{"_index":785,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ceil",{"_index":2092,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["cell",{"_index":66,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cell.col",{"_index":647,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cell.row",{"_index":654,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["cellclicked)=\"oncellclicked($event",{"_index":1077,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["cellclicked)=\"oncellentered($event",{"_index":533,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cellentered)=\"oncellentered($event",{"_index":532,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cells",{"_index":564,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["center",{"_index":877,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["centered",{"_index":983,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["change",{"_index":1982,"title":{},"body":{"classes/UndoRedo.html":{}}}],["changes",{"_index":147,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["chart",{"_index":1353,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart(ctx",{"_index":1395,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["chart.js",{"_index":1389,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"dependencies.html":{}}}],["chart.register(linecontroller",{"_index":1392,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["check",{"_index":622,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":555,"title":{},"body":{"classes/Bitmap.html":{}}}],["checks",{"_index":436,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["chroma",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["chroma.js",{"_index":2127,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":54,"title":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["classes",{"_index":545,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{},"overview.html":{}}}],["classroom",{"_index":2174,"title":{},"body":{"index.html":{}}}],["cleaning_services",{"_index":527,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["cleans",{"_index":242,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["clear",{"_index":415,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clearhistory",{"_index":1232,"title":{},"body":{"injectables/HistoryService.html":{}}}],["clears",{"_index":441,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/HistoryService.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["clearselection",{"_index":717,"title":{},"body":{"classes/Bitmap.html":{}}}],["cleartimeout(this._timeoutid",{"_index":343,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["cli",{"_index":2193,"title":{},"body":{"index.html":{}}}],["click",{"_index":987,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clicked",{"_index":990,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["clip",{"_index":1436,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["clipboard",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{}}}],["clipping",{"_index":2087,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["clone",{"_index":1504,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["clone._divider",{"_index":1540,"title":{},"body":{"classes/Kernel.html":{}}}],["close",{"_index":1565,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["closing",{"_index":1734,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":2191,"title":{},"body":{"index.html":{}}}],["col",{"_index":655,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MatrixDisplayComponent.html":{},"classes/Point.html":{}}}],["colindex",{"_index":1543,"title":{},"body":{"classes/Kernel.html":{}}}],["color",{"_index":758,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale",{"_index":742,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["colorscale.binary",{"_index":1375,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["colorscale.grayscale",{"_index":756,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["column",{"_index":597,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["columns",{"_index":581,"title":{},"body":{"classes/Bitmap.html":{}}}],["command",{"_index":2213,"title":{},"body":{"index.html":{}}}],["commit",{"_index":539,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["compare",{"_index":1826,"title":{},"body":{"classes/Point.html":{}}}],["comparison",{"_index":1020,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["compile",{"_index":2201,"title":{},"body":{"index.html":{}}}],["complete",{"_index":2196,"title":{},"body":{"index.html":{}}}],["complex",{"_index":1322,"title":{},"body":{"components/HomeComponent.html":{}}}],["compodocadditional",{"_index":2216,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":73,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"overview.html":{}}}],["compute",{"_index":980,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["computes",{"_index":977,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["concepts",{"_index":2150,"title":{},"body":{"index.html":{}}}],["considered",{"_index":600,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["console.log(x",{"_index":1702,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["const",{"_index":665,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["constants",{"_index":1310,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["constructor(bitmapstorage",{"_index":1738,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["constructor(dialog",{"_index":950,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["constructor(dialogref",{"_index":30,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["constructor(limit",{"_index":1972,"title":{},"body":{"classes/UndoRedo.html":{}}}],["constructor(ngzone",{"_index":1135,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["constructor(private",{"_index":55,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["constructor(public",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["constructor(rho",{"_index":1656,"title":{},"body":{"classes/Line.html":{}}}],["constructor(route",{"_index":420,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["constructor(router",{"_index":1790,"title":{},"body":{"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["constructor(row",{"_index":1810,"title":{},"body":{"classes/Point.html":{}}}],["constructor(size",{"_index":1507,"title":{},"body":{"classes/Kernel.html":{}}}],["constructor(themeservice",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(width",{"_index":572,"title":{},"body":{"classes/Bitmap.html":{}}}],["constructor(x",{"_index":1662,"title":{},"body":{"classes/MATAnimationElement.html":{}}}],["containing",{"_index":452,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":2118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["context",{"_index":792,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["continue",{"_index":835,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["continuously",{"_index":144,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["contrasting",{"_index":2123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control",{"_index":142,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller",{"_index":151,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller'},{'name",{"_index":78,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["controller.component",{"_index":1028,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["controller.component.css",{"_index":161,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.html",{"_index":160,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts",{"_index":129,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:104",{"_index":277,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:111",{"_index":268,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:117",{"_index":270,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:124",{"_index":271,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:133",{"_index":256,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:138",{"_index":261,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:143",{"_index":237,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:147",{"_index":240,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:156",{"_index":219,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:172",{"_index":241,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":296,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:38",{"_index":297,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:40",{"_index":300,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:43",{"_index":201,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:46",{"_index":196,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:48",{"_index":192,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:50",{"_index":208,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:52",{"_index":204,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:55",{"_index":212,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:57",{"_index":213,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:62",{"_index":292,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:64",{"_index":291,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:66",{"_index":279,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:68",{"_index":281,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:73",{"_index":246,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:81",{"_index":250,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:91",{"_index":267,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller.component.ts:98",{"_index":264,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["controller/animation",{"_index":128,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["controls",{"_index":132,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{}}}],["convert",{"_index":606,"title":{},"body":{"classes/Bitmap.html":{}}}],["converts",{"_index":1844,"title":{},"body":{"classes/Point.html":{}}}],["convolution",{"_index":974,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["convolutional",{"_index":89,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["convolutionalfilteranimationcomponent",{"_index":88,"title":{"components/ConvolutionalFilterAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coordinate",{"_index":801,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/Point.html":{}}}],["coordinates",{"_index":806,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["copied",{"_index":1343,"title":{},"body":{"components/HomeComponent.html":{}}}],["copies",{"_index":579,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["copy",{"_index":584,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["corresponding",{"_index":605,"title":{},"body":{"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["cos",{"_index":1318,"title":{},"body":{"components/HomeComponent.html":{}}}],["counter",{"_index":479,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["course",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1991,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1320,"title":{},"body":{"components/HomeComponent.html":{}}}],["creatediagonalpattern",{"_index":746,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creatediagonalpattern(size",{"_index":778,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["creates",{"_index":426,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["crossword",{"_index":1780,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["css",{"_index":1932,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["csv",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{}}}],["ctrl",{"_index":1099,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["ctrlkey",{"_index":1091,"title":{},"body":{"classes/DragArea.html":{}}}],["ctx",{"_index":791,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.beginpath",{"_index":857,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.closepath",{"_index":1185,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(120",{"_index":1190,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(200",{"_index":1179,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(280",{"_index":1186,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(290",{"_index":1188,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(bp[0",{"_index":1691,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(element.x",{"_index":1682,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.ellipse(x",{"_index":1703,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fill",{"_index":1184,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(10",{"_index":1192,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(350",{"_index":1195,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(math.round((col",{"_index":850,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.fillrect(padding",{"_index":1191,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillrect(x",{"_index":1200,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.fillstyle",{"_index":836,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.getimagedata(0",{"_index":1206,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.imagesmoothingenabled",{"_index":1174,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.linejoin",{"_index":880,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(((col",{"_index":860,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.lineto(math.round((col",{"_index":867,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.linewidth",{"_index":1681,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.moveto(((col",{"_index":858,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.moveto(math.round((col",{"_index":866,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.stroke",{"_index":861,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.strokestyle",{"_index":837,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ctx.textalign",{"_index":876,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ctx.textbaseline",{"_index":878,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["current",{"_index":202,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["currently",{"_index":298,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{}}}],["cursor",{"_index":808,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["custom",{"_index":2099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cvreadypromise",{"_index":1164,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["d",{"_index":1222,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["dane",{"_index":1203,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["dark",{"_index":1930,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["dark)').matches",{"_index":1950,"title":{},"body":{"injectables/ThemeService.html":{}}}],["darkpattern",{"_index":842,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["data",{"_index":26,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["data[idx",{"_index":1210,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["datapoints",{"_index":1420,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datapoints.map(p",{"_index":1426,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["datasets",{"_index":1396,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["dc",{"_index":1673,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["declarecustomfunctions",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["declarecustomfunctions(parser",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declares",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["decreases",{"_index":257,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["deeper",{"_index":2164,"title":{},"body":{"index.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulting",{"_index":1927,"title":{},"body":{"injectables/ThemeService.html":{}}}],["defaultvalue",{"_index":574,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["demonstrations",{"_index":2175,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2050,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":130,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["deselecting",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{}}}],["deselects",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{}}}],["designed",{"_index":2147,"title":{},"body":{"index.html":{}}}],["destination",{"_index":964,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.isout(pixel.cell",{"_index":1776,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destination.set(pixel.cell",{"_index":1778,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["destroyed",{"_index":245,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["detailed",{"_index":2218,"title":{},"body":{"index.html":{}}}],["details",{"_index":454,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["detect",{"_index":1640,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["determines",{"_index":2122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["development",{"_index":2177,"title":{},"body":{"index.html":{}}}],["devicepixelratio",{"_index":1398,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diaglen",{"_index":1466,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["diagonal",{"_index":781,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["dialog",{"_index":16,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["dialog'},{'name",{"_index":75,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["dialog.component",{"_index":1031,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["dialog.component.css",{"_index":22,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialog.component.html",{"_index":20,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialog.component.ts",{"_index":11,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dialog.component.ts:13",{"_index":41,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":34,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:158",{"_index":1569,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":44,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["dialog.component.ts:162",{"_index":1572,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1574,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1575,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1576,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1578,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1568,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1573,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":1571,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["dialog/accumulator",{"_index":10,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["dialog/kernel",{"_index":1030,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dialogref",{"_index":40,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1049,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["dialogs/accumulator",{"_index":1391,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["dialogs/kernel",{"_index":1029,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["difference",{"_index":1754,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["different",{"_index":253,"title":{},"body":{"components/AnimationControllerComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["dilation",{"_index":1731,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dimensions",{"_index":559,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":71,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["directives",{"_index":123,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["directory",{"_index":2203,"title":{},"body":{"index.html":{}}}],["disableclose",{"_index":1046,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display",{"_index":485,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display'},{'name",{"_index":109,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["display.component",{"_index":1037,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["display.component.css",{"_index":1720,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.html",{"_index":1719,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts",{"_index":1718,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:11",{"_index":1723,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display.component.ts:13",{"_index":1724,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["display/matrix",{"_index":1036,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["displayed",{"_index":203,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["displaying",{"_index":1017,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["dist",{"_index":1709,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"index.html":{}}}],["divider",{"_index":1506,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["divider(value",{"_index":1534,"title":{},"body":{"classes/Kernel.html":{}}}],["docs",{"_index":1081,"title":{},"body":{"components/DocsComponent.html":{},"miscellaneous/variables.html":{}}}],["docs'},{'name",{"_index":93,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["docs.component.css",{"_index":1083,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.html",{"_index":1082,"title":{},"body":{"components/DocsComponent.html":{}}}],["docscomponent",{"_index":92,"title":{"components/DocsComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["document's",{"_index":2141,"title":{},"body":{"miscellaneous/functions.html":{}}}],["document.body",{"_index":1955,"title":{},"body":{"injectables/ThemeService.html":{}}}],["document.getelementbyid('bitmapchart",{"_index":1393,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["documentation",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["down",{"_index":1806,"title":{},"body":{"classes/Point.html":{}}}],["dr",{"_index":1674,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drag",{"_index":635,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["drag_area",{"_index":695,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragarea",{"_index":634,"title":{"classes/DragArea.html":{}},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"coverage.html":{}}}],["dragarea(drag_area",{"_index":694,"title":{},"body":{"classes/Bitmap.html":{}}}],["dragend",{"_index":1092,"title":{},"body":{"classes/DragArea.html":{}}}],["draggable",{"_index":1086,"title":{},"body":{"classes/DragArea.html":{}}}],["dragged",{"_index":700,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragging",{"_index":674,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["dragstart",{"_index":1093,"title":{},"body":{"classes/DragArea.html":{}}}],["draw",{"_index":794,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawanimationelement",{"_index":1860,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["drawanimationelement(index",{"_index":1677,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawcircle",{"_index":1693,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawfirefront",{"_index":1130,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["drawfirefront(animationindex",{"_index":1139,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["drawgrid",{"_index":747,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawgrid(ctx",{"_index":787,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawing",{"_index":766,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawmedialaxis",{"_index":1131,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawn",{"_index":763,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["draws",{"_index":790,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstartshape",{"_index":1132,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["drawstring",{"_index":748,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["drawstring(ctx",{"_index":795,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["duplicates",{"_index":1239,"title":{},"body":{"injectables/HistoryService.html":{}}}],["during",{"_index":1101,"title":{},"body":{"classes/DragArea.html":{}}}],["dx",{"_index":1706,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["dy",{"_index":1708,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["dynamic",{"_index":1321,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["e.g",{"_index":2137,"title":{},"body":{"miscellaneous/functions.html":{}}}],["each",{"_index":484,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["edge",{"_index":1070,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edgedetect3x3",{"_index":1622,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit",{"_index":994,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["edit/:id",{"_index":2254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edited",{"_index":469,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editing",{"_index":397,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"index.html":{}}}],["editor",{"_index":122,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'name",{"_index":84,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.css",{"_index":406,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.html",{"_index":405,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts",{"_index":396,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:104",{"_index":1887,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:106",{"_index":464,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":1893,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:117",{"_index":1886,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:122",{"_index":1890,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:125",{"_index":1865,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:130",{"_index":1894,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:159",{"_index":1866,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:19",{"_index":1879,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1882,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:21",{"_index":1881,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:23",{"_index":1880,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:244",{"_index":1870,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":1878,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:26",{"_index":1877,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":1872,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":1873,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:30",{"_index":1875,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":1874,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:32",{"_index":1876,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:322",{"_index":1863,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":1862,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:336",{"_index":1871,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:342",{"_index":1663,"title":{},"body":{"classes/MATAnimationElement.html":{}}}],["editor.component.ts:343",{"_index":1664,"title":{},"body":{"classes/MATAnimationElement.html":{}}}],["editor.component.ts:35",{"_index":475,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":477,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":1868,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":1898,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":483,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":490,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":487,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":1897,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":492,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":1896,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":481,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":1899,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":425,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":1885,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":445,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:73",{"_index":1889,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:74",{"_index":1867,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":440,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:83",{"_index":1869,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":1888,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:86",{"_index":1864,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["editor.component.ts:88",{"_index":461,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:92",{"_index":1891,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["editor.component.ts:94",{"_index":435,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":455,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["editor/binary",{"_index":395,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/bitmap",{"_index":2004,"title":{},"body":{"coverage.html":{}}}],["editor/shape",{"_index":1660,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["editor/structuring",{"_index":1884,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["educational",{"_index":2145,"title":{},"body":{"index.html":{}}}],["effect",{"_index":304,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["effects",{"_index":1303,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":70,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["element.borderpoints",{"_index":1690,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["element.r",{"_index":1684,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["element.y",{"_index":1683,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["elementref",{"_index":1151,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["emits",{"_index":254,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["emitted",{"_index":215,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["enabled",{"_index":227,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/variables.html":{}}}],["enabling",{"_index":1293,"title":{},"body":{"components/HomeComponent.html":{}}}],["end",{"_index":276,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/DragArea.html":{}}}],["ending",{"_index":1103,"title":{},"body":{"classes/DragArea.html":{}}}],["endpoints",{"_index":1655,"title":{},"body":{"classes/Line.html":{}}}],["end{bmatrix",{"_index":1552,"title":{},"body":{"classes/Kernel.html":{}}}],["ensure",{"_index":2117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ensuring",{"_index":1238,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enter",{"_index":447,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/KernelDialogComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entered",{"_index":453,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["entries",{"_index":1257,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enum",{"_index":1616,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["enumeration",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2077,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumerator",{"_index":1721,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["enums",{"_index":637,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/Kernel.html":{}}}],["eps",{"_index":1129,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["equal",{"_index":1079,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["equals",{"_index":1807,"title":{},"body":{"classes/Point.html":{}}}],["equals(other",{"_index":1824,"title":{},"body":{"classes/Point.html":{}}}],["equivalent",{"_index":1333,"title":{},"body":{"components/HomeComponent.html":{}}}],["erosion",{"_index":1732,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":1704,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["eval",{"_index":1291,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["evaluate",{"_index":2125,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":214,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["event.cell",{"_index":1905,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["eventcoalescing",{"_index":2231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["events",{"_index":448,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["example",{"_index":1836,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["examples",{"_index":1324,"title":{},"body":{"components/HomeComponent.html":{}}}],["exceeds",{"_index":1979,"title":{},"body":{"classes/UndoRedo.html":{}}}],["execute",{"_index":2208,"title":{},"body":{"index.html":{}}}],["exists",{"_index":460,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["experiment",{"_index":2159,"title":{},"body":{"index.html":{}}}],["exploring",{"_index":2153,"title":{},"body":{"index.html":{}}}],["export",{"_index":53,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["expr",{"_index":1290,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["expression",{"_index":1228,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"miscellaneous/functions.html":{}}}],["expressions",{"_index":1254,"title":{},"body":{"injectables/HistoryService.html":{},"components/HomeComponent.html":{}}}],["expressionvalidator",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":670,"title":{},"body":{"classes/Bitmap.html":{}}}],["external",{"_index":207,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["factor",{"_index":793,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["false",{"_index":295,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["fast",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["faster",{"_index":303,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["fcf8f9",{"_index":1198,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["features",{"_index":672,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["field",{"_index":498,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{}}}],["files",{"_index":2190,"title":{},"body":{"index.html":{}}}],["fillcolor",{"_index":839,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["filter",{"_index":90,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":968,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filteredbitmap",{"_index":935,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filtering",{"_index":1008,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["filters",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["find",{"_index":1794,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["first",{"_index":198,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{}}}],["first_page",{"_index":344,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["flippeddata",{"_index":1425,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["floor",{"_index":2091,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["following",{"_index":2212,"title":{},"body":{"index.html":{}}}],["fontset",{"_index":2247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["for(let",{"_index":660,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["format",{"_index":686,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["forms",{"_index":2105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":158,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["formulas",{"_index":1297,"title":{},"body":{"components/HomeComponent.html":{}}}],["forward",{"_index":269,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["forward/backward",{"_index":137,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["found",{"_index":899,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/PageNotFoundComponent.html":{}}}],["found'},{'name",{"_index":117,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["found.component.css",{"_index":1788,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.html",{"_index":1787,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":1785,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:21",{"_index":1791,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:26",{"_index":1792,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":1784,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["frame",{"_index":143,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["frequency",{"_index":233,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["friendly",{"_index":2170,"title":{},"body":{"index.html":{}}}],["full",{"_index":2257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":229,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":676,"title":{},"body":{"classes/Bitmap.html":{}}}],["functions",{"_index":1312,"title":{"miscellaneous/functions.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["fundamental",{"_index":2166,"title":{},"body":{"index.html":{}}}],["gain",{"_index":2163,"title":{},"body":{"index.html":{}}}],["gaussian",{"_index":1643,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["gaussianblur3x3",{"_index":1624,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gaussianblur5x5",{"_index":1631,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gaussianblur7x7",{"_index":1635,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1301,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["generates",{"_index":971,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["generic",{"_index":1964,"title":{},"body":{"classes/UndoRedo.html":{}}}],["get(cell",{"_index":593,"title":{},"body":{"classes/Bitmap.html":{}}}],["getareacells",{"_index":1094,"title":{},"body":{"classes/DragArea.html":{}}}],["getbinary",{"_index":565,"title":{},"body":{"classes/Bitmap.html":{}}}],["getbinary(cell",{"_index":598,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcanvasheight",{"_index":1355,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcanvaswidth",{"_index":1356,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["getcellindex",{"_index":566,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcellindex(cell",{"_index":602,"title":{},"body":{"classes/Bitmap.html":{}}}],["getcontrastcolor",{"_index":823,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcontrastcolor(color",{"_index":2121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcontrastcolor(selectioncolor",{"_index":843,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell",{"_index":749,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getcursorcell(x",{"_index":804,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getdivider",{"_index":1527,"title":{},"body":{"classes/Kernel.html":{}}}],["getequation",{"_index":943,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gethash",{"_index":1861,"title":{},"body":{"components/ShapeBitmapEditorComponent.html":{}}}],["gethash(p[0",{"_index":1711,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["gethash(x",{"_index":1665,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["getheight",{"_index":632,"title":{},"body":{"classes/Bitmap.html":{}}}],["gethistory",{"_index":1233,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryreversed",{"_index":1234,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getindexcell",{"_index":567,"title":{},"body":{"classes/Bitmap.html":{}}}],["getindexcell(index",{"_index":607,"title":{},"body":{"classes/Bitmap.html":{}}}],["getkernel",{"_index":1525,"title":{},"body":{"classes/Kernel.html":{}}}],["getoffsetx",{"_index":750,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getoffsety",{"_index":751,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["getresultkernel",{"_index":944,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gets",{"_index":591,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["getsize",{"_index":1523,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["getsourcekernel",{"_index":945,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["gettheme",{"_index":1921,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemeclass",{"_index":1922,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":554,"title":{},"body":{"classes/Bitmap.html":{}}}],["getvar",{"_index":1162,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getvar(variable",{"_index":2139,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getwidth",{"_index":630,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding",{"_index":568,"title":{},"body":{"classes/Bitmap.html":{}}}],["getwithpadding(cell",{"_index":610,"title":{},"body":{"classes/Bitmap.html":{}}}],["given",{"_index":800,"title":{},"body":{"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["goback",{"_index":1789,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["grassfire",{"_index":95,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["grassfireanimationcomponent",{"_index":94,"title":{"components/GrassfireAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grayscale",{"_index":760,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["grid",{"_index":488,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["grid_on",{"_index":1068,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["gridcolor",{"_index":743,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["group",{"_index":721,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize",{"_index":724,"title":{},"body":{"classes/Bitmap.html":{}}}],["groupsize)).fill(0",{"_index":730,"title":{},"body":{"classes/Bitmap.html":{}}}],["handle",{"_index":886,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["handled",{"_index":2107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":446,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":2085,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["has(id",{"_index":892,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["hasbackdrop",{"_index":1047,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["hashlocationstrategy",{"_index":2236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":769,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["headercolor",{"_index":744,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["headers",{"_index":536,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["heatmap",{"_index":2082,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["height",{"_index":409,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["height}}px",{"_index":543,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/HelpComponent.html":{},"miscellaneous/variables.html":{}}}],["help'},{'name",{"_index":97,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["help.component.css",{"_index":1225,"title":{},"body":{"components/HelpComponent.html":{}}}],["help.component.html",{"_index":1224,"title":{},"body":{"components/HelpComponent.html":{}}}],["helpbuilding",{"_index":2199,"title":{},"body":{"index.html":{}}}],["helpcomponent",{"_index":96,"title":{"components/HelpComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":1482,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["hiderequiredmarker",{"_index":2239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":263,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["highlight",{"_index":1753,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["highlighted",{"_index":690,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlightedelement",{"_index":692,"title":{},"body":{"classes/Bitmap.html":{}}}],["highlighting",{"_index":680,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["highlights",{"_index":1892,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["histogram",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"classes/Bitmap.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["histogram'},{'name",{"_index":99,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["histogram(groupsize",{"_index":728,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogram[math.trunc(pixel.value",{"_index":734,"title":{},"body":{"classes/Bitmap.html":{}}}],["histogramcomponent",{"_index":98,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["histograms",{"_index":683,"title":{},"body":{"classes/Bitmap.html":{}}}],["history",{"_index":459,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/HistoryService.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.back",{"_index":523,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["history.length",{"_index":522,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["historylimit",{"_index":1229,"title":{},"body":{"injectables/HistoryService.html":{}}}],["historyservice",{"_index":1226,"title":{"injectables/HistoryService.html":{}},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["home",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":101,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["home.component.css",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":100,"title":{"components/HomeComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hough",{"_index":103,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["houghtransformanimationcomponent",{"_index":102,"title":{"components/HoughTransformAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":69,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["htmlcanvaselement",{"_index":786,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["http://localhost:4200",{"_index":2185,"title":{},"body":{"index.html":{}}}],["https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js",{"_index":2252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.e",{"_index":438,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["i=$index",{"_index":1648,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["id",{"_index":293,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/StructuringElementEditorComponent.html":{}}}],["identifier",{"_index":894,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["identity",{"_index":1638,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["identity3x3",{"_index":1620,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idx",{"_index":1209,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["if(!issel(cell",{"_index":834,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(!this.bitmap.getbinary(cell",{"_index":1770,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(!this.structuringelement.geterosion(this.bitmap",{"_index":1773,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if($event.event.buttons",{"_index":518,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if((issel(cell)&&!issel(cell.down",{"_index":863,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.left",{"_index":869,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.right",{"_index":873,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if((issel(cell)&&!issel(cell.up",{"_index":852,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(apply",{"_index":1764,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(bitmap",{"_index":508,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["if(index",{"_index":1714,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["if(isdark(fillcolor",{"_index":841,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(issel(cell",{"_index":844,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["if(kernel.divider",{"_index":1560,"title":{},"body":{"classes/Kernel.html":{}}}],["if(kernel.kernel",{"_index":1558,"title":{},"body":{"classes/Kernel.html":{}}}],["if(line.min.col",{"_index":1413,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(showvalue",{"_index":355,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.bitmap.isout($event.cell",{"_index":517,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["if(this.chart",{"_index":1403,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["if(this.history.includes(action",{"_index":1260,"title":{},"body":{"injectables/HistoryService.html":{}}}],["if(this.isout(cell",{"_index":658,"title":{},"body":{"classes/Bitmap.html":{}}}],["if(this.operation===morphologicaloperations.dilation",{"_index":1768,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.operation===morphologicaloperations.erosion",{"_index":1772,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["if(this.playing",{"_index":339,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["if(this.value",{"_index":340,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["image",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["images",{"_index":401,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["imgdata",{"_index":1205,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["imgdata.data",{"_index":1207,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["implementation",{"_index":1967,"title":{},"body":{"classes/UndoRedo.html":{}}}],["implements",{"_index":148,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["import",{"_index":48,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["importprovidersfrom(mathjaxmodule.forroot",{"_index":2250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":17,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["include",{"_index":723,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["included",{"_index":727,"title":{},"body":{"classes/Bitmap.html":{}}}],["includes",{"_index":1095,"title":{},"body":{"classes/DragArea.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["includes(cell",{"_index":1108,"title":{},"body":{"classes/DragArea.html":{}}}],["including",{"_index":134,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["incorrect",{"_index":1798,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["increases",{"_index":262,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["incrementing/decrementing",{"_index":210,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["increments",{"_index":225,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index)*thetastep",{"_index":74,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["index)*thetastep}}&deg",{"_index":62,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["indicates",{"_index":1098,"title":{},"body":{"classes/DragArea.html":{}}}],["indices",{"_index":809,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["individual",{"_index":725,"title":{},"body":{"classes/Bitmap.html":{},"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["information",{"_index":1654,"title":{},"body":{"classes/Line.html":{},"index.html":{}}}],["initial",{"_index":957,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initialize",{"_index":954,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["initializes",{"_index":247,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["inject",{"_index":49,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":43,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["injectable",{"_index":882,"title":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":883,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["input",{"_index":206,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{},"miscellaneous/functions.html":{}}}],["input(1",{"_index":315,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(255",{"_index":316,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input(true",{"_index":314,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["input.required",{"_index":1725,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["inputs",{"_index":184,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["inst",{"_index":920,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["instance",{"_index":427,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["interactions",{"_index":959,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["interactive",{"_index":476,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["interactivebitmap",{"_index":471,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interactivebitmap(16",{"_index":472,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(bitmap.width",{"_index":510,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.bitmap.width",{"_index":1056,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["interactivebitmap(this.width",{"_index":521,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["interface",{"_index":2171,"title":{},"body":{"index.html":{}}}],["interval",{"_index":282,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["invalid",{"_index":900,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["isborder(x",{"_index":1215,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["iscursoroncell",{"_index":752,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncell(x",{"_index":813,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader",{"_index":753,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoroncolheader(x",{"_index":816,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader",{"_index":754,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["iscursoronrowheader(x",{"_index":818,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdark",{"_index":2034,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdark(color",{"_index":2134,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdevmode",{"_index":2242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdragged(cell",{"_index":701,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.down",{"_index":864,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.left",{"_index":870,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.right",{"_index":874,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isdragged(cell)&&!isdragged(cell.up",{"_index":853,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isinside(x",{"_index":1208,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["isout",{"_index":569,"title":{},"body":{"classes/Bitmap.html":{}}}],["isout(cell",{"_index":620,"title":{},"body":{"classes/Bitmap.html":{}}}],["issel",{"_index":832,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["isselected(cell",{"_index":703,"title":{},"body":{"classes/Bitmap.html":{}}}],["item",{"_index":1263,"title":{},"body":{"injectables/HistoryService.html":{}}}],["j=$index",{"_index":1649,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["js",{"_index":1166,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"dependencies.html":{}}}],["json.parse(history",{"_index":1272,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.parse(raw",{"_index":915,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["json.stringify(bitmap",{"_index":909,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["json.stringify(this",{"_index":1555,"title":{},"body":{"classes/Kernel.html":{}}}],["json.stringify(this.history",{"_index":1269,"title":{},"body":{"injectables/HistoryService.html":{}}}],["jump",{"_index":989,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kana",{"_index":1214,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["karma",{"_index":2209,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1258,"title":{},"body":{"injectables/HistoryService.html":{}}}],["kernel",{"_index":106,"title":{"classes/Kernel.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["kernel().kernel[row",{"_index":1727,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["kernel(3",{"_index":1006,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["kernel(5",{"_index":1593,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kernel(7",{"_index":1602,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kernel(result.size",{"_index":1052,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["kernel(value",{"_index":1582,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kernel.divider",{"_index":1561,"title":{},"body":{"classes/Kernel.html":{}}}],["kernel.kernel",{"_index":1559,"title":{},"body":{"classes/Kernel.html":{},"components/KernelDialogComponent.html":{}}}],["kerneldialogcomponent",{"_index":105,"title":{"components/KernelDialogComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["kerneltype",{"_index":1564,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["kerneltype.boxblur3x3",{"_index":1587,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.boxblur5x5",{"_index":1592,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.boxblur7x7",{"_index":1601,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.edgedetect3x3",{"_index":1585,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.gaussianblur3x3",{"_index":1588,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.gaussianblur5x5",{"_index":1595,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.gaussianblur7x7",{"_index":1605,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.identity3x3",{"_index":1583,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.laplacian3x3",{"_index":1591,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.prewitt3x3",{"_index":1590,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.sharpen3x3",{"_index":1584,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.sharpen5x5",{"_index":1600,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.sharpen7x7",{"_index":1612,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["kerneltype.sobel3x3",{"_index":1589,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["key",{"_index":904,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["keyboard_double_arrow_left",{"_index":350,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["keyboard_double_arrow_right",{"_index":352,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["label",{"_index":1430,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["laplacian",{"_index":1646,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["laplacian3x3",{"_index":1627,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["last",{"_index":194,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["last_page",{"_index":349,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["latex",{"_index":972,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["layout",{"_index":1400,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["learning",{"_index":2149,"title":{},"body":{"index.html":{}}}],["lecture",{"_index":2143,"title":{},"body":{"index.html":{}}}],["left",{"_index":868,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["legend",{"_index":68,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["length",{"_index":570,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["less",{"_index":224,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["level",{"_index":260,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["levels",{"_index":239,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["library",{"_index":1292,"title":{},"body":{"components/HomeComponent.html":{}}}],["light",{"_index":1928,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["light/dark",{"_index":1918,"title":{},"body":{"injectables/ThemeService.html":{}}}],["limit",{"_index":1241,"title":{},"body":{"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["limit(max",{"_index":1828,"title":{},"body":{"classes/Point.html":{}}}],["limited",{"_index":1833,"title":{},"body":{"classes/Point.html":{}}}],["limits",{"_index":1830,"title":{},"body":{"classes/Point.html":{}}}],["line",{"_index":782,"title":{"classes/Line.html":{}},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["line.max.col",{"_index":1414,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.min.col",{"_index":1416,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.rho",{"_index":1409,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta",{"_index":1419,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.theta*math.pi/180",{"_index":1410,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["line.votes",{"_index":1432,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linear",{"_index":604,"title":{},"body":{"classes/Bitmap.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linearscale",{"_index":1387,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linecontroller",{"_index":1384,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lineelement",{"_index":1385,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linepoint",{"_index":1357,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["linepoint(x",{"_index":1361,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines",{"_index":762,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.push(new",{"_index":1473,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["lines.sort((a",{"_index":1478,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["linewidth",{"_index":779,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["list",{"_index":1253,"title":{},"body":{"injectables/HistoryService.html":{},"index.html":{}}}],["literal",{"_index":444,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["lmb",{"_index":1344,"title":{},"body":{"components/HomeComponent.html":{}}}],["load",{"_index":891,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["load(id",{"_index":895,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["load(storagekey",{"_index":1517,"title":{},"body":{"classes/Kernel.html":{}}}],["loaded",{"_index":470,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{}}}],["loading",{"_index":432,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["loads",{"_index":897,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["local",{"_index":889,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["localstorage.getitem(storagekey",{"_index":1556,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.getitem(this._storagekey",{"_index":912,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.getitem(this.storagekey",{"_index":1271,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.removeitem(this.storagekey",{"_index":1273,"title":{},"body":{"injectables/HistoryService.html":{}}}],["localstorage.setitem(storagekey",{"_index":1554,"title":{},"body":{"classes/Kernel.html":{}}}],["localstorage.setitem(this._storagekey",{"_index":908,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["localstorage.setitem(this.storagekey",{"_index":1268,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["located",{"_index":1309,"title":{},"body":{"components/HomeComponent.html":{}}}],["locationstrategy",{"_index":2234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loop",{"_index":167,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["looping",{"_index":146,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["lower",{"_index":259,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["luminance",{"_index":2124,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maintainaspectratio",{"_index":1399,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["make",{"_index":2172,"title":{},"body":{"index.html":{}}}],["manage",{"_index":958,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["managing",{"_index":294,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{}}}],["manipulate",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{}}}],["manipulating",{"_index":550,"title":{},"body":{"classes/Bitmap.html":{}}}],["manipulation",{"_index":1295,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mat",{"_index":1175,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mat_dialog_data",{"_index":51,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mat_icon_default_options",{"_index":2246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matanimationelement",{"_index":1169,"title":{"classes/MATAnimationElement.html":{}},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["matbuttonmodule",{"_index":154,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matbuttontogglemodule",{"_index":1563,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matcardmodule",{"_index":152,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matcheckboxmodule",{"_index":404,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matching",{"_index":126,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":951,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["matdialogmodule",{"_index":18,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["matdialogref",{"_index":31,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{}}}],["matdividermodule",{"_index":403,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["material",{"_index":2151,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":402,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["math",{"_index":1315,"title":{},"body":{"components/HomeComponent.html":{}}}],["math.cos(theta",{"_index":1462,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.max(0",{"_index":332,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.max(min.col",{"_index":1857,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.col",{"_index":1853,"title":{},"body":{"classes/Point.html":{}}}],["math.max(this.dragstart.col",{"_index":1119,"title":{},"body":{"classes/DragArea.html":{}}}],["math.max(this.dragstart.row",{"_index":1114,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(max.col",{"_index":1858,"title":{},"body":{"classes/Point.html":{}}}],["math.min(max.row",{"_index":1855,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this._speeds.length",{"_index":335,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["math.min(this.col",{"_index":1851,"title":{},"body":{"classes/Point.html":{}}}],["math.min(this.dragstart.col",{"_index":1116,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.dragstart.row",{"_index":1111,"title":{},"body":{"classes/DragArea.html":{}}}],["math.min(this.origin.col",{"_index":1914,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["math.pi",{"_index":1183,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["math.round(((col+1",{"_index":846,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(((row+1",{"_index":848,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((col",{"_index":847,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round((row",{"_index":849,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["math.round(p.col",{"_index":1461,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.round(value",{"_index":1536,"title":{},"body":{"classes/Kernel.html":{}}}],["math.sin(theta",{"_index":1464,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["math.sqrt(dx",{"_index":1710,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["math.trunc((size",{"_index":1066,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["math.trunc((this._size",{"_index":1537,"title":{},"body":{"classes/Kernel.html":{}}}],["math.trunc(index",{"_index":667,"title":{},"body":{"classes/Bitmap.html":{}}}],["math.trunc(x)},${math.trunc(y",{"_index":1666,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["mathematical",{"_index":1289,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{}}}],["mathjax",{"_index":1038,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"dependencies.html":{}}}],["mathjaxmodule",{"_index":930,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["maticonmodule",{"_index":155,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matinputmodule",{"_index":157,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{}}}],["matlistmodule",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["matmenu",{"_index":1580,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["matmenumodule",{"_index":159,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["matrix",{"_index":108,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["matrixdisplaycomponent",{"_index":107,"title":{"components/MatrixDisplayComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["matselectmodule",{"_index":156,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["matsidenavmodule",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["matslidermodule",{"_index":153,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mattabsmodule",{"_index":1351,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["mattoolbarmodule",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["max",{"_index":185,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["max(other",{"_index":1834,"title":{},"body":{"classes/Point.html":{}}}],["max[r][t",{"_index":1477,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx",{"_index":1469,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["max[ridx][tidx].max(p",{"_index":1470,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["maximum",{"_index":193,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/HistoryService.html":{},"classes/Point.html":{},"classes/UndoRedo.html":{}}}],["maxspeed",{"_index":171,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["medial",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["mediallength",{"_index":1668,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["median",{"_index":111,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["medianfilteranimationcomponent",{"_index":110,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":1245,"title":{},"body":{"injectables/HistoryService.html":{}}}],["menu",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":1786,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["method",{"_index":614,"title":{},"body":{"classes/Bitmap.html":{}}}],["methods",{"_index":169,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["middle",{"_index":879,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{}}}],["milliseconds",{"_index":283,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["min",{"_index":186,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["min(other",{"_index":1837,"title":{},"body":{"classes/Point.html":{}}}],["min(width",{"_index":1327,"title":{},"body":{"components/HomeComponent.html":{}}}],["min[r][t",{"_index":1476,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx",{"_index":1467,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["min[ridx][tidx].min(p",{"_index":1468,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["minimalne",{"_index":1629,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["minimum",{"_index":197,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Point.html":{}}}],["minspeed",{"_index":172,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["miscellaneous",{"_index":2076,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mmb",{"_index":1347,"title":{},"body":{"components/HomeComponent.html":{}}}],["mode",{"_index":616,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["model",{"_index":217,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["model(0",{"_index":317,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["modes",{"_index":2090,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modifications",{"_index":1323,"title":{},"body":{"components/HomeComponent.html":{}}}],["modify",{"_index":2189,"title":{},"body":{"index.html":{}}}],["modular",{"_index":2167,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2223,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modulo",{"_index":2088,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["more",{"_index":2217,"title":{},"body":{"index.html":{}}}],["morphological",{"_index":113,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["morphologicaloperations",{"_index":1750,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["morphologicaloperations.erosion",{"_index":1751,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["morphologicaloperationsanimationcomponent",{"_index":112,"title":{"components/MorphologicalOperationsAnimationComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mouse",{"_index":450,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["mouseevent",{"_index":516,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["moved",{"_index":1795,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/Point.html":{}}}],["moves",{"_index":1822,"title":{},"body":{"classes/Point.html":{}}}],["multiplier",{"_index":205,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["multiplying",{"_index":978,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["n",{"_index":1550,"title":{},"body":{"classes/Kernel.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["namefor",{"_index":2195,"title":{},"body":{"index.html":{}}}],["nan",{"_index":2108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["navigate",{"_index":2184,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":456,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["navigation",{"_index":434,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["necessary",{"_index":955,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["neighborhood",{"_index":985,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["new",{"_index":252,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["next",{"_index":258,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["ng",{"_index":2180,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1134,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ngondestroy",{"_index":173,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["ngoninit",{"_index":174,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["ngzone",{"_index":1136,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["noise",{"_index":1338,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["none",{"_index":1497,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["nothing",{"_index":629,"title":{},"body":{"classes/Bitmap.html":{}}}],["notify",{"_index":1942,"title":{},"body":{"injectables/ThemeService.html":{}}}],["npm",{"_index":2215,"title":{},"body":{"index.html":{}}}],["null",{"_index":467,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":32,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["number.isinteger(cell.col",{"_index":649,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isinteger(cell.row",{"_index":648,"title":{},"body":{"classes/Bitmap.html":{}}}],["number.isnan(pixel.value",{"_index":733,"title":{},"body":{"classes/Bitmap.html":{}}}],["numbers",{"_index":553,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["numerical",{"_index":773,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["obj",{"_index":914,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["obj._height",{"_index":918,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._matrix",{"_index":919,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["obj._width",{"_index":917,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object",{"_index":596,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.assign(inst",{"_index":922,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["object.create(bitmap.prototype",{"_index":921,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["object.create(kernel.prototype",{"_index":1557,"title":{},"body":{"classes/Kernel.html":{}}}],["objects",{"_index":592,"title":{},"body":{"classes/Bitmap.html":{}}}],["obrazu",{"_index":1204,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["observable",{"_index":1938,"title":{},"body":{"injectables/ThemeService.html":{}}}],["observe",{"_index":2160,"title":{},"body":{"index.html":{}}}],["offset",{"_index":811,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsetx",{"_index":829,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["offsety",{"_index":830,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["ok",{"_index":1650,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["old",{"_index":577,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldest",{"_index":1980,"title":{},"body":{"classes/UndoRedo.html":{}}}],["oldmatrix",{"_index":573,"title":{},"body":{"classes/Bitmap.html":{}}}],["oldmatrix?._matrix?.foreach((row",{"_index":643,"title":{},"body":{"classes/Bitmap.html":{}}}],["oncellclicked",{"_index":946,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellclicked($event",{"_index":986,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered",{"_index":416,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["oncellentered($event",{"_index":443,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["ondestroy",{"_index":150,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["one",{"_index":580,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["oninit",{"_index":149,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/StructuringElementEditorComponent.html":{}}}],["onto",{"_index":740,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/UndoRedo.html":{}}}],["open",{"_index":2183,"title":{},"body":{"index.html":{}}}],["open_in_new",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{}}}],["opendialog",{"_index":947,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["opening",{"_index":1733,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["opens",{"_index":993,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["operation",{"_index":975,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["operations",{"_index":114,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["operators",{"_index":1334,"title":{},"body":{"components/HomeComponent.html":{}}}],["optimizes",{"_index":2205,"title":{},"body":{"index.html":{}}}],["optional",{"_index":39,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":145,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["order",{"_index":1249,"title":{},"body":{"injectables/HistoryService.html":{}}}],["origin",{"_index":1348,"title":{},"body":{"components/HomeComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{}}}],["original",{"_index":1003,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["other.col",{"_index":1849,"title":{},"body":{"classes/Point.html":{}}}],["other.row",{"_index":1848,"title":{},"body":{"classes/Point.html":{}}}],["otherwise",{"_index":601,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":556,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["outofrange",{"_index":1514,"title":{},"body":{"classes/Kernel.html":{}}}],["outofrangehandle",{"_index":1530,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["outofrangehandle(value",{"_index":2106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["outofrangehandling",{"_index":1033,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["output",{"_index":305,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outputs",{"_index":189,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["outside",{"_index":1011,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["over",{"_index":489,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["overrides",{"_index":216,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["overview",{"_index":2221,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["oy",{"_index":1539,"title":{},"body":{"classes/Kernel.html":{}}}],["p",{"_index":1695,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["p.row",{"_index":1463,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.x",{"_index":1427,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p.y",{"_index":1428,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1",{"_index":1407,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.col",{"_index":1421,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p1.row",{"_index":1422,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2",{"_index":1411,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.col",{"_index":1423,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p2.row",{"_index":1424,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["p[1",{"_index":1697,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["p[1])).indexof(gethash(x+dc",{"_index":1712,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["p[1])).indexof(this.gethash(x",{"_index":1672,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["package",{"_index":2049,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padded",{"_index":619,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding",{"_index":611,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["padding.defaultvalue",{"_index":618,"title":{},"body":{"classes/Bitmap.html":{}}}],["padding.edge",{"_index":653,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["page",{"_index":116,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["pagenotfoundcomponent",{"_index":115,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panel",{"_index":1491,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["param",{"_index":319,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["parameters",{"_index":35,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parseandapply",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseandapply(expression",{"_index":2109,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parses",{"_index":2110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paste",{"_index":1342,"title":{},"body":{"components/HomeComponent.html":{}}}],["path",{"_index":2253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":2256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":783,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["pause",{"_index":346,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["paused",{"_index":299,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["perform",{"_index":1299,"title":{},"body":{"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["performance",{"_index":2206,"title":{},"body":{"index.html":{}}}],["pełny",{"_index":1618,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["pipes",{"_index":2198,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":449,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["pixel.value===0).foreach(pixel",{"_index":1775,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["pixels",{"_index":486,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["pixelsize",{"_index":410,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixelsize}}px",{"_index":544,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["pixel’s",{"_index":1304,"title":{},"body":{"components/HomeComponent.html":{}}}],["play",{"_index":222,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play/pause",{"_index":135,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["play_arrow",{"_index":347,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playback",{"_index":133,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["playing",{"_index":168,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["plugins",{"_index":1401,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pobieramy",{"_index":1202,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["point",{"_index":495,"title":{"classes/Point.html":{}},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["point's",{"_index":1831,"title":{},"body":{"classes/Point.html":{}}}],["point((rho",{"_index":1486,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(0",{"_index":609,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["point(1",{"_index":1813,"title":{},"body":{"classes/Point.html":{}}}],["point(height",{"_index":1455,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.max.row",{"_index":1417,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(line.min.row",{"_index":1415,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["point(math.max(min.row",{"_index":1854,"title":{},"body":{"classes/Point.html":{}}}],["point(math.max(this.row",{"_index":1852,"title":{},"body":{"classes/Point.html":{}}}],["point(math.min(this.origin.row",{"_index":1913,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["point(math.min(this.row",{"_index":1850,"title":{},"body":{"classes/Point.html":{}}}],["point(r",{"_index":663,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(row",{"_index":657,"title":{},"body":{"classes/Bitmap.html":{}}}],["point(this.row",{"_index":1846,"title":{},"body":{"classes/Point.html":{}}}],["point(x",{"_index":669,"title":{},"body":{"classes/Bitmap.html":{}}}],["point.zero",{"_index":1832,"title":{},"body":{"classes/Point.html":{}}}],["pointelement",{"_index":1386,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["pointer",{"_index":1496,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["pointradius",{"_index":1435,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["points",{"_index":1088,"title":{},"body":{"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/Point.html":{}}}],["polar",{"_index":1651,"title":{},"body":{"classes/Line.html":{}}}],["pos.split(',').map(number",{"_index":697,"title":{},"body":{"classes/Bitmap.html":{}}}],["position",{"_index":799,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HomeComponent.html":{}}}],["powerful",{"_index":2194,"title":{},"body":{"index.html":{}}}],["predefined",{"_index":238,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/HomeComponent.html":{}}}],["prefersdark",{"_index":1947,"title":{},"body":{"injectables/ThemeService.html":{}}}],["prefix",{"_index":905,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["presets",{"_index":1637,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["pressed",{"_index":1100,"title":{},"body":{"classes/DragArea.html":{}}}],["previous",{"_index":458,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["prewitt",{"_index":1645,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["prewitt3x3",{"_index":1626,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["primary",{"_index":1177,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["private",{"_index":162,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{}}}],["procedural",{"_index":1302,"title":{},"body":{"components/HomeComponent.html":{}}}],["process",{"_index":967,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processed",{"_index":1001,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["processes",{"_index":929,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["processing",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["producing",{"_index":2111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2204,"title":{},"body":{"index.html":{}}}],["project",{"_index":2144,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"properties.html":{}}}],["property",{"_index":626,"title":{},"body":{"classes/Bitmap.html":{}}}],["protected",{"_index":560,"title":{},"body":{"classes/Bitmap.html":{}}}],["provide",{"_index":2233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":2245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":578,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{}}}],["providedin",{"_index":907,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["providerouter(routes",{"_index":2232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":131,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"index.html":{}}}],["provideserviceworker('ngsw",{"_index":2240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["push",{"_index":1971,"title":{},"body":{"classes/UndoRedo.html":{}}}],["push(state",{"_index":1976,"title":{},"body":{"classes/UndoRedo.html":{}}}],["pushes",{"_index":1978,"title":{},"body":{"classes/UndoRedo.html":{}}}],["quantization",{"_index":1513,"title":{},"body":{"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle",{"_index":1531,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["quantizationhandle(value",{"_index":2113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizationmode",{"_index":1034,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["quantized",{"_index":2114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quantizing",{"_index":2112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["quit",{"_index":417,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["r",{"_index":644,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["random",{"_index":1319,"title":{},"body":{"components/HomeComponent.html":{}}}],["range",{"_index":2086,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["raw",{"_index":911,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["re",{"_index":1027,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["reaches",{"_index":226,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["reaching",{"_index":275,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["readme",{"_index":2142,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":27,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["real",{"_index":2161,"title":{},"body":{"index.html":{}}}],["reapplying",{"_index":997,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["recent",{"_index":1250,"title":{},"body":{"injectables/HistoryService.html":{}}}],["recognized",{"_index":2126,"title":{},"body":{"miscellaneous/functions.html":{}}}],["redirectto",{"_index":2255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redo",{"_index":1341,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoes",{"_index":1287,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["redoing",{"_index":1983,"title":{},"body":{"classes/UndoRedo.html":{}}}],["redostack",{"_index":1969,"title":{},"body":{"classes/UndoRedo.html":{}}}],["reference",{"_index":2222,"title":{},"body":{"index.html":{}}}],["references",{"_index":2219,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":948,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["refreshes",{"_index":996,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["registerwhenstable:30000",{"_index":2244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release.1",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["reload",{"_index":2187,"title":{},"body":{"index.html":{}}}],["removed",{"_index":1796,"title":{},"body":{"components/PageNotFoundComponent.html":{},"classes/UndoRedo.html":{}}}],["render",{"_index":755,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["render(ctx",{"_index":820,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendered",{"_index":775,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["rendering",{"_index":739,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["renders",{"_index":822,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["repeat",{"_index":354,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["repeat_on",{"_index":353,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["represent",{"_index":1311,"title":{},"body":{"components/HomeComponent.html":{}}}],["representation",{"_index":973,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["represented",{"_index":595,"title":{},"body":{"classes/Bitmap.html":{}}}],["representing",{"_index":588,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"classes/Point.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["represents",{"_index":547,"title":{},"body":{"classes/Bitmap.html":{},"classes/Line.html":{}}}],["requestanimationframe(this.animate",{"_index":1217,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["required",{"_index":1722,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["resets",{"_index":228,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["resize",{"_index":418,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resizes",{"_index":462,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["resources",{"_index":244,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["respecting",{"_index":1240,"title":{},"body":{"injectables/HistoryService.html":{}}}],["responsive",{"_index":1397,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["restart",{"_index":273,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["result",{"_index":302,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["resultbitmap",{"_index":936,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["resultkernel",{"_index":937,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["results",{"_index":125,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":887,"title":{},"body":{"injectables/BitmapStorageService.html":{},"miscellaneous/functions.html":{}}}],["retrieve",{"_index":2140,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrieves",{"_index":982,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["retrieving",{"_index":558,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["return",{"_index":336,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["returns",{"_index":235,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1248,"title":{},"body":{"injectables/HistoryService.html":{}}}],["reversed",{"_index":1251,"title":{},"body":{"injectables/HistoryService.html":{}}}],["revert",{"_index":1781,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["reverts",{"_index":1742,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["rgb(249",{"_index":2131,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgb(26",{"_index":2128,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rgba(0,255,0,0.125",{"_index":1679,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["rgba(0,255,0,0.5",{"_index":1680,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["rgba(0,255,0,1",{"_index":1686,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["rgba(235",{"_index":1687,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["rho",{"_index":57,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos.length",{"_index":1453,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["rhos[r",{"_index":1474,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["ridx",{"_index":1465,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["right",{"_index":872,"title":{},"body":{"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Point.html":{}}}],["rmb",{"_index":1345,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":80,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["round",{"_index":881,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rounded",{"_index":2249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":428,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["router",{"_index":424,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["routermodule",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["routes",{"_index":1999,"title":{"routes.html":{}},"body":{"coverage.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":63,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"classes/DragArea.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{}}}],["row,col",{"_index":687,"title":{},"body":{"classes/Bitmap.html":{},"classes/Point.html":{}}}],["row.foreach((value",{"_index":645,"title":{},"body":{"classes/Bitmap.html":{}}}],["row.join",{"_index":1547,"title":{},"body":{"classes/Kernel.html":{}}}],["row/column",{"_index":1023,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["row=0;row",{"_index":661,"title":{},"body":{"classes/Bitmap.html":{}}}],["row[colindex",{"_index":1545,"title":{},"body":{"classes/Kernel.html":{}}}],["rows",{"_index":582,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["rows.join",{"_index":1549,"title":{},"body":{"classes/Kernel.html":{}}}],["rp",{"_index":1685,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["run",{"_index":2179,"title":{},"body":{"index.html":{}}}],["runner",{"_index":2211,"title":{},"body":{"index.html":{}}}],["running",{"_index":2182,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/subject",{"_index":1944,"title":{},"body":{"injectables/ThemeService.html":{}}}],["same",{"_index":1820,"title":{},"body":{"classes/Point.html":{}}}],["save",{"_index":419,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["save(id",{"_index":901,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["save(storagekey",{"_index":1519,"title":{},"body":{"classes/Kernel.html":{}}}],["saved",{"_index":437,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["savedtheme",{"_index":1945,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saves",{"_index":465,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["saving",{"_index":433,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["scaffolding",{"_index":2192,"title":{},"body":{"index.html":{}}}],["scale",{"_index":759,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["scale)+0.5",{"_index":859,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["scalecolor",{"_index":824,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scalecolor(value",{"_index":840,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["scaled",{"_index":2138,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scales",{"_index":1402,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["scaling",{"_index":2136,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schematics",{"_index":2197,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1949,"title":{},"body":{"injectables/ThemeService.html":{}}}],["see",{"_index":898,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["seed",{"_index":1336,"title":{},"body":{"components/HomeComponent.html":{}}}],["select",{"_index":706,"title":{},"body":{"classes/Bitmap.html":{}}}],["select(cell",{"_index":707,"title":{},"body":{"classes/Bitmap.html":{}}}],["select_col_end",{"_index":1118,"title":{},"body":{"classes/DragArea.html":{}}}],["select_col_start",{"_index":1115,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_end",{"_index":1113,"title":{},"body":{"classes/DragArea.html":{}}}],["select_row_start",{"_index":1110,"title":{},"body":{"classes/DragArea.html":{}}}],["selected",{"_index":684,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"miscellaneous/functions.html":{}}}],["selectedcolorscale",{"_index":938,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedcolorscale]=\"colorscale",{"_index":1782,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectedcolorscale]=\"selectedcolorscale",{"_index":1074,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["selectedonly",{"_index":726,"title":{},"body":{"classes/Bitmap.html":{},"miscellaneous/functions.html":{}}}],["selecting",{"_index":677,"title":{},"body":{"classes/Bitmap.html":{}}}],["selection",{"_index":673,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor",{"_index":745,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selectioncolor]=\"selectioncolor",{"_index":1490,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["selects",{"_index":705,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["serveonce",{"_index":2181,"title":{},"body":{"index.html":{}}}],["server",{"_index":2178,"title":{},"body":{"index.html":{}}}],["service",{"_index":431,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["services",{"_index":956,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["services/bitmap",{"_index":501,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["services/theme/theme.service",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":255,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["set(cell",{"_index":627,"title":{},"body":{"classes/Bitmap.html":{}}}],["setdivider(value",{"_index":1528,"title":{},"body":{"classes/Kernel.html":{}}}],["setkernel",{"_index":1566,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["setkernel(type",{"_index":1570,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["sets",{"_index":251,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["setselection(cell",{"_index":713,"title":{},"body":{"classes/Bitmap.html":{}}}],["setsize(value",{"_index":1577,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["settheme",{"_index":1923,"title":{},"body":{"injectables/ThemeService.html":{}}}],["settheme(theme",{"_index":1933,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setting",{"_index":234,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"injectables/ThemeService.html":{}}}],["settings",{"_index":463,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["setvalue",{"_index":175,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalue(value",{"_index":249,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["setvalues",{"_index":949,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["setvalues(length",{"_index":998,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shape",{"_index":119,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shapebitmapeditorcomponent",{"_index":118,"title":{"components/ShapeBitmapEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharpen",{"_index":1639,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["sharpen3x3",{"_index":1621,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sharpen5x5",{"_index":1632,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sharpen7x7",{"_index":1636,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["showbase",{"_index":939,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showdifference",{"_index":1736,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["showgrid",{"_index":411,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showgrid]=\"showgrid",{"_index":530,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["showheaders",{"_index":412,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shown",{"_index":1019,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["shownumbers]=\"false",{"_index":529,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["shownumbers]=\"shownumbervalues&&pixelsize>=40",{"_index":1072,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["shownumbervalues",{"_index":940,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["showvalue",{"_index":187,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sidenav.opened",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":1963,"title":{},"body":{"classes/UndoRedo.html":{}}}],["simplex",{"_index":1337,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["simplex(x",{"_index":1329,"title":{},"body":{"components/HomeComponent.html":{}}}],["sin",{"_index":1317,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":209,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["size(value",{"_index":1581,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["skip_next",{"_index":348,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["skip_previous",{"_index":345,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["slw",{"_index":854,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["slwc/2",{"_index":856,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["sobel",{"_index":1644,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["sobel3x3",{"_index":1625,"title":{},"body":{"components/KernelDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["source.get(pixel.cell",{"_index":1779,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["source.isout(pixel.cell",{"_index":1777,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["sourcekernel",{"_index":941,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specific",{"_index":681,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{}}}],["specified",{"_index":576,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/functions.html":{}}}],["spectral",{"_index":2083,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["speed",{"_index":138,"title":{},"body":{"components/AnimationControllerComponent.html":{},"index.html":{}}}],["speedcontrol",{"_index":330,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speeddown",{"_index":176,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speedmultiplier",{"_index":188,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speedup",{"_index":177,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["speed}}x",{"_index":351,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["sprawdzamy",{"_index":1212,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["src",{"_index":2251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.ts",{"_index":2227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../color",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../enums.ts",{"_index":2078,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../expression",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../kernel",{"_index":2079,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../style",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.ts",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":1998,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/animation",{"_index":127,"title":{},"body":{"components/AnimationControllerComponent.html":{},"coverage.html":{}}}],["src/app/components/binary",{"_index":394,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/bitmap",{"_index":2003,"title":{},"body":{"coverage.html":{}}}],["src/app/components/bitmap/bitmap.component.ts",{"_index":2005,"title":{},"body":{"coverage.html":{}}}],["src/app/components/convolutional",{"_index":924,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/accumulator",{"_index":9,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"coverage.html":{}}}],["src/app/components/dialogs/kernel",{"_index":1562,"title":{},"body":{"components/KernelDialogComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/docs/docs.component.ts",{"_index":1080,"title":{},"body":{"components/DocsComponent.html":{},"coverage.html":{}}}],["src/app/components/grassfire",{"_index":1120,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/help/help.component.ts",{"_index":1223,"title":{},"body":{"components/HelpComponent.html":{},"coverage.html":{}}}],["src/app/components/histogram/histogram.component.ts",{"_index":2011,"title":{},"body":{"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/hough",{"_index":1349,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"coverage.html":{}}}],["src/app/components/matrix",{"_index":1717,"title":{},"body":{"components/MatrixDisplayComponent.html":{},"coverage.html":{}}}],["src/app/components/median",{"_index":2017,"title":{},"body":{"coverage.html":{}}}],["src/app/components/morphological",{"_index":1729,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"coverage.html":{}}}],["src/app/components/page",{"_index":1783,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/shape",{"_index":1659,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["src/app/components/structuring",{"_index":1883,"title":{},"body":{"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["src/app/services/bitmap",{"_index":884,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts",{"_index":1227,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["src/app/services/history/history.service.ts:11",{"_index":1256,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:13",{"_index":1259,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:19",{"_index":1236,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:33",{"_index":1247,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:40",{"_index":1246,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:49",{"_index":1243,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/history/history.service.ts:9",{"_index":1252,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/services/theme/theme.service.ts",{"_index":1916,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme/theme.service.ts:11",{"_index":1936,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:13",{"_index":1941,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:15",{"_index":1925,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:33",{"_index":1934,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:45",{"_index":1929,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:52",{"_index":1931,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme/theme.service.ts:57",{"_index":1935,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/static/bitmap.ts",{"_index":546,"title":{},"body":{"classes/Bitmap.html":{},"coverage.html":{}}}],["src/app/static/bitmap.ts:113",{"_index":628,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:120",{"_index":590,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:13",{"_index":589,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:130",{"_index":625,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:147",{"_index":608,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:15",{"_index":587,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:159",{"_index":603,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:166",{"_index":623,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:17",{"_index":575,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:43",{"_index":631,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:49",{"_index":633,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:57",{"_index":621,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:64",{"_index":594,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:73",{"_index":599,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/bitmap.ts:83",{"_index":612,"title":{},"body":{"classes/Bitmap.html":{}}}],["src/app/static/color",{"_index":2032,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/drag",{"_index":1084,"title":{},"body":{"classes/DragArea.html":{},"coverage.html":{}}}],["src/app/static/enums.ts",{"_index":2080,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/static/expression",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/kernel.ts",{"_index":1500,"title":{},"body":{"classes/Kernel.html":{},"coverage.html":{}}}],["src/app/static/kernel.ts:10",{"_index":1524,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:11",{"_index":1526,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:12",{"_index":1529,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:13",{"_index":1508,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:23",{"_index":1515,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:34",{"_index":1522,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:38",{"_index":1516,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:45",{"_index":1521,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:57",{"_index":1520,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:61",{"_index":1518,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:7",{"_index":1509,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:8",{"_index":1510,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/kernel.ts:9",{"_index":1511,"title":{},"body":{"classes/Kernel.html":{}}}],["src/app/static/point.ts",{"_index":1804,"title":{},"body":{"classes/Point.html":{},"coverage.html":{}}}],["src/app/static/point.ts:13",{"_index":1819,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:2",{"_index":1811,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:20",{"_index":1817,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:27",{"_index":1841,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:35",{"_index":1838,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:43",{"_index":1835,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:49",{"_index":1827,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:55",{"_index":1839,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:61",{"_index":1845,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:67",{"_index":1821,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:7",{"_index":1812,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:75",{"_index":1829,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:82",{"_index":1825,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:88",{"_index":1843,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:92",{"_index":1815,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/point.ts:94",{"_index":1814,"title":{},"body":{"classes/Point.html":{}}}],["src/app/static/render",{"_index":736,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{}}}],["src/app/static/structuringelement.ts",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["src/app/static/style",{"_index":2046,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/static/undoredo.ts",{"_index":1962,"title":{},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["src/app/static/undoredo.ts:18",{"_index":1977,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:29",{"_index":1985,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:4",{"_index":1975,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:40",{"_index":1981,"title":{},"body":{"classes/UndoRedo.html":{}}}],["src/app/static/undoredo.ts:6",{"_index":1973,"title":{},"body":{"classes/UndoRedo.html":{}}}],["stack",{"_index":1966,"title":{},"body":{"classes/UndoRedo.html":{}}}],["start",{"_index":1089,"title":{},"body":{"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"index.html":{}}}],["starting",{"_index":1106,"title":{},"body":{"classes/DragArea.html":{}}}],["starts",{"_index":248,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["state",{"_index":223,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/StructuringElementEditorComponent.html":{},"classes/UndoRedo.html":{}}}],["statements",{"_index":1992,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1968,"title":{},"body":{"classes/UndoRedo.html":{}}}],["static",{"_index":1805,"title":{},"body":{"classes/Point.html":{}}}],["static/bitmap",{"_index":494,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/enums",{"_index":1035,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["static/kernel",{"_index":1032,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["static/point",{"_index":496,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/structuringelement",{"_index":1756,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["static/style",{"_index":1163,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["step",{"_index":136,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["stepbackward",{"_index":178,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepfirst",{"_index":179,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["stepforward",{"_index":180,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steplast",{"_index":181,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["steps",{"_index":265,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["storage",{"_index":466,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{}}}],["storage.service",{"_index":503,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["storage.service.ts",{"_index":885,"title":{},"body":{"injectables/BitmapStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":903,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:18",{"_index":902,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:26",{"_index":893,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage.service.ts:35",{"_index":896,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["storage/bitmap",{"_index":502,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["storagekey",{"_index":1230,"title":{},"body":{"injectables/HistoryService.html":{},"classes/Kernel.html":{},"injectables/ThemeService.html":{}}}],["store",{"_index":1974,"title":{},"body":{"classes/UndoRedo.html":{},"index.html":{}}}],["stored",{"_index":551,"title":{},"body":{"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/UndoRedo.html":{}}}],["stores",{"_index":966,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["storing",{"_index":906,"title":{},"body":{"injectables/BitmapStorageService.html":{},"injectables/HistoryService.html":{},"injectables/ThemeService.html":{}}}],["strategies",{"_index":2089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["strategy",{"_index":1010,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["stream",{"_index":1939,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/functions.html":{}}}],["string=\"kernel",{"_index":1553,"title":{},"body":{"classes/Kernel.html":{}}}],["strings",{"_index":685,"title":{},"body":{"classes/Bitmap.html":{}}}],["stroke",{"_index":797,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["stroked",{"_index":802,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["structure",{"_index":2168,"title":{},"body":{"index.html":{}}}],["structuring",{"_index":121,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["structuringelement",{"_index":1737,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{}}}],["structuringelement(3",{"_index":1755,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["structuringelement(this.bitmap.width",{"_index":1915,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["structuringelementeditorcomponent",{"_index":120,"title":{"components/StructuringElementEditorComponent.html":{}},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["study",{"_index":2176,"title":{},"body":{"index.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?'30px':'0",{"_index":1493,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style.left]=\"showheaders&&pixelsize>=40?\\'30px\\':\\'0",{"_index":1499,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["style=\"margin",{"_index":1075,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["style=\"position",{"_index":1494,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{}}}],["styleurl",{"_index":21,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["subject",{"_index":1940,"title":{},"body":{"injectables/ThemeService.html":{}}}],["submit",{"_index":1567,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["subscribers",{"_index":1943,"title":{},"body":{"injectables/ThemeService.html":{}}}],["subtract",{"_index":1808,"title":{},"body":{"classes/Point.html":{}}}],["subtract(other",{"_index":1840,"title":{},"body":{"classes/Point.html":{}}}],["subtracts",{"_index":1842,"title":{},"body":{"classes/Point.html":{}}}],["such",{"_index":1316,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["suitable",{"_index":2173,"title":{},"body":{"index.html":{}}}],["sum",{"_index":1538,"title":{},"body":{"classes/Kernel.html":{},"classes/Point.html":{}}}],["super(width",{"_index":698,"title":{},"body":{"classes/Bitmap.html":{}}}],["support",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["symbols",{"_index":2248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1331,"title":{},"body":{"components/HomeComponent.html":{}}}],["sys",{"_index":1176,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"miscellaneous/functions.html":{}}}],["t",{"_index":1451,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["tabindex",{"_index":1354,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["table",{"_index":1488,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":1000,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["teaching",{"_index":2148,"title":{},"body":{"index.html":{}}}],["technical",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["techniques",{"_index":2156,"title":{},"body":{"index.html":{}}}],["techstark/opencv",{"_index":1165,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"dependencies.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tension",{"_index":1434,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["test",{"_index":2210,"title":{},"body":{"index.html":{}}}],["testdocumentation",{"_index":2214,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2207,"title":{},"body":{"index.html":{}}}],["text",{"_index":796,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["theme",{"_index":1926,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechanged",{"_index":1919,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themechangedsource",{"_index":1920,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":1917,"title":{},"body":{"injectables/ThemeService.html":{},"miscellaneous/enumerations.html":{}}}],["themes.dark",{"_index":1952,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes.light",{"_index":1953,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":364,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["themeservice.gettheme()=='light'?'dark_mode':'light_mode",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["themeservice.gettheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["theta",{"_index":58,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetarad",{"_index":1362,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas",{"_index":1449,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas.foreach((theta",{"_index":1459,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetas[t]*180/math.pi",{"_index":1475,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["thetastep",{"_index":28,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this._borderpoints",{"_index":1705,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._currentspeedindex",{"_index":331,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._divider",{"_index":1535,"title":{},"body":{"classes/Kernel.html":{}}}],["this._dragarea",{"_index":693,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._dragarea.dragging&&this._dragarea.includes(cell",{"_index":702,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._frameid",{"_index":1216,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._height",{"_index":639,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._id",{"_index":505,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this._interval",{"_index":341,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._kernel",{"_index":1533,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel.map(row",{"_index":1544,"title":{},"body":{"classes/Kernel.html":{}}}],["this._kernel[0].map((_",{"_index":1542,"title":{},"body":{"classes/Kernel.html":{}}}],["this._matrix",{"_index":640,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row]?.[cell.col",{"_index":651,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._matrix[cell.row][cell.col",{"_index":659,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._medial",{"_index":1199,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medial.length",{"_index":1669,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medial[index][2",{"_index":1676,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsbfsqueue.length",{"_index":1694,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsbfsqueue.pop",{"_index":1700,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsbfsqueue.push([x",{"_index":1675,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsbfsqueue.push([x+dc",{"_index":1715,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsbfsqueue.push(p",{"_index":1698,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsvisited.add(this.gethash(x",{"_index":1701,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._medialpointsvisited.has(this.gethash(p[0",{"_index":1696,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this._selected",{"_index":699,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.add(cell.tostring",{"_index":708,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.clear",{"_index":718,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.delete(cell.tostring",{"_index":712,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._selected.has(cell.tostring",{"_index":704,"title":{},"body":{"classes/Bitmap.html":{}}}],["this._size",{"_index":1532,"title":{},"body":{"classes/Kernel.html":{}}}],["this._speeds[0",{"_index":338,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._currentspeedindex",{"_index":334,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._speeds[this._speeds.length",{"_index":337,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this._width",{"_index":638,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.accumulator",{"_index":56,"title":{},"body":{"components/AccumulatorDialogComponent.html":{}}}],["this.accumulator[ridx][tidx",{"_index":1471,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.animate",{"_index":318,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.animationelements.length",{"_index":1670,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.animationelements[index",{"_index":1678,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.animationindex",{"_index":1059,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.appliedbitmap",{"_index":1760,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.appliedbitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell",{"_index":1765,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.applyfilter(this.bitmap.length",{"_index":1058,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap",{"_index":509,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.clearselection",{"_index":1060,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.button",{"_index":1908,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragend",{"_index":1910,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragging",{"_index":1911,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.dragarea.dragstart",{"_index":1909,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.getindexcell(index",{"_index":1067,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.bitmap.getindexcell(this.animationindex",{"_index":1440,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmap.height",{"_index":515,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.highlightedelement",{"_index":1444,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getcellindex(p.cell",{"_index":1441,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(cell",{"_index":1446,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap.select(this.origin",{"_index":1907,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.set($event.cell",{"_index":519,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.bitmap.width",{"_index":513,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.bitmap_storage.load(this._id",{"_index":507,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmap_storage.save(this._id",{"_index":525,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapcomponenttick",{"_index":520,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.bitmapstorage.load(this.bitmapkey",{"_index":1040,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmapstorage.save(this.bitmapkey",{"_index":1041,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.bitmaptick",{"_index":1448,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.canvasref.nativeelement",{"_index":1170,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.chart",{"_index":1394,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets",{"_index":1404,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.data.datasets.push",{"_index":1429,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.resize(this.getcanvaswidth()*2",{"_index":1437,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.chart.update",{"_index":1439,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.col",{"_index":1847,"title":{},"body":{"classes/Point.html":{}}}],["this.dialog.open(kerneldialogcomponent",{"_index":1044,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.dialogref.close",{"_index":1614,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.dialogref.close(this.kernel",{"_index":1615,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["this.dragend.col",{"_index":1117,"title":{},"body":{"classes/DragArea.html":{}}}],["this.dragend.row",{"_index":1112,"title":{},"body":{"classes/DragArea.html":{}}}],["this.drawanimationelement(this.animationindex",{"_index":1220,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.drawfirefront(this.animationindex",{"_index":1218,"title":{},"body":{"components/GrassfireAnimationComponent.html":{}}}],["this.drawmedialaxis",{"_index":1219,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.drawstartshape",{"_index":1201,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.filteredbitmap",{"_index":1057,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.get(cell",{"_index":652,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.get(new",{"_index":656,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.getcanvasheight()*2",{"_index":1438,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.getcursorcell(x",{"_index":826,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.gethash(p[0",{"_index":1671,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["this.gethistory().slice().reverse",{"_index":1270,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.getoffsetx",{"_index":827,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getoffsety",{"_index":828,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["this.getresultkernel",{"_index":1064,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.getsourcekernel",{"_index":1063,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.gettheme",{"_index":1959,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.height",{"_index":514,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.history",{"_index":1261,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.filter(item",{"_index":1262,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.length",{"_index":1265,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.push(action",{"_index":1264,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.history.shift",{"_index":1267,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.historylimit",{"_index":1266,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.isout(cell",{"_index":650,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.isselected(pixel.cell",{"_index":732,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.kernel",{"_index":1050,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.kernel().size",{"_index":1726,"title":{},"body":{"components/MatrixDisplayComponent.html":{}}}],["this.kernel.clone",{"_index":1048,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.load(\"kernel",{"_index":1042,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.save(\"kernel",{"_index":1054,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.kernel.size",{"_index":1065,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/KernelDialogComponent.html":{}}}],["this.length",{"_index":664,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.limit",{"_index":1406,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/UndoRedo.html":{}}}],["this.linepoint(line.max.col",{"_index":1412,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.linepoint(line.min.col",{"_index":1408,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.load(this._storagekey",{"_index":910,"title":{},"body":{"injectables/BitmapStorageService.html":{}}}],["this.loop",{"_index":329,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.operation",{"_index":1762,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.operation===morphologicaloperations.erosion",{"_index":1774,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.origin",{"_index":1903,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.origin.clone",{"_index":1906,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.pixels().foreach",{"_index":731,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.pixelsize",{"_index":1483,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.playing",{"_index":326,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.quit",{"_index":526,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.redostack",{"_index":1990,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.refresh",{"_index":1043,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.resultbitmap",{"_index":1055,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.clearselection",{"_index":1443,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.highlightedelement",{"_index":1769,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.pixels().filter(p=>p.value===0).foreach(p",{"_index":1766,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.select(cell",{"_index":1447,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultbitmap.set(p.cell",{"_index":1442,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.resultkernel",{"_index":1053,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":506,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{}}}],["this.router.navigate",{"_index":524,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/PageNotFoundComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.row",{"_index":1856,"title":{},"body":{"classes/Point.html":{}}}],["this.row},${this.col",{"_index":1859,"title":{},"body":{"classes/Point.html":{}}}],["this.select(cell",{"_index":714,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.selectioncolor",{"_index":1445,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.settheme(current",{"_index":1960,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(prefersdark",{"_index":1951,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(savedtheme",{"_index":1946,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.settheme(themes.light",{"_index":1954,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setvalue(math.max(this.min",{"_index":324,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(math.min(this.max",{"_index":327,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.max",{"_index":328,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalue(this.min",{"_index":323,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.setvalues(index+1",{"_index":1062,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.setvalues(this.animationindex+1",{"_index":1767,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showbase?this.bitmap:undefined",{"_index":1061,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showdifference",{"_index":1763,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.showheaders",{"_index":1484,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.sourcekernel",{"_index":1051,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["this.speed",{"_index":333,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.speedmultiplier",{"_index":342,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.step",{"_index":325,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.structuringelement",{"_index":1902,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.applycomplex(this.bitmap",{"_index":1761,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{}}}],["this.structuringelement.height",{"_index":1901,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.load",{"_index":1758,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.origin",{"_index":1904,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.save",{"_index":1759,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.set(point.one",{"_index":1757,"title":{},"body":{"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["this.structuringelement.width",{"_index":1900,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.themechangedsource.asobservable",{"_index":1937,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themechangedsource.next(theme",{"_index":1958,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.threshold",{"_index":1472,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.tick",{"_index":1912,"title":{},"body":{"components/StructuringElementEditorComponent.html":{}}}],["this.toline(line.rho",{"_index":1418,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.transform(this.resultbitmap).slice(0",{"_index":1405,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["this.undostack.length",{"_index":1988,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.push(state",{"_index":1987,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.undostack.shift",{"_index":1989,"title":{},"body":{"classes/UndoRedo.html":{}}}],["this.unselect(cell",{"_index":715,"title":{},"body":{"classes/Bitmap.html":{}}}],["this.value",{"_index":320,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.value.set(value",{"_index":321,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.valuechanged.emit(value",{"_index":322,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["this.width",{"_index":512,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["threshold",{"_index":1221,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["through",{"_index":1306,"title":{},"body":{"components/HomeComponent.html":{}}}],["tick",{"_index":478,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["tick]=\"bitmaptick",{"_index":1489,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["tick]=\"tick",{"_index":1073,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["tidx",{"_index":1460,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["time",{"_index":2162,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":231,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["tip",{"_index":1801,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["tips_and_updates",{"_index":1800,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["title",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tmp",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["together",{"_index":1313,"title":{},"body":{"components/HomeComponent.html":{}}}],["toggle",{"_index":1579,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["toggleloop",{"_index":182,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggleplay",{"_index":183,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["toggles",{"_index":272,"title":{},"body":{"components/AnimationControllerComponent.html":{},"injectables/ThemeService.html":{}}}],["toggletheme",{"_index":1924,"title":{},"body":{"injectables/ThemeService.html":{}}}],["tolatex",{"_index":1505,"title":{},"body":{"classes/Kernel.html":{}}}],["tools",{"_index":538,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"index.html":{}}}],["tooltip",{"_index":1388,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["tostring",{"_index":1809,"title":{},"body":{"classes/Point.html":{}}}],["total",{"_index":624,"title":{},"body":{"classes/Bitmap.html":{}}}],["track",{"_index":61,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{}}}],["transform",{"_index":104,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["transform(bitmap",{"_index":1369,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["transformations",{"_index":1298,"title":{},"body":{"components/HomeComponent.html":{}}}],["transposed",{"_index":1541,"title":{},"body":{"classes/Kernel.html":{}}}],["transposed.map(row",{"_index":1546,"title":{},"body":{"classes/Kernel.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["trigger",{"_index":480,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["true",{"_index":200,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":913,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["tslib",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":534,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["two",{"_index":1087,"title":{},"body":{"classes/DragArea.html":{},"classes/Point.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":916,"title":{},"body":{"injectables/BitmapStorageService.html":{},"classes/Kernel.html":{}}}],["typically",{"_index":2135,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unary",{"_index":1335,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":474,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["under",{"_index":807,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["understanding",{"_index":2165,"title":{},"body":{"index.html":{}}}],["undo",{"_index":1340,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undo/redo",{"_index":1965,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undoes",{"_index":1286,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoing",{"_index":1986,"title":{},"body":{"classes/UndoRedo.html":{}}}],["undone",{"_index":1288,"title":{},"body":{"components/HomeComponent.html":{},"classes/UndoRedo.html":{}}}],["undoredo",{"_index":1961,"title":{"classes/UndoRedo.html":{}},"body":{"classes/UndoRedo.html":{},"coverage.html":{}}}],["undostack",{"_index":1970,"title":{},"body":{"classes/UndoRedo.html":{}}}],["uninitialized",{"_index":586,"title":{},"body":{"classes/Bitmap.html":{}}}],["unit",{"_index":1823,"title":{},"body":{"classes/Point.html":{},"index.html":{}}}],["unselect",{"_index":710,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselect(cell",{"_index":711,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselecting",{"_index":716,"title":{},"body":{"classes/Bitmap.html":{}}}],["unselects",{"_index":709,"title":{},"body":{"classes/Bitmap.html":{}}}],["unsets",{"_index":1346,"title":{},"body":{"components/HomeComponent.html":{}}}],["unused",{"_index":991,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["up",{"_index":243,"title":{},"body":{"components/AnimationControllerComponent.html":{},"classes/Bitmap.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{}}}],["update",{"_index":232,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["updates",{"_index":220,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"injectables/ThemeService.html":{}}}],["updating",{"_index":962,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["url",{"_index":1802,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["use",{"_index":585,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["useclass",{"_index":2235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":691,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":2169,"title":{},"body":{"index.html":{}}}],["users",{"_index":141,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"index.html":{}}}],["userselect]=\"false",{"_index":531,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["uses",{"_index":230,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["usevalue",{"_index":2238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":888,"title":{},"body":{"injectables/BitmapStorageService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["utility",{"_index":738,"title":{},"body":{"classes/BitmapRenderer.html":{},"miscellaneous/functions.html":{}}}],["utils",{"_index":825,"title":{},"body":{"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["utils.ts",{"_index":737,"title":{},"body":{"classes/BitmapRenderer.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["utils.ts:111",{"_index":798,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:12",{"_index":761,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:125",{"_index":789,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:14",{"_index":772,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:153",{"_index":780,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:16",{"_index":771,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:18",{"_index":757,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:181",{"_index":821,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:21",{"_index":765,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:23",{"_index":768,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:25",{"_index":777,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:36",{"_index":814,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:52",{"_index":805,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:67",{"_index":817,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:80",{"_index":819,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:9",{"_index":774,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:93",{"_index":810,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["utils.ts:99",{"_index":812,"title":{},"body":{"classes/BitmapRenderer.html":{}}}],["v",{"_index":1332,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid",{"_index":439,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["validate",{"_index":2120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateexpression",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateexpression(expression",{"_index":2115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validates",{"_index":2116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validation",{"_index":2104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validationerrors",{"_index":2103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":2101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validity",{"_index":2102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":46,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"classes/DragArea.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"classes/Point.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["valuechanged",{"_index":190,"title":{},"body":{"components/AnimationControllerComponent.html":{}}}],["values",{"_index":301,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/HomeComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["values.push({cell",{"_index":662,"title":{},"body":{"classes/Bitmap.html":{}}}],["var",{"_index":72,"title":{},"body":{"components/AccumulatorDialogComponent.html":{},"components/AnimationControllerComponent.html":{},"components/AppComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/DocsComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HelpComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"components/KernelDialogComponent.html":{},"components/MatrixDisplayComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["variable",{"_index":1995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["variables",{"_index":1307,"title":{"miscellaneous/variables.html":{}},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":2154,"title":{},"body":{"index.html":{}}}],["version",{"_index":2224,"title":{},"body":{"properties.html":{}}}],["view",{"_index":504,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["viewchild",{"_index":1161,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["viewchild('canvas",{"_index":1152,"title":{},"body":{"components/GrassfireAnimationComponent.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["viridis",{"_index":2084,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["visibility",{"_index":535,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/BitmapRenderer.html":{},"components/StructuringElementEditorComponent.html":{}}}],["visit",{"_index":2220,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":2158,"title":{},"body":{"index.html":{}}}],["visualizations",{"_index":2152,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":927,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"components/MorphologicalOperationsAnimationComponent.html":{}}}],["void",{"_index":236,"title":{},"body":{"components/AnimationControllerComponent.html":{},"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"injectables/BitmapStorageService.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"injectables/HistoryService.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Kernel.html":{},"components/KernelDialogComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/MorphologicalOperationsAnimationComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{},"injectables/ThemeService.html":{},"classes/UndoRedo.html":{},"miscellaneous/functions.html":{}}}],["votes",{"_index":1431,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["voting",{"_index":1653,"title":{},"body":{"classes/Line.html":{}}}],["web",{"_index":2146,"title":{},"body":{"index.html":{}}}],["weighted",{"_index":979,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{}}}],["well",{"_index":679,"title":{},"body":{"classes/Bitmap.html":{},"components/HomeComponent.html":{}}}],["whenever",{"_index":2188,"title":{},"body":{"index.html":{}}}],["whether",{"_index":722,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{}}}],["white",{"_index":400,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{}}}],["whole",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{}}}],["width",{"_index":413,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/ConvolutionalFilterAnimationComponent.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["width}}px",{"_index":542,"title":{},"body":{"components/BinaryBitmapEditorComponent.html":{},"components/StructuringElementEditorComponent.html":{}}}],["window.matchmedia('(prefers",{"_index":1948,"title":{},"body":{"injectables/ThemeService.html":{}}}],["within",{"_index":678,"title":{},"body":{"classes/Bitmap.html":{},"classes/DragArea.html":{},"classes/Point.html":{}}}],["without",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["worker.js",{"_index":2241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["write",{"_index":1296,"title":{},"body":{"components/HomeComponent.html":{}}}],["x",{"_index":666,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["x*math.cos(thetarad))/math.sin(thetarad",{"_index":1487,"title":{},"body":{"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{}}}],["x/width*255",{"_index":1328,"title":{},"body":{"components/HomeComponent.html":{}}}],["y",{"_index":668,"title":{},"body":{"classes/Bitmap.html":{},"classes/BitmapRenderer.html":{},"components/GrassfireAnimationComponent.html":{},"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{},"classes/Line.html":{},"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["y)*1.1",{"_index":1325,"title":{},"body":{"components/HomeComponent.html":{}}}],["y+dr",{"_index":1713,"title":{},"body":{"classes/MATAnimationElement.html":{},"components/ShapeBitmapEditorComponent.html":{}}}],["yes",{"_index":583,"title":{},"body":{"classes/Bitmap.html":{},"classes/Kernel.html":{}}}],["z",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{},"components/HoughTransformAnimationComponent.html":{}}}],["zero",{"_index":1069,"title":{},"body":{"components/ConvolutionalFilterAnimationComponent.html":{},"classes/Point.html":{},"miscellaneous/enumerations.html":{}}}],["zestaw",{"_index":1619,"title":{},"body":{"components/KernelDialogComponent.html":{}}}],["zone.js",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccumulatorDialogComponent.html":{"url":"components/AccumulatorDialogComponent.html","title":"component - AccumulatorDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AccumulatorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-accumulator-dialog\n            \n\n\n            \n                imports\n                \n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./accumulator-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./accumulator-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accumulator\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Readonly\n                                thetaStep\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: number[][])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    number[][]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accumulator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        thetaStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-accumulator-dialog',\n  imports: [\n    MatDialogModule,\n  ],\n  templateUrl: './accumulator-dialog.component.html',\n  styleUrl: './accumulator-dialog.component.css'\n})\nexport class AccumulatorDialogComponent {\n  accumulator: number[][];\n  readonly thetaStep = 15;\n\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: number[][]) {\n    this.accumulator = data;\n  }\n}\n\n    \n\n    \n        \n\n    \n            \n                \n                    \n                        \n                            \n                        \n                        &rho;\n                        &theta;\n                    \n\n                    @for (_ of accumulator[0]; track $index) {\n                    \n                        {{($index)*thetaStep}}&deg;\n                    \n                }\n            \n            @for (row of accumulator ; track $index) {\n                \n                    \n                        {{$index-((accumulator.length-1)/2)}}\n                    \n                    @for (cell of row ; track $index) {\n                        \n                            0?cell:''}} -->\n                            {{cell}}\n                        \n                    }\n                \n            }\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                        ρ                        θ                                        @for (_ of accumulator[0]; track $index) {                                            {{($index)*thetaStep}}°                                    }                        @for (row of accumulator ; track $index) {                                                            {{$index-((accumulator.length-1)/2)}}                                        @for (cell of row ; track $index) {                                                    0?cell:\\'\\'}} -->                            {{cell}}                                            }                            }            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccumulatorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnimationControllerComponent.html":{"url":"components/AnimationControllerComponent.html","title":"component - AnimationControllerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AnimationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/animation-controller/animation-controller.component.ts\n\n\n\n    \n        Description\n    \n    \n        A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\nIt allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-animation-controller\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatSliderModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSelectModule\n                            MatInputModule\n                            FormsModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./animation-controller.component.html\n            \n\n\n\n            \n                styleUrl\n                ./animation-controller.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentSpeedIndex\n                            \n                            \n                                    Private\n                                    Readonly\n                                _interval\n                            \n                            \n                                    Private\n                                    Readonly\n                                _speeds\n                            \n                            \n                                    Private\n                                _timeoutId\n                            \n                            \n                                loop\n                            \n                            \n                                playing\n                            \n                            \n                                speed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                maxSpeed\n                            \n                            \n                                minSpeed\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setValue\n                            \n                            \n                                speedDown\n                            \n                            \n                                speedUp\n                            \n                            \n                                stepBackward\n                            \n                            \n                                stepFirst\n                            \n                            \n                                stepForward\n                            \n                            \n                                stepLast\n                            \n                            \n                                toggleLoop\n                            \n                            \n                                togglePlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                showValue\n                            \n                            \n                                speedMultiplier\n                            \n                            \n                                step\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        max\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 255\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:48\n                            \n                        \n                \n                    \n                        Maximum value (last frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        min\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:46\n                            \n                        \n                \n                    \n                        Minimum value (first frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showValue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:43\n                            \n                        \n                \n                    \n                        If true, the value (current frame) is displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        speedMultiplier\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:52\n                            \n                        \n                \n                    \n                        Speed multiplier input for external control of animation speed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:50\n                            \n                        \n                \n                    \n                        Step size for incrementing/decrementing the value (frame).\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:55\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:55\n                            \n                        \n                \n                    \n                        Current value (frame) of the animation.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChanged\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/animation-controller/animation-controller.component.ts:57\n                            \n                        \n                \n                    \n                        Event emitted when the value (frame) changes, overrides default model behavior.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Continuously updates the animation frame based on the current speed and play state.\nIf the animation is playing and the current value is less than the maximum value, it increments the value.\nIf the current value reaches the maximum and looping is enabled, it resets to the minimum value.\nThe function uses a timeout to control the update frequency based on the speed setting.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSpeed\n                        \n                    \n                \n            \n            \n                \nmaxSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Returns the maximum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        minSpeed\n                        \n                    \n                \n            \n            \n                \nminSpeed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Returns the minimum speed value from the predefined speed levels.\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Cleans up resources when the component is destroyed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes the component and starts the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValue\n                        \n                    \n                \n            \n            \n                \nsetValue(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Sets the current value (frame) of the animation.\nIf the new value is different from the current value, it updates the value and emits the valueChanged event.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new value (frame) to set.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedDown\n                        \n                    \n                \n            \n            \n                \nspeedDown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Decreases the animation speed to the next lower predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speedUp\n                        \n                    \n                \n            \n            \n                \nspeedUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:138\n                        \n                    \n\n\n            \n                \n                        Increases the animation speed to the next higher predefined speed level.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepBackward\n                        \n                    \n                \n            \n            \n                \nstepBackward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Steps backward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepFirst\n                        \n                    \n                \n            \n            \n                \nstepFirst()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Steps to the first frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepForward\n                        \n                    \n                \n            \n            \n                \nstepForward()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Steps forward in the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stepLast\n                        \n                    \n                \n            \n            \n                \nstepLast()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Steps to the last frame of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoop\n                        \n                    \n                \n            \n            \n                \ntoggleLoop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Toggles the looping behavior of the animation.\nWhen enabled, the animation will restart from the beginning after reaching the end.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePlay\n                        \n                    \n                \n            \n            \n                \ntogglePlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/animation-controller/animation-controller.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Toggles the play/pause state of the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentSpeedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:66\n                        \n                    \n\n            \n                \n                    Current index in the predefined speed levels\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 250\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:68\n                        \n                    \n\n            \n                \n                    Interval in milliseconds for animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _speeds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:64\n                        \n                    \n\n            \n                \n                    Predefined speed levels for the animation\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _timeoutId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:62\n                        \n                    \n\n            \n                \n                    Timeout ID for managing animation updates\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:34\n                        \n                    \n\n            \n                \n                    If true, the animation will loop continuously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the animation is currently playing.\nWhen false, the animation is paused.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        speed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/animation-controller/animation-controller.component.ts:40\n                        \n                    \n\n            \n                \n                    Speed multiplier for the animation playback. Higher values result in faster playback.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, effect, input, model, OnDestroy, OnInit, output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\n\n/** \n * A component that provides controls for animation playback, including play/pause, step forward/backward, and speed adjustment.\n * It allows users to control the animation frame by frame or continuously, with options for looping and speed changes.\n */\n@Component({\n  selector: 'app-animation-controller',\n  imports: [\n    MatCardModule,\n    MatSliderModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatInputModule,\n    FormsModule,\n    MatMenuModule\n  ],\n  templateUrl: './animation-controller.component.html',\n  styleUrl: './animation-controller.component.css'\n})\nexport class AnimationControllerComponent implements OnInit, OnDestroy {\n  //public\n  \n  /** If true, the animation will loop continuously. */\n  loop: boolean = false;\n  /** If true, the animation is currently playing.\n   * When false, the animation is paused.\n   */\n  playing: boolean = false;\n  /** Speed multiplier for the animation playback. Higher values result in faster playback. */\n  speed: number = 1;\n  \n  /** If true, the value (current frame) is displayed. */\n  showValue = input(true);\n\n  /** Minimum value (first frame) of the animation. */\n  min = input(1);\n  /** Maximum value (last frame) of the animation. */\n  max = input(255);\n  /** Step size for incrementing/decrementing the value (frame). */\n  step = input(1);\n  /** Speed multiplier input for external control of animation speed. */\n  speedMultiplier = input(1);\n\n  /** Current value (frame) of the animation. */\n  value = model(0);\n  /** Event emitted when the value (frame) changes, **overrides default model behavior.** */\n  valueChanged = output();\n\n  //private\n\n  /** Timeout ID for managing animation updates */\n  private _timeoutId: any;\n  /** Predefined speed levels for the animation */\n  private readonly _speeds = [0.1, 0.25, 0.5, 0.75, 1, 2, 5, 10];\n  /** Current index in the predefined speed levels */\n  private _currentSpeedIndex = 4;\n  /** Interval in milliseconds for animation updates */\n  private readonly _interval = 250;\n\n  /**\n   * Initializes the component and starts the animation.\n   */\n  ngOnInit(): void {\n    this.animate();\n  }\n\n  /** Sets the current value (frame) of the animation.\n   * If the new value is different from the current value, it updates the value and emits the `valueChanged` event.\n   * @param value The new value (frame) to set.\n   */\n  setValue(value: number): void {\n    if (value !== this.value()) {\n      this.value.set(value);\n      this.valueChanged.emit(value);\n    }\n  }\n\n  /**\n   * Steps to the first frame of the animation.\n   */\n  stepFirst(): void {\n    this.setValue(this.min());\n  }\n  \n  /**\n   * Steps backward in the animation.\n   */\n  stepBackward(): void {\n    this.setValue(Math.max(this.min(), this.value() - this.step()));\n  }\n  /**\n   * Toggles the play/pause state of the animation.\n   */\n  togglePlay(): void {\n    this.playing = !this.playing;\n    this.animate();\n  }\n  /**\n   * Steps forward in the animation.\n   */\n  stepForward(): void {\n    this.setValue(Math.min(this.max(), this.value() + this.step()));\n  }\n  /**\n   * Steps to the last frame of the animation.\n   */\n  stepLast(): void {\n    this.setValue(this.max());\n  }\n\n  /** Toggles the looping behavior of the animation.\n   * When enabled, the animation will restart from the beginning after reaching the end.\n   */\n  toggleLoop(): void {\n    this.loop = !this.loop;\n  }\n\n\n\n  //speedControl\n\n  /** Decreases the animation speed to the next lower predefined speed level. */\n  speedDown(): void {\n    this._currentSpeedIndex = Math.max(0, this._currentSpeedIndex - 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Increases the animation speed to the next higher predefined speed level. */\n  speedUp(): void {\n    this._currentSpeedIndex = Math.min(this._speeds.length - 1, this._currentSpeedIndex + 1);\n    this.speed = this._speeds[this._currentSpeedIndex];\n  }\n  /** Returns the maximum speed value from the predefined speed levels. */\n  maxSpeed(): number {\n    return this._speeds[this._speeds.length - 1];\n  }\n  /** Returns the minimum speed value from the predefined speed levels. */\n  minSpeed(): number {\n    return this._speeds[0];\n  }\n\n  /** Continuously updates the animation frame based on the current speed and play state.\n   * If the animation is playing and the current value is less than the maximum value, it increments the value.\n   * If the current value reaches the maximum and looping is enabled, it resets to the minimum value.\n   * The function uses a timeout to control the update frequency based on the speed setting.\n   */\n  animate(): void {\n    if(this.playing){\n      if(this.value() {\n        this.animate();\n      }, this._interval / (this.speed * this.speedMultiplier()));\n    }\n  }\n\n  /** Cleans up resources when the component is destroyed.\n   */\n  ngOnDestroy(): void{\n    clearTimeout(this._timeoutId);\n  }\n}\n\n    \n\n    \n        \n\n    \n        first_page\n    \n    \n    \n        skip_previous\n    \n    \n    \n        {{ playing ? 'pause' : 'play_arrow' }}\n    \n    \n    \n        skip_next\n    \n     \n        \n        last_page\n    \n\n\n    \n        speed\n    \n\n    \n        \n\n            \n                \n                    keyboard_double_arrow_left\n                \n            \n            \n                {{speed}}x\n            \n            = maxSpeed()\">\n                \n                    keyboard_double_arrow_right\n                \n            \n\n        \n    \n\n\n    \n        {{ loop ? 'repeat_on' : 'repeat' }}\n    \n\n    @if(showValue()){\n        \n            {{value()}}\n        \n    }\n    \n    \n\n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            first_page                    skip_previous                    {{ playing ? \\'pause\\' : \\'play_arrow\\' }}                    skip_next                         last_page                speed                                                                keyboard_double_arrow_left                                                        {{speed}}x                        = maxSpeed()\">                                    keyboard_double_arrow_right                                                    {{ loop ? \\'repeat_on\\' : \\'repeat\\' }}        @if(showValue()){                    {{value()}}            }                                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnimationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterModule\n                            MatButtonModule\n                            MatSliderModule\n                            MatToolbarModule\n                            MatSidenavModule\n                            MatCardModule\n                            MatIconModule\n                            MatListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                themeService\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        themeService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThemeService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Image Processing Course Support'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ThemeService } from './services/theme/theme.service';\n\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterModule,\n    MatButtonModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n  ],    \n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'Image Processing Course Support';\n\n  constructor(public themeService: ThemeService) {}\n}\n\n    \n\n    \n        \n  \n    menu\n  \n\n  \n    {{title}}\n  \n  \n\n  \n    help\n  \n\n  \n    {{themeService.getTheme()=='light'?'dark_mode':'light_mode'}}\n  \n\n\n\n\n\n  \n    \n\n      @if (sidenav.opened) {\n      \n        Home\n        Help -->\n        Bitmap Editor\n        Binary Bitmap Editor #tmp -->\n        Histogram\n        Median Filters\n        Convolutional Filters\n        Morphological Operations\n        Hough Transform\n        Medial Axis Transform\n        Grassfire Algorithm -->\n        Technical documentation -->\n        Technical documentation\n      \n      }\n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      menu        {{title}}          help        {{themeService.getTheme()==\\'light\\'?\\'dark_mode\\':\\'light_mode\\'}}              @if (sidenav.opened) {              Home        Help -->        Bitmap Editor        Binary Bitmap Editor #tmp -->        Histogram        Median Filters        Convolutional Filters        Morphological Operations        Hough Transform        Medial Axis Transform        Grassfire Algorithm -->        Technical documentation -->        Technical documentation            }              '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BinaryBitmapEditorComponent.html":{"url":"components/BinaryBitmapEditorComponent.html","title":"component - BinaryBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BinaryBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for editing binary bitmaps (black and white images).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-binary-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./binary-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./binary-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapComponentTick\n                            \n                            \n                                height\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, bitmap_storage: BitmapStorageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of the BinaryBitmapEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The activated route to access route parameters.\n\n                                                        \n                                                \n                                                \n                                                        bitmap_storage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks if the bitmap can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:53\n                        \n                    \n\n            \n                \n                    The ID of the bitmap being edited, if loaded from storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapComponentTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Tick counter to trigger bitmap component updates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 9\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:50\n                        \n                    \n\n            \n                \n                    Height of the bitmap being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:43\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts:48\n                        \n                    \n\n            \n                \n                    Width and height of the bitmap being edited.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { Point } from '../../static/point';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\n\n/** Component for editing binary bitmaps (black and white images). */\n@Component({\n  selector: 'app-binary-bitmap-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n],\n  templateUrl: './binary-bitmap-editor.component.html',\n  styleUrl: './binary-bitmap-editor.component.css'\n})\nexport class BinaryBitmapEditorComponent {\n  /** The interactive bitmap being edited. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Tick counter to trigger bitmap component updates. */\n  bitmapComponentTick: number = 0;\n  \n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 50;\n  /** If true, pixel values are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  \n  /** Width and height of the bitmap being edited. */\n  width: number = 16;\n  /** Height of the bitmap being edited. */\n  height: number = 9;\n\n  /** The ID of the bitmap being edited, if loaded from storage. */\n  private _id: string | null = null;\n\n  /** Creates an instance of the BinaryBitmapEditorComponent.\n   * @param route The activated route to access route parameters.\n   * @param bitmap_storage The service for loading and saving bitmaps.\n   * @param router The router for navigation.\n   */\n  constructor(private route: ActivatedRoute, private bitmap_storage: BitmapStorageService, private router: Router) {\n    this._id = this.route.snapshot.paramMap.get('id');\n    let bitmap = this.bitmap_storage.load(this._id);\n    if(bitmap) \n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    this.width = this.bitmap.width;\n    this.height = this.bitmap.height;\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.bitmapComponentTick++;\n  }\n\n  /** Checks if the bitmap can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return this._id !== null;\n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current bitmap to storage and navigates back. */\n  save(): void {\n    if (this._id !== null) {\n      this.bitmap_storage.save(this._id, this.bitmap);\n      this.quit();\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BinaryBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bitmap.html":{"url":"classes/Bitmap.html","title":"class - Bitmap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bitmap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/bitmap.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\nThe bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\nThe class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\nand retrieving the dimensions of the bitmap.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _height\n                            \n                            \n                                    Protected\n                                _matrix\n                            \n                            \n                                    Protected\n                                _width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cells\n                            \n                            \n                                get\n                            \n                            \n                                getBinary\n                            \n                            \n                                getCellIndex\n                            \n                            \n                                getIndexCell\n                            \n                            \n                                getWithPadding\n                            \n                            \n                                isOut\n                            \n                            \n                                length\n                            \n                            \n                                pixels\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/bitmap.ts:17\n                            \n                        \n\n                \n                    \n                            Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\nIf an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The width of the bitmap (number of columns). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        height\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The height of the bitmap (number of rows). Default is 10.\n\n                                                        \n                                                \n                                                \n                                                        oldMatrix\n                                                  \n                                                        \n                                                                        Bitmap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                An optional old Bitmap instance to copy values from.\n\n                                                        \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default pixel value to use for uninitialized pixels. Default is 0.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:15\n                        \n                    \n\n            \n                \n                    The height of the bitmap (number of rows).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _matrix\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:17\n                        \n                    \n\n            \n                \n                    The 2D array representing the bitmap, where each element is a pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/bitmap.ts:13\n                        \n                    \n\n            \n                \n                    The width of the bitmap (number of columns).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cells\n                        \n                    \n                \n            \n            \n                \ncells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:120\n                        \n                    \n\n\n            \n                \n                        Gets all cells in the bitmap as an array of Point objects.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Point objects representing all cells in the bitmap.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     number | undefined\n\n                        \n                            \n                                The pixel value at the specified cell, or undefined if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBinary\n                        \n                    \n                \n            \n            \n                \ngetBinary(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the binary value (0 or 1) at the specified cell.\nA value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to get the binary value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the pixel value is 0, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellIndex\n                        \n                    \n                \n            \n            \n                \ngetCellIndex(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:159\n                        \n                    \n\n\n            \n                \n                        Gets the linear index corresponding to the specified cell (Point).\nIf the cell is out of bounds, it returns 0.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell (Point) to convert to a linear index.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexCell\n                        \n                    \n                \n            \n            \n                \ngetIndexCell(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:147\n                        \n                    \n\n\n            \n                \n                        Gets the cell (Point) corresponding to the specified linear index.\nIf the index is out of bounds, it returns a Point(0, 0).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The linear index to convert to a cell (Point).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWithPadding\n                        \n                    \n                \n            \n            \n                \ngetWithPadding(cell: Point, padding: Padding, defaultValue: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\nIf the cell is out of bounds, the method applies the specified padding mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The cell to get the pixel value from, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The padding mode to apply if the cell is out of bounds.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    255\n                                            \n\n                                            \n                                                    The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOut\n                        \n                    \n                \n            \n            \n                \nisOut(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:57\n                        \n                    \n\n\n            \n                \n                        Checks if the specified cell is out of the bounds of the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to check, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is out of bounds, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n            \n                \nlength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:166\n                        \n                    \n\n\n            \n                \n                        Gets the total number of pixels in the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total number of pixels in the bitmap (width * height).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixels\n                        \n                    \n                \n            \n            \n                \npixels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:130\n                        \n                    \n\n\n            \n                \n                        Gets all pixels in the bitmap as an array of objects containing the cell (Point) and its value.\n\n\n                        \n                            Returns :     literal type[]\n\n                        \n                            \n                                An array of objects, each containing a 'cell' property (Point) and a 'value' property (number).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(cell: Point, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/bitmap.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets the pixel value at the specified cell.\nIf the cell is out of bounds, the method does nothing.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The cell to set the pixel value at, represented as a Point object with row and column properties.\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to set at the specified cell.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:43\n                                \n                            \n                    \n                        \n                                Gets the width of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n                \n                    \n                        getheight()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/bitmap.ts:49\n                                \n                            \n                    \n                        \n                                Gets the height of the bitmap.\n\n\n                                \n                                \n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { DragArea } from \"./drag-area\";\nimport { Padding } from \"./enums\";\nimport { Point } from \"./point\";\n\n\n/** * Represents a 2D bitmap with pixel values and provides methods for accessing and manipulating the bitmap.\n * The bitmap is stored as a 2D array of numbers, where each number represents a pixel value.\n * The class provides methods for getting and setting pixel values, checking if a pixel is out of bounds,\n * and retrieving the dimensions of the bitmap.\n */   \nexport class Bitmap{\n  /** The width of the bitmap (number of columns). */\n  protected _width: number;\n  /** The height of the bitmap (number of rows). */\n  protected _height: number;\n  /** The 2D array representing the bitmap, where each element is a pixel value. */\n  protected _matrix: number[][];\n\n  /** Creates a new Bitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * @param width The width of the bitmap (number of columns). Default is 10.\n   * @param height The height of the bitmap (number of rows). Default is 10.\n   * @param oldMatrix An optional old Bitmap instance to copy values from.\n   * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 0.\n   */\n  constructor(width: number = 10, height: number = 10, oldMatrix?: Bitmap, defaultValue: number = 0) {\n    this._width = width;\n    this._height = height;\n    this._matrix = Array.from({ length: height }, () => Array(width).fill(defaultValue));\n\n    oldMatrix?._matrix?.forEach((row, r) => {\n      row.forEach((value, c) => {\n        if (r = this._height || cell.col = this._width || !Number.isInteger(cell.row) || !Number.isInteger(cell.col);\n  }\n  /** Gets the pixel value at the specified cell.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @returns The pixel value at the specified cell, or undefined if the cell is out of bounds.\n   */\n  get(cell: Point): number | undefined {\n    if (this.isOut(cell)) return undefined;\n    return this._matrix[cell.row]?.[cell.col];\n  }\n  /** Gets the binary value (0 or 1) at the specified cell.\n   * A value of 0 is considered \"true\" (black), and any other value is considered \"false\" (white).\n   * @param cell The cell to get the binary value from, represented as a Point object with row and column properties.\n   * @returns True if the pixel value is 0, false otherwise.\n   */\n  getBinary(cell: Point): boolean {\n    return this._matrix[cell.row]?.[cell.col] === 0;\n  }\n  /** Gets the pixel value at the specified cell, applying padding if the cell is out of bounds.\n   * If the cell is out of bounds, the method applies the specified padding mode.\n   * @param cell The cell to get the pixel value from, represented as a Point object with row and column properties.\n   * @param padding The padding mode to apply if the cell is out of bounds.\n   * @param defaultValue The default value to return if the cell is out of bounds and the padding mode is Padding.DefaultValue.\n   * @returns The pixel value at the specified cell, or the padded value if the cell is out of bounds.\n   */\n  getWithPadding(cell: Point, padding: Padding, defaultValue: number = 255): number {\n    if (!this.isOut(cell))\n      return this.get(cell) ?? 0;\n\n    if (padding == Padding.Edge) {\n      let row = cell.row;\n      let col = cell.col;\n\n      if (row = this.height)\n        row = this.height - 1;\n\n      if (col = this.width)\n        col = this.width - 1;\n      return this.get(new Point(row, col)) ?? 0;\n    }\n    else if (padding == Padding.DefaultValue){\n      return defaultValue;\n    }\n    return 0;\n  }\n\n  /** Sets the pixel value at the specified cell.\n    * If the cell is out of bounds, the method does nothing.\n    * @param cell The cell to set the pixel value at, represented as a Point object with row and column properties.\n    * @param value The pixel value to set at the specified cell.\n  */\n  set(cell: Point, value: number): void {\n    if(this.isOut(cell)) return;\n    this._matrix[cell.row][cell.col] = value;\n  }\n  /** Gets all cells in the bitmap as an array of Point objects.\n   * @returns An array of Point objects representing all cells in the bitmap.\n   */\n  cells(): Point[]{\n    let values: Point[] = [];\n    for(let row=0;row {\n      row.forEach((value, c) => {\n        values.push({cell: new Point(r, c), value});\n      });\n    });\n    \n    return values;\n  }\n\n  /** Gets the cell (Point) corresponding to the specified linear index.\n   * If the index is out of bounds, it returns a Point(0, 0).\n   * @param index The linear index to convert to a cell (Point).\n   * @returns A Point object representing the cell at the specified index, or Point(0, 0) if the index is out of bounds.\n   */\n  getIndexCell(index: number): Point {\n    if (index = this.length()) return new Point(0, 0);\n    const x = Math.trunc(index / this.width);\n    const y = index % this.width;\n    return new Point(x, y);\n  }\n  /** Gets the linear index corresponding to the specified cell (Point).\n   * If the cell is out of bounds, it returns 0.\n   * @param cell The cell (Point) to convert to a linear index.\n   * @returns The linear index corresponding to the specified cell, or 0 if the cell is out of bounds.\n   */\n  getCellIndex(cell: Point): number {\n    if (this.isOut(cell)) return 0;\n    return cell.row * this.width + cell.col;\n  }\n  /** Gets the total number of pixels in the bitmap.\n   * @returns The total number of pixels in the bitmap (width * height).\n   */\n  length(): number {\n    return this.width * this.height;\n  }\n}\n\n\n\n/** * Represents an interactive bitmap that extends the Bitmap class with additional features for selection and dragging.\n * This class adds functionality for selecting and dragging cells within the bitmap, as well as highlighting a specific element.\n * It also provides methods for managing the selection state and calculating histograms based on the selected pixels.\n * @extends Bitmap\n */\nexport class InteractiveBitmap extends Bitmap {\n  /** The set of selected cells, represented as strings in the format \"row,col\". */\n  private _selected: Set;\n  /** The drag area for managing dragging operations within the bitmap. */\n  private _dragArea: DragArea;  \n  /** The currently highlighted element, or null if no element is highlighted. Used in morphological operations. */\n  highlightedElement: Point | null = null;\n\n  /** Gets the drag area for managing dragging operations within the bitmap. */\n  get dragArea(): DragArea {\n    return this._dragArea;\n  }\n  /** Sets the drag area for managing dragging operations within the bitmap. */\n  set dragArea(drag_area: DragArea) {\n    this._dragArea = drag_area;\n  }\n  /** Gets the currently selected cells as an array of Point objects.\n   * @returns An array of Point objects representing the selected cells.\n   */\n  get selected(): Point[] {\n    return Array.from(this._selected).map(pos => {\n      const [row, col] = pos.split(',').map(Number);\n      return new Point(row, col);\n    });\n  }\n\n  /** Creates a new InteractiveBitmap instance with the specified width, height, and optional default pixel value.\n   * If an old matrix is provided, it copies the values from the old matrix to the new one, up to the new dimensions.\n   * Initializes the selection set and drag area.\n    * @param width The width of the bitmap (number of columns).\n    * @param height The height of the bitmap (number of rows).\n    * @param oldMatrix An optional old Bitmap instance to copy values from.\n    * @param defaultValue The default pixel value to use for uninitialized pixels. Default is 255 (white). \n  */\n  constructor(width: number, height: number, oldMatrix?: Bitmap, defaultValue: number = 255) {\n    super(width, height, oldMatrix, defaultValue);\n    this._selected = new Set();\n    this._dragArea = new DragArea();\n  }\n\n  /** Checks if the specified cell is currently being dragged.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is being dragged, false otherwise.\n   */\n  isDragged(cell: Point): boolean {\n    return this._dragArea.dragging&&this._dragArea.includes(cell);\n  }\n  /** Checks if the specified cell is currently selected.\n   * @param cell The cell to check, represented as a Point object with row and column properties.\n   * @returns True if the cell is selected, false otherwise.\n   */\n  isSelected(cell: Point): boolean {\n    if (this.isOut(cell)) \n      return false;\n    return this._selected.has(cell.toString());\n  }\n\n  /** Selects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to select, represented as a Point object with row and column properties.\n   */\n  select(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.add(cell.toString());\n  }\n  /** Unselects the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to unselect, represented as a Point object with row and column properties.\n   */\n  unselect(cell: Point): void {\n    if (this.isOut(cell)) \n      return;\n    this._selected.delete(cell.toString());\n  }\n  /** Sets the selection state of the specified cell.\n   * If the cell is out of bounds, the method does nothing.\n   * @param cell The cell to set the selection state for, represented as a Point object with row and column properties.\n   * @param value True to select the cell, false to unselect it.\n   */\n  setSelection(cell: Point, value: boolean): void {\n    if (value) \n      this.select(cell);\n    else \n      this.unselect(cell);\n  }\n  /** Clears the current selection, unselecting all selected cells. */\n  clearSelection(): void {\n    this._selected.clear();\n  }\n  /** Calculates the histogram of pixel values in the bitmap.\n   * The histogram is calculated based on the specified group size and whether to include only selected pixels.\n   * @param groupSize The size of each group in the histogram. Default is 1 (individual pixel values).\n   * @param selectedOnly If true, only selected pixels are included in the histogram.\n   * @returns An array representing the histogram of pixel values.\n   */\n  histogram(groupSize: number = 1, selectedOnly: boolean): number[] {\n    let histogram = Array(Math.ceil(256 / groupSize)).fill(0);\n\n    this.pixels().forEach(\n      pixel => {\n        if (!selectedOnly || (selectedOnly && this.isSelected(pixel.cell)))\n          if (!Number.isNaN(pixel.value))\n            histogram[Math.trunc(pixel.value / groupSize)]++;\n      }\n    );\n\n    return histogram;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BitmapRenderer.html":{"url":"classes/BitmapRenderer.html","title":"class - BitmapRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BitmapRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/render-utils.ts\n        \n\n\n            \n                Description\n            \n            \n                Utility class for rendering bitmaps onto a canvas.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorScale\n                            \n                            \n                                grid\n                            \n                            \n                                gridColor\n                            \n                            \n                                headerColor\n                            \n                            \n                                headers\n                            \n                            \n                                numbers\n                            \n                            \n                                pixelSize\n                            \n                            \n                                selectionColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createDiagonalPattern\n                            \n                            \n                                drawGrid\n                            \n                            \n                                drawString\n                            \n                            \n                                getCursorCell\n                            \n                            \n                                    Private\n                                getOffsetX\n                            \n                            \n                                    Private\n                                getOffsetY\n                            \n                            \n                                isCursorOnCell\n                            \n                            \n                                isCursorOnColHeader\n                            \n                            \n                                isCursorOnRowHeader\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        colorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:18\n                        \n                    \n\n            \n                \n                    Color scale used for rendering the bitmap. Default is Grayscale.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:12\n                        \n                    \n\n            \n                \n                    If true, the grid lines will be drawn. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#74777f'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:21\n                        \n                    \n\n            \n                \n                    Color used for drawing the grid lines. Default is '#74777f'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headerColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#c1cce5'\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:23\n                        \n                    \n\n            \n                \n                    Color used for the header background. Default is '#c1cce5'.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:16\n                        \n                    \n\n            \n                \n                    If true, row and column headers will be displayed. Default is false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:14\n                        \n                    \n\n            \n                \n                    If true, the numerical values of each cell will be displayed. Default is true.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:9\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap when rendered on the canvas. Default is 50.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"#222\"\n                    \n                \n                    \n                        \n                                Defined in src/app/static/render-utils.ts:25\n                        \n                    \n\n            \n                \n                    Color used for selection highlighting. Default is '#222'.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createDiagonalPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDiagonalPattern(size: number, lineWidth: number, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:153\n                        \n                    \n\n\n            \n                \n                        Creates a diagonal line pattern for selection highlighting.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                size\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    20\n                                            \n\n                                            \n                                                    The size of the pattern canvas. Default is 20.\n\n                                            \n                                        \n                                        \n                                                lineWidth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    The width of the diagonal lines. Default is 2.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    '#ccc'\n                                            \n\n                                            \n                                                    The color of the diagonal lines. Default is '#ccc'.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HTMLCanvasElement\n\n                        \n                            \n                                A canvas element containing the diagonal line pattern.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawGrid\n                        \n                    \n                \n            \n            \n                \ndrawGrid(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap, color: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:125\n                        \n                    \n\n\n            \n                \n                        Draws the grid lines on the canvas for the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to draw the grid for.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color of the grid lines.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawString\n                        \n                    \n                \n            \n            \n                \ndrawString(ctx: CanvasRenderingContext2D, scale: number, text: string, x: number, y: number, color: string, stroke: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:111\n                        \n                    \n\n\n            \n                \n                        Draws a string on the canvas at the specified position with the given scale and color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The scale factor for the text size.\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text string to be drawn.\n\n                                            \n                                        \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The x-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The y-coordinate where the text will be drawn.\n\n                                            \n                                        \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The color of the text.\n\n                                            \n                                        \n                                        \n                                                stroke\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    If true, the text will be stroked for better visibility. Default is false.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCursorCell\n                        \n                    \n                \n            \n            \n                \ngetCursorCell(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:52\n                        \n                    \n\n\n            \n                \n                        Gets the cell coordinates (row and column) under the cursor.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing the row and column indices of the cell under the cursor.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetX\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetX()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets the X offset (row headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The X offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOffsetY\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOffsetY()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:99\n                        \n                    \n\n\n            \n                \n                        Gets the Y offset (column headers) for rendering the bitmap.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The Y offset in pixels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnCell\n                        \n                    \n                \n            \n            \n                \nisCursorOnCell(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:36\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over a specific cell in the bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over a cell in the bitmap, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnColHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnColHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the column header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the column header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCursorOnRowHeader\n                        \n                    \n                \n            \n            \n                \nisCursorOnRowHeader(x: number, y: number, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:80\n                        \n                    \n\n\n            \n                \n                        Checks if the cursor is over the row header area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the cursor.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to check against.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cursor is over the row header area, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        render\n                        \n                    \n                \n            \n            \n                \nrender(ctx: CanvasRenderingContext2D, scale: number, bitmap: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/render-utils.ts:181\n                        \n                    \n\n\n            \n                \n                        Renders the bitmap onto the provided canvas context with the specified scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        CanvasRenderingContext2D\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The 2D rendering context of the canvas.\n\n                                            \n                                        \n                                        \n                                                scale\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The scale factor for rendering.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to be rendered.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Bitmap, InteractiveBitmap } from \"./bitmap\";\nimport { getContrastColor, scaleColor } from \"./color-utils\";\nimport { ColorScale } from \"./enums\";\nimport { Point } from \"./point\";\n\n/** Utility class for rendering bitmaps onto a canvas. */\nexport class BitmapRenderer {\n    /** Size of each pixel in the bitmap when rendered on the canvas. Default is 50. */\n    pixelSize: number = 50;\n    \n    /** If true, the grid lines will be drawn. Default is true. */\n    grid: boolean = true;\n    /** If true, the numerical values of each cell will be displayed. Default is true. */\n    numbers: boolean = true;\n    /** If true, row and column headers will be displayed. Default is false. */\n    headers: boolean = false;\n    /** Color scale used for rendering the bitmap. Default is Grayscale. */\n    colorScale: ColorScale = ColorScale.Grayscale;\n    \n    /** Color used for drawing the grid lines. Default is '#74777f'. */\n    gridColor: string = '#74777f';\n    /** Color used for the header background. Default is '#c1cce5'. */\n    headerColor: string = '#c1cce5';\n    /** Color used for selection highlighting. Default is '#222'. */\n    selectionColor: string = \"#222\";\n\n\n    //cursor\n\n    /** Checks if the cursor is over a specific cell in the bitmap.\n     * @param x The x-coordinate of the cursor.\n     * @param y The y-coordinate of the cursor.\n     * @param bitmap The bitmap to check against.\n     * @returns True if the cursor is over a cell in the bitmap, false otherwise.\n     */\n    isCursorOnCell(x: number, y: number, bitmap: Bitmap): boolean {\n       let cell = this.getCursorCell(x, y);\n       return (\n           x >= this.getOffsetX() &&\n           y >= this.getOffsetY() &&\n           cell.row >= 0 &&\n           cell.row = 0 &&\n           cell.col = offsetX && x = offsetY && y  bitmap.isDragged(cell);\n                const isSel = (cell: Point) => bitmap.isSelected(cell) || bitmap.isDragged(cell);\n                if(!isSel(cell)) continue;\n\n\n                \n                ctx.fillStyle = pattern;\n                ctx.strokeStyle = selectionColor;\n\n                // const value = bitmap.get(row, col);\n                // const fillColor = scaleColor(value, colorScale); \n                // if(isDark(fillColor)){\n                // }\n                // else{\n                //     ctx.fillStyle = darkPattern;\n                //     ctx.strokeStyle = getContrastColor(selectionColor);\n                // }\n                if(isSel(cell) && (bitmap.dragArea.button != 2 || !isDragged(cell))){\n                    const width = Math.round(((col+1) * pixelSize + offsetX) * scale)-Math.round((col * pixelSize + offsetX) * scale);\n                    const height = Math.round(((row+1) * pixelSize + offsetY) * scale)-Math.round((row * pixelSize + offsetY) * scale);\n                    ctx.fillRect(Math.round((col * pixelSize + offsetX) * scale), Math.round((row * pixelSize + offsetY) * scale), width, height);\n                }\n\n\n                //above\n                if((isSel(cell)&&!isSel(cell.up())) || (isDragged(cell)&&!isDragged(cell.up()))) {\n                    let slw = bitmap.isOut(cell.up()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(((col * pixelSize + offsetX) * scale)+0.5,               Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.lineTo(((col * pixelSize + offsetX + pixelSize) * scale)-0.5,   Math.round((row * pixelSize + offsetY + slw) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //bottom\n                if((isSel(cell)&&!isSel(cell.down())) || (isDragged(cell)&&!isDragged(cell.down()))) {\n                    let slw = bitmap.isOut(cell.down()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX) * scale)+0.5,             Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + pixelSize + offsetX) * scale)-0.5, Math.round((row * pixelSize + offsetY + pixelSize - slw) * scale)+0.5);\n                    ctx.stroke();\n                }\n                //left\n                if((isSel(cell)&&!isSel(cell.left())) || (isDragged(cell)&&!isDragged(cell.left()))) {\n                    let slw = bitmap.isOut(cell.left()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + slw) * scale)-0.5,     Math.round((row * pixelSize + pixelSize + offsetY) * scale)-0.5);\n                    ctx.stroke();\n                }\n                //right\n                if((isSel(cell)&&!isSel(cell.right())) || (isDragged(cell)&&!isDragged(cell.right()))) {\n                    let slw = bitmap.isOut(cell.right()) ? slwc/2 : 0;\n                    ctx.beginPath();\n                    ctx.moveTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY) * scale)+0.5);\n                    ctx.lineTo(Math.round((col * pixelSize + offsetX + pixelSize - slw) * scale)+0.5,     Math.round((row * pixelSize + offsetY + pixelSize) * scale)-0.5);\n                    ctx.stroke();\n                }\n\n            }\n        }\n       \n        \n\n        //numbers\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.lineJoin = 'round';\n        if (numbers) {\n            for (let row = 0; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BitmapStorageService.html":{"url":"injectables/BitmapStorageService.html","title":"injectable - BitmapStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  BitmapStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/bitmap-storage/bitmap-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle storage and retrieval of bitmaps using local storage.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                has\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if a bitmap with the given ID exists in storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the bitmap exists, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(id: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Loads a bitmap from local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier of the bitmap to load.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap | null\n\n                        \n                            \n                                The loaded bitmap, or null if not found or invalid.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(id: string, bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Saves a bitmap to local storage.\nSee Bitmap\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The identifier for the bitmap.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap to save.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bitmap-storage-'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/bitmap-storage/bitmap-storage.service.ts:11\n                        \n                    \n\n            \n                \n                    Key prefix for storing bitmaps in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\n\n\n/** Service to handle storage and retrieval of bitmaps using local storage. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BitmapStorageService {\n  /** Key prefix for storing bitmaps in local storage. */\n  private _storageKey: string = 'bitmap-storage-';\n\n  /** Saves a bitmap to local storage.\n   * @param id The identifier for the bitmap.\n   * @param bitmap The bitmap to save.\n   * @see Bitmap\n   */\n  save(id: string, bitmap: Bitmap) {\n    localStorage.setItem(this._storageKey + id, JSON.stringify(bitmap));\n  }\n\n  /** Checks if a bitmap with the given ID exists in storage.\n   * @param id The identifier to check.\n   * @returns True if the bitmap exists, false otherwise.\n   */\n  has(id: string): boolean {\n    return this.load(this._storageKey + id) !== null;\n  }\n\n  /** Loads a bitmap from local storage.\n   * @param id The identifier of the bitmap to load.\n   * @returns The loaded bitmap, or null if not found or invalid.\n   * @see Bitmap\n   */\n  load(id: string | null): Bitmap | null {\n    if (!id) return null;\n    const raw = localStorage.getItem(this._storageKey + id);\n    if (!raw) return null;\n\n    try {\n      const obj = JSON.parse(raw) as any;\n      if (!obj || typeof obj !== \"object\") return null;\n      if (typeof obj._width !== \"number\" || typeof obj._height !== \"number\" || obj._matrix === undefined || obj._matrix === null) return null;\n      const inst = Object.create(Bitmap.prototype) as Bitmap;\n      return Object.assign(inst, obj);\n    } catch {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConvolutionalFilterAnimationComponent.html":{"url":"components/ConvolutionalFilterAnimationComponent.html","title":"component - ConvolutionalFilterAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ConvolutionalFilterAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate the application of a convolutional filter on a bitmap image.\nIt allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-convolutional-filter-animation\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                            MatIconModule\n                            MatSliderModule\n                            RouterModule\n                            MatFormFieldModule\n                            MatMenuModule\n                                BitmapComponent\n                            FormsModule\n                                AnimationControllerComponent\n                            MatCheckboxModule\n                            MatSelectModule\n                            MathjaxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./convolutional-filter-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./convolutional-filter-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                filteredBitmap\n                            \n                            \n                                kernel\n                            \n                            \n                                padding\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                resultKernel\n                            \n                            \n                                selectedColorScale\n                            \n                            \n                                showBase\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                showNumberValues\n                            \n                            \n                                sourceKernel\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                    Private\n                                applyFilter\n                            \n                            \n                                getEquation\n                            \n                            \n                                    Private\n                                getResultKernel\n                            \n                            \n                                    Private\n                                getSourceKernel\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                openDialog\n                            \n                            \n                                refresh\n                            \n                            \n                                    Private\n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                            \n                        \n\n                \n                    \n                            Constructor to initialize the component with necessary services and load initial data.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage dialog interactions.\n\n                                                        \n                                                \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to load and save bitmaps in storage.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyFilter\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyFilter(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Applies the convolutional filter to the source bitmap and stores the result in the destination bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the filtered result is stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the convolutional filter is applied.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEquation\n                        \n                    \n                \n            \n            \n                \ngetEquation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Generates a LaTeX representation of the convolution operation for display.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getResultKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResultKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:233\n                        \n                    \n\n\n            \n                \n                        Computes the result kernel by multiplying the convolutional kernel with the source kernel.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the weighted values used to compute the filtered pixel value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceKernel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceKernel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:217\n                        \n                    \n\n\n            \n                \n                        Retrieves the kernel of pixel values centered around the current animation index.\n\n\n                        \n                            Returns :         Kernel\n\n                        \n                            \n                                A Kernel instance containing the pixel values in the neighborhood.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to jump to a specific pixel in the animation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Opens a dialog to edit the convolutional kernel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    setValues(length: number, destination: InteractiveBitmap, source: InteractiveBitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:205\n                        \n                    \n\n\n            \n                \n                        Sets pixel values from the source bitmap to the destination bitmap up to a specified length.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to set.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The destination bitmap where the pixel values are set.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap from which the pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:88\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the convolutional filter is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"convolutional-filter\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:59\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:51\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the convolutional filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    The convolutional kernel used for filtering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Padding\n\n                    \n                \n                \n                    \n                        Default value : Padding.Edge\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Padding strategy used when accessing pixels outside the bitmap boundaries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:53\n                        \n                    \n\n            \n                \n                    The result bitmap after the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    The kernel representing the weighted values used to compute the filtered pixel value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedColorScale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Grayscale\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:83\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:81\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result for comparison.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:75\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:77\n                        \n                    \n\n            \n                \n                    If true, headers (row/column indices) are displayed around the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNumberValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:79\n                        \n                    \n\n            \n                \n                    If true, pixel values are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceKernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Default value : new Kernel(3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    The kernel representing the current neighborhood of pixels being processed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts:57\n                        \n                    \n\n            \n                \n                    Used to trigger re-rendering of the bitmap component when the bitmap changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { FormsModule } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { KernelDialogComponent } from '../dialogs/kernel-dialog/kernel-dialog.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Kernel } from '../../static/kernel';\nimport { ColorScale, OutOfRangeHandling, Padding, QuantizationMode } from '../../static/enums';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Point } from '../../static/point';\nimport { MatrixDisplayComponent } from \"../matrix-display/matrix-display.component\";\nimport { MathjaxModule } from 'mathjax-angular';\nimport { MatSelectModule } from '@angular/material/select';\n\n/** Component to visualize and animate the application of a convolutional filter on a bitmap image.\n * It allows users to see how the convolutional filter processes each pixel in the image step-by-step.\n */\n@Component({\n  selector: 'app-convolutional-filter-animation',\n  imports: [\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSliderModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    BitmapComponent,\n    FormsModule,\n    AnimationControllerComponent,\n    MatCheckboxModule,\n    MatSelectModule,\n    MathjaxModule,\n],\n  templateUrl: './convolutional-filter-animation.component.html',\n  styleUrl: './convolutional-filter-animation.component.css'\n})\nexport class ConvolutionalFilterAnimationComponent {\n  /** The original bitmap image to which the convolutional filter is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the convolutional filter. */\n  filteredBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the animation. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n\n\n  /** Used to trigger re-rendering of the bitmap component when the bitmap changes. */\n  tick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = \"convolutional-filter\";\n\n  /** The convolutional kernel used for filtering. */\n  kernel: Kernel = new Kernel(3);\n  /** The kernel representing the current neighborhood of pixels being processed. */\n  sourceKernel: Kernel = new Kernel(3);\n  /** The kernel representing the weighted values used to compute the filtered pixel value. */\n  resultKernel: Kernel = new Kernel(3);\n  /** Padding strategy used when accessing pixels outside the bitmap boundaries. */\n  padding: Padding = Padding.Edge;\n\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers (row/column indices) are displayed around the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, pixel values are displayed on the bitmap. */\n  showNumberValues: boolean = true;\n  /** If true, the original bitmap is shown under the result for comparison. */\n  showBase: boolean = false;\n  /** Color scale used for displaying the bitmap. */\n  selectedColorScale: ColorScale = ColorScale.Grayscale;\n  \n  \n  //controls\n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n\n  /** Constructor to initialize the component with necessary services and load initial data. \n   * @param dialog Service to manage dialog interactions.\n   * @param bitmapStorage Service to load and save bitmaps in storage.\n  */\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n    \n    this.kernel.load(\"kernel\");\n    this.refresh();\n  }\n\n  /** Opens a dialog to edit the convolutional kernel. */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(KernelDialogComponent, {\n      width: '650px',\n      disableClose: true,\n      // hasBackdrop: false,\n      data: this.kernel.clone()\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.kernel = result;\n        this.sourceKernel = new Kernel(result.size);\n        this.resultKernel = new Kernel(result.size);\n        this.kernel.save(\"kernel\");\n        this.refresh();\n      }\n    });\n  }\n  \n  /** Refreshes the filtered and result bitmaps by reapplying the convolutional filter and resets the animation. */\n  refresh(): void {\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.filteredBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.applyFilter(this.bitmap.length(), this.filteredBitmap, this.bitmap);\n    this.animate();\n  }\n\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    const index = this.animationIndex;\n    this.bitmap.clearSelection();\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.setValues(index+1, this.resultBitmap, this.filteredBitmap);\n    \n\n    this.sourceKernel = this.getSourceKernel()\n    this.resultKernel = this.getResultKernel();\n\n    const size = this.kernel.size;\n    const r = Math.trunc((size - 1) / 2);\n    const cell = this.bitmap.getIndexCell(index);\n\n    if (index \n    \n\n    \n        \n\n    \n        \n            edit\n            Edit\n        \n        \n            grid_on\n            Kernel\n        \n        \n        \n            Padding\n            \n                Zero\n                Edge\n            \n        \n        \n        Pixel Size\n        \n            \n        \n        \n        \n            Numbers\n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Base\n        \n        \n        \n        \n    \n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"\n                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"\n                    (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"\n                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">\n\n                \n            \n        \n\n    \n\n    \n        \n             -->\n            \n                asterisk\n             -->\n\n             -->\n            \n            \n            \n                equal\n             -->\n\n             -->\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        edit            Edit                            grid_on            Kernel                                    Padding                            Zero                Edge                                    Pixel Size                                                        Numbers                            Grid                            Headers                            Base                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"showNumberValues&&pixelSize>=40\" [tick]=\"tick\"                    [selectedColorScale]=\"selectedColorScale\" [userSelect]=\"false\" style=\"margin: auto;\"                    (cellClicked)=\"onCellClicked($event)\">                                                                        =40\" [showGrid]=\"showGrid\"                    [selectedColorScale]=\"selectedColorScale\" [showNumbers]=\"showNumberValues&&pixelSize>=40\"                    [tick]=\"tick\" [userSelect]=\"false\" (cellClicked)=\"onCellClicked($event)\">                                                                 -->                            asterisk             -->             -->                                                    equal             -->             -->            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConvolutionalFilterAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/docs/docs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./docs.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-docs',\n  imports: [],\n  templateUrl: './docs.component.html',\n  styleUrl: './docs.component.css'\n})\nexport class DocsComponent {\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DragArea.html":{"url":"classes/DragArea.html","title":"class - DragArea","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DragArea\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/drag-area.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a draggable area defined by two points (start and end).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                ctrlKey\n                            \n                            \n                                dragEnd\n                            \n                            \n                                dragging\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAreaCells\n                            \n                            \n                                includes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:10\n                        \n                    \n\n            \n                \n                    Mouse button used for dragging (0: left, 1: middle, 2: right).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ctrlKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:8\n                        \n                    \n\n            \n                \n                    Indicates whether the Ctrl key is pressed during the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:14\n                        \n                    \n\n            \n                \n                    Ending point of the drag operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:6\n                        \n                    \n\n            \n                \n                    Indicates whether the area is currently being dragged.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dragStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/drag-area.ts:12\n                        \n                    \n\n            \n                \n                    Starting point of the drag operation.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAreaCells\n                        \n                    \n                \n            \n            \n                \ngetAreaCells()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:32\n                        \n                    \n\n\n            \n                \n                        Gets all cells within the dragged area.\n\n\n                        \n                            Returns :         Point[]\n\n                        \n                            \n                                An array of Points representing all cells within the dragged area.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        includes\n                        \n                    \n                \n            \n            \n                \nincludes(cell: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/drag-area.ts:20\n                        \n                    \n\n\n            \n                \n                        Checks if a given cell is within the dragged area.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to check.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the cell is within the dragged area, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Point } from \"./point\";\n\n/** Class representing a draggable area defined by two points (start and end). */\nexport class DragArea{\n    /** Indicates whether the area is currently being dragged. */\n    dragging: boolean = false;\n    /** Indicates whether the Ctrl key is pressed during the drag operation. */\n    ctrlKey: boolean = false;\n    /** Mouse button used for dragging (0: left, 1: middle, 2: right). */\n    button: number = 0;\n    /** Starting point of the drag operation. */\n    dragStart: Point = new Point(0, 0);\n    /** Ending point of the drag operation. */\n    dragEnd: Point = new Point(0, 0);\n\n    /** Checks if a given cell is within the dragged area.\n     * @param cell The Point to check.\n     * @returns True if the cell is within the dragged area, false otherwise.\n     */\n    includes(cell: Point): boolean {\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n        return cell.row = select_row_start && cell.col = select_col_start;\n    }\n\n    /** Gets all cells within the dragged area.\n     * @returns An array of Points representing all cells within the dragged area.\n     */\n    getAreaCells(): Point[] {\n        const cells: Point[] = [];\n        const select_row_start = Math.min(this.dragStart.row, this.dragEnd.row);\n        const select_row_end = Math.max(this.dragStart.row, this.dragEnd.row);\n\n        const select_col_start = Math.min(this.dragStart.col, this.dragEnd.col);\n        const select_col_end = Math.max(this.dragStart.col, this.dragEnd.col);\n\n        for(let row = select_row_start; row \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GrassfireAnimationComponent.html":{"url":"components/GrassfireAnimationComponent.html","title":"component - GrassfireAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  GrassfireAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/grassfire-animation/grassfire-animation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-grassfire-animation\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                                AnimationControllerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./grassfire-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./grassfire-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _borderPoints\n                            \n                            \n                                    Private\n                                _dist\n                            \n                            \n                                    Private\n                                _frameId\n                            \n                            \n                                    Private\n                                _medial\n                            \n                            \n                                    Private\n                                _medialPointsBfsQueue\n                            \n                            \n                                    Private\n                                _medialPointsVisited\n                            \n                            \n                                animationIndex\n                            \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                    Readonly\n                                eps\n                            \n                            \n                                    Readonly\n                                height\n                            \n                            \n                                    Readonly\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                drawFireFront\n                            \n                            \n                                drawMedialAxis\n                            \n                            \n                                drawStartShape\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawFireFront\n                        \n                    \n                \n            \n            \n                \ndrawFireFront(animationIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animationIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawMedialAxis\n                        \n                    \n                \n            \n            \n                \ndrawMedialAxis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawStartShape\n                        \n                    \n                \n            \n            \n                \ndrawStartShape()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:200\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _borderPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _dist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _frameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medial\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medialPointsBfsQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medialPointsVisited\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.79\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 750\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1050\n                    \n                \n                    \n                        \n                                Defined in src/app/components/grassfire-animation/grassfire-animation.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { getVar } from '../../static/style-utils';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport cvReadyPromise from '@techstark/opencv-js';\n\n@Component({\n  selector: 'app-grassfire-animation',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    AnimationControllerComponent\n  ],\n  templateUrl: './grassfire-animation.component.html',\n  styleUrl: './grassfire-animation.component.css'\n})\nexport class GrassfireAnimationComponent {\n    @ViewChild('canvas') canvasRef!: ElementRef;\n  readonly width = 1050;\n  readonly height = 750;\n  // readonly eps = 0.01;\n  readonly eps = 0.79;\n\n  animationIndex = 0;\n  // animationElements: MATAnimationElement[] = [];\n\n  private _borderPoints: [number, number][] = [];\n  private _dist: number[][] = [];\n  private _medial: [number, number, number][] = [];\n  private _frameId: number = 0;\n  private _medialPointsVisited = new Set();\n  private _medialPointsBfsQueue: [number, number, number][] = [];\n\n\n  constructor(private ngZone: NgZone) { }\n\n  drawStartShape(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const padding = 50;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    ctx.imageSmoothingEnabled = false;\n    // ctx.fillStyle = getVar('--mat-sys-primary');\n    ctx.fillStyle = \"#162d59\";\n    // ctx.beginPath();\n    // ctx.ellipse(200, 200, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(280, 280, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(290, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n\n    // ctx.beginPath();\n    // ctx.ellipse(120, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    ctx.fillRect(padding, padding, this.width - 2 * padding - 1, this.height - 2 * padding - 1);\n    // ctx.fillRect(10, 150, 501, 601);\n    // ctx.fillRect(350, 250, 401, 201);\n  }\n  drawMedialAxis(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.fillStyle = getVar('--mat-sys-on-primary');\n    ctx.fillStyle = \"#fcf8f9\";\n    for (const [x, y] of this._medial)\n      ctx.fillRect(x, y, 1, 1);\n  }\n \n\n\n  async ngAfterViewInit() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n    this.drawStartShape();\n\n    // pobieramy dane obrazu\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n\n    function isInside(x: number, y: number): boolean {\n      const idx = (y * canvas.width + x) * 4;\n      return data[idx + 3] > 0; // sprawdzamy alpha kanał\n    }\n    function isBorder(x: number, y: number): boolean {\n      if (!isInside(x, y)) return false;\n      return !(isInside(x - 1, y) && isInside(x + 1, y) && isInside(x, y - 1) && isInside(x, y + 1));\n    }\n    for (let y = 1; y  {\n        \n        this._frameId = requestAnimationFrame(this.animate);\n        \n        this.drawStartShape();\n        this.drawFireFront(this.animationIndex);\n        this.drawMedialAxis();\n\n        // this.drawAnimationElement(this.animationIndex);\n      });\n    }\n  }\n  drawFireFront(animationIndex: number) {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const threshold = animationIndex;\n\n    for (let y = 0; y  0 && d \n    \n\n    \n        \n\n\n\n    \n        \n        \n        \n    \n\n    \n        \n             \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                     '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GrassfireAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpComponent.html":{"url":"components/HelpComponent.html","title":"component - HelpComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HelpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/help/help.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./help.component.html\n            \n\n\n\n            \n                styleUrl\n                ./help.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\n@Component({\n  selector: 'app-help',\n  imports: [\n    MatCardModule\n  ],\n  templateUrl: './help.component.html',\n  styleUrl: './help.component.css'\n})\nexport class HelpComponent {\n\n}\n\n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HelpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history/history.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage applied expression history.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                history\n                            \n                            \n                                    Private\n                                historyLimit\n                            \n                            \n                                    Private\n                                storageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToHistory\n                            \n                            \n                                clearHistory\n                            \n                            \n                                getHistory\n                            \n                            \n                                getHistoryReversed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToHistory\n                        \n                    \n                \n            \n            \n                \naddToHistory(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Adds an action to the history, ensuring no duplicates and respecting the history limit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The action (expression) to add to the history.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHistory\n                        \n                    \n                \n            \n            \n                \nclearHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Clears the history both in memory and in local storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves the history.\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The history array.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHistoryReversed\n                        \n                    \n                \n            \n            \n                \ngetHistoryReversed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/history/history.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Retrieves the history in reverse order (most recent first).\n\n\n                        \n                            Returns :     string[]\n\n                        \n                            \n                                The reversed history array.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:9\n                        \n                    \n\n            \n                \n                    List of applied expressions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        historyLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:11\n                        \n                    \n\n            \n                \n                    Maximum number of history entries to keep.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'history'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/history/history.service.ts:13\n                        \n                    \n\n            \n                \n                    Key for storing the history in local storage.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Service to manage applied expression history. */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  /** List of applied expressions. */\n  private history: string[] = [];\n  /** Maximum number of history entries to keep. */\n  private historyLimit: number = 25;\n  /** Key for storing the history in local storage. */\n  private storageKey: string = 'history';\n\n\n  /** Adds an action to the history, ensuring no duplicates and respecting the history limit.\n   * @param action The action (expression) to add to the history.\n   */\n  addToHistory(action: string): void {\n    if(this.history.includes(action)) \n      this.history = this.history.filter(item => item !== action);\n    \n    this.history.push(action);\n    if (this.history.length > this.historyLimit) {\n      this.history.shift();\n    }\n    localStorage.setItem(this.storageKey, JSON.stringify(this.history));\n  }\n\n  /** Retrieves the history in reverse order (most recent first).\n   * @returns The reversed history array.\n   */\n  getHistoryReversed(): string[] {\n    return this.getHistory().slice().reverse();\n  }\n\n  /** Retrieves the history.\n   * @returns The history array.\n   */\n  getHistory(): string[] {\n    const history = localStorage.getItem(this.storageKey);\n    if (history) {\n      this.history = JSON.parse(history);\n    }\n    return this.history;\n  }\n\n  /** Clears the history both in memory and in local storage. */\n  clearHistory(): void {\n    this.history = [];\n    localStorage.removeItem(this.storageKey);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatDividerModule\n                            MatIconModule\n                            MatListModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  imports: [\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    RouterModule,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n    \n        Bitmap Editor\n        open_in_new\n    \n\n    \n        \n        Bitmap element controls\n    \n\n    \n        \n            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:\n        \n        \n            \n                Left-click on a cell: Selects the clicked cell.\n            \n            \n                Right-click on a selected cell: Deselects the clicked cell.\n            \n            \n                Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.\n            \n            \n                Click on a column header: Selects or deselects the whole column.\n            \n            \n                Click on a row header: Selects or deselects the whole row.\n            \n            \n                Ctrl + A: Selects all cells in the editor.\n            \n            \n                Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.\n            \n            \n                Ctrl + Z: Undoes the last action.\n            \n            \n                Ctrl + Y: Redoes the last undone action.\n            \n        \n        \n    \n\n\n    \n        Expression\n    \n    \n        \n            The editor includes support for mathematical expressions using the expr-eval library, enabling\n            advanced manipulation of pixel values.\n            You can write formulas to apply color transformations, perform calculations for each pixel, or generate\n            procedural effects.\n        \n            \n        \n            Each pixel’s position can be accessed through the variables x (column index) and y (row index).\n            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,\n            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.\n                \n        \n        \n            Expressions can use these variables and functions together with built-in math functions such as\n            sin(), cos(), max(), and random()\n            to create dynamic and complex image modifications.\n        \n        \n    \n\n    \n        Expression Examples\n    \n\n    \n        \n            \n                \n                    255\n                \n            \n            \n                \n                    b(x, y)*1.1\n                \n            \n            \n                \n                    b(y, min(WIDTH, HEIGHT)-1-x)\n                \n            \n            \n                \n                    x/WIDTH*255\n                \n            \n            \n                \n                    simplex(x, y, RANDOM) * 128 + 128\n                \n            \n        \n        \n    \n\n    \n    \n        Expression Syntax\n    \n\n    \n        \n            \n                Variables\n                \n                    x: The column index of the pixel being processed (0 to WIDTH-1).\n                    y: The row index of the pixel being processed (0 to HEIGHT-1).\n                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).\n                \n            \n            \n                Operators\n            \n            \n                Unary Operators\n            \n            \n                Predefined Functions\n                \n                    b(x, y): Returns the value of the pixel at (x, y).\n                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.\n                \n            \n            \n                Constants\n                \n                    WIDTH: The width of the bitmap.\n                    HEIGHT: The height of the bitmap.\n                    RANDOM: Random value between 0 and 255.\n\n                \n            \n        \n        \n    \n\n    \n    \n    \n        Binary Bitmap Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n        \n    \n\n    \n\n    \n        Structuring Element Editor\n        open_in_new\n    \n    \n        Controls\n    \n    \n        \n            Ctrl + Z: Undo the last action. -->\n            Ctrl + Y: Redo the last undone action. -->\n            Ctrl + C: Copy the selected cells. -->\n            Ctrl + V: Paste the copied cells. -->\n            LMB: Sets a pixel\n            RMB: Unsets a pixel\n            MMB: Sets the origin of the structuring element\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Bitmap Editor        open_in_new                        Bitmap element controls                            The Bitmap Editor allows you to manipulate pixel data in a grid format. You can:                                            Left-click on a cell: Selects the clicked cell.                                        Right-click on a selected cell: Deselects the clicked cell.                                        Ctrl + Left-click: Adds the clicked cell to the current selection without deselecting other cells.                                        Click on a column header: Selects or deselects the whole column.                                        Click on a row header: Selects or deselects the whole row.                                        Ctrl + A: Selects all cells in the editor.                                        Ctrl + C: Copies the currently selected cells to the clipboard in CSV format.                                        Ctrl + Z: Undoes the last action.                                        Ctrl + Y: Redoes the last undone action.                                            Expression                            The editor includes support for mathematical expressions using the expr-eval library, enabling            advanced manipulation of pixel values.            You can write formulas to apply color transformations, perform calculations for each pixel, or generate            procedural effects.                                        Each pixel’s position can be accessed through the variables x (column index) and y (row index).            You can also access the function b(x, y), which returns the value of the pixel located at the given coordinates,            as well as constants WIDTH and HEIGHT that represent the dimensions of the bitmap.                                            Expressions can use these variables and functions together with built-in math functions such as            sin(), cos(), max(), and random()            to create dynamic and complex image modifications.                                Expression Examples                                                                255                                                                            b(x, y)*1.1                                                                            b(y, min(WIDTH, HEIGHT)-1-x)                                                                            x/WIDTH*255                                                                            simplex(x, y, RANDOM) * 128 + 128                                                                Expression Syntax                                            Variables                                    x: The column index of the pixel being processed (0 to WIDTH-1).                    y: The row index of the pixel being processed (0 to HEIGHT-1).                    v: The current value of the pixel being processed; equivalent to equivalent to b(x, y).                                                        Operators                                        Unary Operators                                        Predefined Functions                                    b(x, y): Returns the value of the pixel at (x, y).                    simplex(x, y, seed): Returns a value from a 2D simplex noise function.                                                        Constants                                    WIDTH: The width of the bitmap.                    HEIGHT: The height of the bitmap.                    RANDOM: Random value between 0 and 255.                                                                    Binary Bitmap Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel                            Structuring Element Editor        open_in_new                Controls                            Ctrl + Z: Undo the last action. -->            Ctrl + Y: Redo the last undone action. -->            Ctrl + C: Copy the selected cells. -->            Ctrl + V: Paste the copied cells. -->            LMB: Sets a pixel            RMB: Unsets a pixel            MMB: Sets the origin of the structuring element            '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HoughTransformAnimationComponent.html":{"url":"components/HoughTransformAnimationComponent.html","title":"component - HoughTransformAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HoughTransformAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hough-transform-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatInputModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                            MatTabsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hough-transform-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hough-transform-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accumulator\n                            \n                            \n                                animationIndex\n                            \n                            \n                                bitmap\n                            \n                            \n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Private\n                                    Optional\n                                chart\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                limit\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                tabIndex\n                            \n                            \n                                    Readonly\n                                thetaStep\n                            \n                            \n                                threshold\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                getCanvasHeight\n                            \n                            \n                                getCanvasWidth\n                            \n                            \n                                linePoint\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                openDialog\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasHeight\n                        \n                    \n                \n            \n            \n                \ngetCanvasHeight()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:255\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCanvasWidth\n                        \n                    \n                \n            \n            \n                \ngetCanvasWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:258\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linePoint\n                        \n                    \n                \n            \n            \n                \nlinePoint(x: number, rho: number, thetaRad: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rho\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                thetaRad\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:278\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Opens a dialog to edit the convolutional kernel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(bitmap: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Line[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accumulator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hough-transform'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        thetaStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:187\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threshold\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AccumulatorDialogComponent } from '../dialogs/accumulator-dialog/accumulator-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  accumulator: number[][] = [];\n  readonly thetaStep = 15;\n  transform(bitmap: Bitmap): Line[] {\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          this.accumulator[rIdx][tIdx]++;\n        });\n\n      }\n    });\n\n    const threshold = this.threshold;\n    const lines: Line[] = [];\n\n    for (let r = 0; r = threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n\n        \n        \n            table\n            Accumulator\n        \n\n        \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n\n        \n        \n        \n            Threshold\n            \n        \n        \n        \n        \n        \n            Limit\n            \n        \n        \n        \n        \n        \n        \n    \n    \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n      \n         -->\n            \n        \n                \n             \n                \n                \n                Panel 1\n                \n\n                Panel 2\n            \n         -->\n\n            \n                \n\n\n                        \n                            \n                                =40?'30px':'0'\"\n                                    [style.left]=\"showHeaders&&pixelSize>=40?'30px':'0'\"\n                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">\n                \n                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"\n                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"\n                                    (cellClicked)=\"onCellClicked($event)\">\n                \n                                \n                            \n                        \n\n\n\n\n            \n         -->\n\n    \n\n\n    \n     -->\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                                    table            Accumulator                                        Pixel Size                                                        Grid                            Headers                                            Threshold                                                                Limit                                                                                                            =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                   -->                                                                                                 Panel 1                                Panel 2                     -->                                                                                                                =40?\\'30px\\':\\'0\\'\"                                    [style.left]=\"showHeaders&&pixelSize>=40?\\'30px\\':\\'0\\'\"                                    style=\"position: absolute; z-index: 1; pointer-events: none;\">                                                =40\" [showGrid]=\"showGrid\" [showNumbers]=\"false\"                                    [tick]=\"bitmapTick\" [userSelect]=\"false\" style=\"margin: auto;\" [selectionColor]=\"selectionColor\"                                    (cellClicked)=\"onCellClicked($event)\">                                                                                                                         -->             -->'\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HoughTransformAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Kernel.html":{"url":"classes/Kernel.html","title":"class - Kernel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Kernel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/kernel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _divider\n                            \n                            \n                                    Private\n                                _kernel\n                            \n                            \n                                    Private\n                                _size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                clone\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                            \n                                toLatex\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                                \n                                    kernel\n                                \n                                \n                                    divider\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(size: number, kernel?: number[][], divider: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/kernel.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        kernel\n                                                  \n                                                        \n                                                                    number[][]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        divider\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _divider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                    \n                        \n                                Defined in src/app/static/kernel.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bitmap\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                cell\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantization\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                outOfRange\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Kernel\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave(storageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"kernel\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toLatex\n                        \n                    \n                \n            \n            \n                \ntoLatex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/kernel.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     number[]\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:10\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n\n                \n                    \n                        getkernel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:11\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        divider\n                    \n                \n\n                \n                    \n                        getdivider()\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:13\n                                \n                            \n\n                \n                    \n                        setdivider(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/static/kernel.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Bitmap } from \"./bitmap\";\nimport { OutOfRangeHandling, Padding, QuantizationMode } from \"./enums\";\nimport { outOfRangeHandle, quantizationHandle } from \"./expression-utils\";\nimport { Point } from \"./point\";\n\nexport class Kernel {\n    private _divider: number = 1;\n    private _kernel: number[][] = [];\n    private _size: number = 3;\n    get size() {return this._size} \n    get kernel() {return this._kernel}\n    set divider(value: number) { this._divider = Math.round(value == 0 ? 1 : value); }\n    get divider() { return this._divider; }\n\n    constructor(size: number, kernel?: number[][], divider: number = 1) {\n        this._size = size;\n        this._kernel = kernel || Array.from({ length: size }, () =>\n            Array.from({ length: size }, () => 0)\n        );\n        this._divider = divider;\n    }\n\n    apply(bitmap: Bitmap, cell: Point, quantization: QuantizationMode, outOfRange: OutOfRangeHandling, padding: Padding): number {\n        const r = Math.trunc((this._size - 1) / 2);\n        let sum = 0;\n        for (let oy = -r; oy  [...row]);\n        clone._divider = this._divider;\n        return clone;\n    }\n\n    toLatex(): string {\n        const transposed = this._kernel[0].map((_, colIndex) =>\n            this._kernel.map(row => row[colIndex])\n        );\n        const rows = transposed.map(row => row.join(' & '));\n        const body = rows.join(' \\\\\\\\ \\n');\n        return `\\\\begin{bmatrix}\n        ${body}\n        \\\\end{bmatrix}`;\n    }\n\n\n    save(storageKey: string=\"kernel\"): void {\n        localStorage.setItem(storageKey, JSON.stringify(this));\n    }\n\n    load(storageKey: string=\"kernel\"): void {\n        const raw = localStorage.getItem(storageKey);\n        if (!raw) return;\n        try {\n            const obj = JSON.parse(raw) as any;\n            if (!obj || typeof obj !== 'object') return;\n            const inst = Object.create(Kernel.prototype) as Kernel;\n            let kernel = Object.assign(inst, obj);\n            if (kernel) {\n                if(kernel.kernel)\n                    this._kernel = kernel.kernel;\n                if(kernel.divider)\n                    this._divider = kernel.divider;\n            }\n        } catch { }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KernelDialogComponent.html":{"url":"components/KernelDialogComponent.html","title":"component - KernelDialogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  KernelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-kernel-dialog\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            MatInputModule\n                            MatFormFieldModule\n                            MatSliderModule\n                            MatCardModule\n                            MatButtonModule\n                            MatButtonToggleModule\n                            MatIconModule\n                            MatDialogModule\n                            MatSelectModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./kernel-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./kernel-dialog.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                kernel\n                            \n                            \n                                    Readonly\n                                kernelType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                setKernel\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    size\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: Kernel)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Kernel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setKernel\n                        \n                    \n                \n            \n            \n                \nsetKernel(type: KernelType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            KernelType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        kernel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        kernelType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : KernelType\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n                \n                    \n                        getsize()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:36\n                                \n                            \n\n                \n                    \n                        setsize(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { Kernel } from '../../../static/kernel';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenu, MatMenuModule } from \"@angular/material/menu\";\n\n@Component({\n  selector: 'app-kernel-dialog',\n  imports: [\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatMenuModule\n],\n  templateUrl: './kernel-dialog.component.html',\n  styleUrl: './kernel-dialog.component.css'\n})\nexport class KernelDialogComponent {\n  kernel: Kernel;\n  readonly kernelType = KernelType;\n  get size(): number {\n    return this.kernel.size;\n  }\n  set size(value: number) {\n    this.kernel = new Kernel(value);\n  }\n\n\n  constructor(private dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: Kernel) {\n    this.kernel = data;\n  }\n\n  setKernel(type: KernelType) {\n    if (type === KernelType.Identity3x3) {\n      this.kernel = new Kernel(3,\n        [[0, 0, 0],\n        [0, 1, 0],\n        [0, 0, 0]]\n      );\n    } else if (type === KernelType.Sharpen3x3) {\n      this.kernel = new Kernel(3,\n        [[0, -1, 0],\n        [-1, 5, -1],\n        [0, -1, 0]]\n      );\n    } else if (type === KernelType.EdgeDetect3x3) {\n      this.kernel = new Kernel(3,\n        [[-1, -1, -1],\n        [-1, 8, -1],\n        [-1, -1, -1]]\n      );\n    } else if (type === KernelType.BoxBlur3x3) {\n      this.kernel = new Kernel(3,\n        [[1, 1, 1],\n        [1, 1, 1],\n        [1, 1, 1]], 9\n      );\n    } else if (type === KernelType.GaussianBlur3x3) {\n      this.kernel = new Kernel(3,\n        [[1, 2, 1],\n        [2, 4, 2],\n        [1, 2, 1]], 16\n      );\n    } else if (type === KernelType.Sobel3x3) {\n      this.kernel = new Kernel(3,\n        [[-1, 0, 1],\n        [-2, 0, 2],\n        [-1, 0, 1]]\n      );\n    } else if (type === KernelType.Prewitt3x3) {\n      this.kernel = new Kernel(3,\n        [[-1, 0, 1],\n        [-1, 0, 1],\n        [-1, 0, 1]]\n      );\n    } else if (type === KernelType.Laplacian3x3) {\n      this.kernel = new Kernel(3,\n        [[0, 1, 0],\n        [1, -4, 1],\n        [0, 1, 0]]\n      );\n    }\n\n    else if (type === KernelType.BoxBlur5x5) {\n      this.kernel = new Kernel(5,\n        Array(5).fill(Array(5).fill(1)), 25\n      );\n    } else if (type === KernelType.GaussianBlur5x5) {\n      this.kernel = new Kernel(5,\n        [\n          [1, 4, 6, 4, 1],\n          [4, 16, 24, 16, 4],\n          [6, 24, 36, 24, 6],\n          [4, 16, 24, 16, 4],\n          [1, 4, 6, 4, 1]\n        ], 256\n      );\n    } else if (type === KernelType.Sharpen5x5) {\n      this.kernel = new Kernel(5,\n        [\n          [0, 0, -1, 0, 0],\n          [0, -1, -2, -1, 0],\n          [-1, -2, 16, -2, -1],\n          [0, -1, -2, -1, 0],\n          [0, 0, -1, 0, 0]\n        ]\n      );\n    } \n\n    else if (type === KernelType.BoxBlur7x7) {\n      this.kernel = new Kernel(7,\n        Array(7).fill(Array(7).fill(1)), 49\n      );\n    } else if (type === KernelType.GaussianBlur7x7) {\n      this.kernel = new Kernel(7,\n        [\n          [0, 0, 1, 2, 1, 0, 0],\n          [0, 3, 13, 22, 13, 3, 0],\n          [1, 13, 59, 97, 59, 13, 1],\n          [2, 22, 97, 159, 97, 22, 2],\n          [1, 13, 59, 97, 59, 13, 1],\n          [0, 3, 13, 22, 13, 3, 0],\n          [0, 0, 1, 2, 1, 0, 0]\n        ], 1003\n      );\n    } else if (type === KernelType.Sharpen7x7) {\n      this.kernel = new Kernel(7,\n        [\n          [0, 0, 0, -1, 0, 0, 0],\n          [0, 0, -1, -2, -1, 0, 0],\n          [0, -1, -2, -4, -2, -1, 0],\n          [-1, -2, -4, 60, -4, -2, -1],\n          [0, -1, -2, -4, -2, -1, 0],\n          [0, 0, -1, -2, -1, 0, 0],\n          [0, 0, 0, -1, 0, 0, 0]\n        ]\n      );\n    }\n  }\n\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    this.dialogRef.close(this.kernel);\n  }\n}\n\nexport enum KernelType {\n  // 3x3 - pełny zestaw\n  Identity3x3 = \"Identity3x3\",\n  Sharpen3x3 = \"Sharpen3x3\",\n  EdgeDetect3x3 = \"EdgeDetect3x3\",\n  BoxBlur3x3 = \"BoxBlur3x3\",\n  GaussianBlur3x3 = \"GaussianBlur3x3\",\n  Sobel3x3 = \"Sobel3x3\",\n  Prewitt3x3 = \"Prewitt3x3\",\n  Laplacian3x3 = \"Laplacian3x3\",\n\n  // 5x5 - minimalne\n  BoxBlur5x5 = \"BoxBlur5x5\",\n  GaussianBlur5x5 = \"GaussianBlur5x5\",\n  Sharpen5x5 = \"Sharpen5x5\",\n\n  // 7x7 - minimalne\n  BoxBlur7x7 = \"BoxBlur7x7\",\n  GaussianBlur7x7 = \"GaussianBlur7x7\",\n  Sharpen7x7 = \"Sharpen7x7\",\n}\n    \n\n    \n        \n\n    \n        \n            \n                grid_on\n            \n            Enter Kernel Values\n        \n\n         -->\n            \n                \n                    \n                        3x3 Kernel\n                        5x5 Kernel\n                        7x7 Kernel\n                    \n                \n                \n                \n                \n                \n                    grid_on -->\n                    Presets\n                \n                \n                    @if (size === 3) {\n                    Identity\n                    Sharpen\n                    Edge Detect\n                    Box Blur\n                    Gaussian Blur\n                    Sobel\n                    Prewitt\n                    Laplacian\n                    }\n                    @if (size === 5) {\n                    Box Blur\n                    Gaussian Blur\n                    Sharpen\n                \n                    }\n                    @if (size === 7) {\n                    Box Blur\n                    Gaussian Blur\n                    Sharpen\n                    }\n                \n            \n            \n           \n         -->\n\n        \n            @for (row of kernel.kernel; track $index; let i=$index) {\n            \n                @for (value of row; track $index; let j=$index) {\n                 -->\n                \n                 -->\n                }\n            \n            }\n        \n\n    \n\n\n\n    \n        Divider\n        \n    \n    \n    \n        cancel\n        Cancel\n    \n    \n        save\n        OK\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        grid_on                        Enter Kernel Values                 -->                                                                        3x3 Kernel                        5x5 Kernel                        7x7 Kernel                                                                                                                        grid_on -->                    Presets                                                    @if (size === 3) {                    Identity                    Sharpen                    Edge Detect                    Box Blur                    Gaussian Blur                    Sobel                    Prewitt                    Laplacian                    }                    @if (size === 5) {                    Box Blur                    Gaussian Blur                    Sharpen                                    }                    @if (size === 7) {                    Box Blur                    Gaussian Blur                    Sharpen                    }                                                            -->                    @for (row of kernel.kernel; track $index; let i=$index) {                            @for (value of row; track $index; let j=$index) {                 -->                                 -->                }                        }                        Divider                            cancel        Cancel                save        OK    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'KernelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Line.html":{"url":"classes/Line.html","title":"class - Line","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Line\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a line in polar coordinates along with its voting information and endpoints.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                rho\n                            \n                            \n                                    Public\n                                theta\n                            \n                            \n                                    Public\n                                votes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rho: number, theta: number, votes: number, min: Point, max: Point)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:297\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rho\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theta\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        votes\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        Point\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        max\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        min\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        rho\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        theta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        votes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/hough-transform-animation/hough-transform-animation.component.ts:298\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { getVar } from '../../static/style-utils';\nimport { ColorScale } from '../../static/enums';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { Chart, LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AccumulatorDialogComponent } from '../dialogs/accumulator-dialog/accumulator-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-hough-transform-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n    MatTabsModule\n  ],\n  templateUrl: './hough-transform-animation.component.html',\n  styleUrl: './hough-transform-animation.component.css'\n})\nexport class HoughTransformAnimationComponent implements AfterViewInit {\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  bitmapTick: number = 0;\n  bitmapKey: string = 'hough-transform';\n\n\n  pixelSize: number = 40;\n  limit: number = 5;\n  threshold: number = 5;\n  showGrid: boolean = true;\n  tabIndex: number = 0;\n  showHeaders: boolean = true;\n  selectionColor: string = getVar(\"--selection-color\");\n\n  animationIndex: number = 0;\n  readonly colorscale: ColorScale = ColorScale.Binary;\n  private chart?: Chart; \n  \n\n  constructor(private dialog: MatDialog, private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n\n    this.refresh();\n  }\n  ngAfterViewInit(): void {\n    const width = this.bitmap.width;\n    const height = this.bitmap.height;\n    \n    Chart.register(LineController, LineElement, PointElement, LinearScale, Title, Tooltip, Legend);\n    const canvas: HTMLCanvasElement = document.getElementById('bitmapChart') as HTMLCanvasElement;\n    const ctx = canvas.getContext('2d')!;\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        datasets: []\n      },\n      options: {\n        responsive: false,\n        devicePixelRatio: 2,\n        maintainAspectRatio: false,\n        layout: {\n\n          padding: 0\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        animation: false,\n        scales: {\n          x: {\n            display: false,\n            // grid: { display: true },\n            type: 'linear',\n            min: 0,\n            max: width,\n            title: { display: true, text: 'X' }\n          },\n          y: {\n            display: false,\n            type: 'linear',\n            min: 0,\n            max: height, \n            title: { display: true, text: 'Y' }\n          }\n        }\n      }\n    });\n    this.refresh();\n  \n  }\n\n  refresh() {\n    // this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    \n    if(this.chart){\n      this.chart.data.datasets = [];\n      const width = this.bitmap.width;\n      const height = this.bitmap.height;\n    \n      const lines = this.transform(this.resultBitmap).slice(0, this.limit);\n      for(let line of lines) {\n        let p1 = this.linePoint(line.min.col, line.rho, line.theta*Math.PI/180);\n        let p2 = this.linePoint(line.max.col, line.rho, line.theta*Math.PI/180);\n        if(line.min.col == line.max.col){\n          p1 = new Point(line.min.row, line.min.col);\n          p2 = new Point(line.max.row, line.max.col);\n        }\n        // const points = this.toLine(line.rho, line.theta);\n        const dataPoints = [\n          { x: p1.col, y: p1.row },\n          { x: p2.col, y: p2.row }\n        ];\n        const flippedData = dataPoints.map(p => ({ x: p.x + 0.5, y: height - p.y - 0.5 }));\n        this.chart.data.datasets.push(\n          {\n            label: `line theta: ${line.theta} rho: ${line.rho} votes: ${line.votes}`,\n            data: flippedData,\n            borderColor: getVar(\"--selection-color\"),\n            // tension: 0 ,\n            pointRadius: 0,\n            clip: false\n          }\n        );\n      }\n      // this.chart.resize(this.getCanvasWidth()*2, this.getCanvasHeight()*2);\n      this.chart.update();\n      }\n    \n    // this.animate();\n  }\n\n  animate() {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.bitmap.pixels().filter(p=>p.value===0&&this.bitmap.getCellIndex(p.cell) this.resultBitmap.set(p.cell, 0));\n    this.refresh();\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    \n    \n   \n    this.bitmap.select(cell);\n    this.resultBitmap.select(cell);\n\n    this.bitmapTick++;\n  }\n\n  accumulator: number[][] = [];\n  readonly thetaStep = 15;\n  transform(bitmap: Bitmap): Line[] {\n    const thetas: number[] = [];\n    const width = bitmap.width;\n    const height = bitmap.height;\n\n    //thetas\n    for (let t = 0; t \n      Array(thetas.length).fill(0)\n    );\n    const min: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(new Point(height, width))\n    );\n    const max: Point[][] = Array.from({ length: rhos.length }, () =>\n      Array(thetas.length).fill(Point.zero)\n    );\n\n\n    bitmap.cells().forEach(p => {\n      if (bitmap.getBinary(p)) {\n\n        thetas.forEach((theta, tIdx) => {\n          const rho = Math.round(p.col * Math.cos(theta) + p.row * Math.sin(theta));\n          const rIdx = rho + diagLen;\n          min[rIdx][tIdx] = min[rIdx][tIdx].min(p);\n          max[rIdx][tIdx] = max[rIdx][tIdx].max(p);\n          this.accumulator[rIdx][tIdx]++;\n        });\n\n      }\n    });\n\n    const threshold = this.threshold;\n    const lines: Line[] = [];\n\n    for (let r = 0; r = threshold) {\n          lines.push(new Line(\n            rhos[r],\n            thetas[t]*180/Math.PI,\n            votes,\n            min[r][t],\n            max[r][t]\n          ));\n        }\n      }\n    }\n\n    lines.sort((a, b) => b.votes - a.votes);\n    return lines;\n  }\n\n  //helpers\n  getCanvasHeight(): number {\n    return this.bitmap.height * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  getCanvasWidth(): number {\n    return this.bitmap.width * this.pixelSize;// + (this.showHeaders ? 30 : 0);\n  }\n  linePoint(x: number, rho: number, thetaRad: number): Point {\n    return new Point((rho-x*Math.cos(thetaRad))/Math.sin(thetaRad), x);\n  }\n\n  setValues(length: number, destination: Bitmap, source: Bitmap) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MATAnimationElement.html":{"url":"classes/MATAnimationElement.html","title":"class - MATAnimationElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MATAnimationElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                borderPoints\n                            \n                            \n                                    Public\n                                r\n                            \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number, r: number, borderPoints: [])\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:342\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        r\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        borderPoints\n                                                  \n                                                        \n                                                                    []\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        borderPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:343\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        r\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:343\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:343\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:343\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { getVar } from '../../static/style-utils';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport cvReadyPromise from '@techstark/opencv-js';\n\n@Component({\n  selector: 'app-shape-bitmap-editor',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    AnimationControllerComponent\n  ],\n  templateUrl: './shape-bitmap-editor.component.html',\n  styleUrl: './shape-bitmap-editor.component.css'\n})\nexport class ShapeBitmapEditorComponent implements AfterViewInit {\n  @ViewChild('canvas') canvasRef!: ElementRef;\n  readonly width = 1050;\n  readonly height = 750;\n  // readonly eps = 0.01;\n  readonly eps = 0.79;\n\n  animationIndex = 0;\n  animationElements: MATAnimationElement[] = [];\n\n  private _borderPoints: [number, number][] = [];\n  private _dist: number[][] = [];\n  private _medial: [number, number, number][] = [];\n  private _frameId: number = 0;\n  private _medialPointsVisited = new Set();\n  private _medialPointsBfsQueue: [number, number, number][] = [];\n\n\n  constructor(private ngZone: NgZone) { }\n\n  drawStartShape(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const padding = 50;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    ctx.imageSmoothingEnabled = false;\n    // ctx.fillStyle = getVar('--mat-sys-primary');\n    ctx.fillStyle = \"#162d59\";\n    // ctx.beginPath();\n    // ctx.ellipse(200, 200, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(280, 280, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(290, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n\n    // ctx.beginPath();\n    // ctx.ellipse(120, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    ctx.fillRect(padding, padding, this.width - 2 * padding - 1, this.height - 2 * padding - 1);\n    // ctx.fillRect(10, 150, 501, 601);\n    // ctx.fillRect(350, 250, 401, 201);\n  }\n  drawMedialAxis(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.fillStyle = getVar('--mat-sys-on-primary');\n    ctx.fillStyle = \"#fcf8f9\";\n    for (const [x, y] of this._medial)\n      ctx.fillRect(x, y, 1, 1);\n  }\n  getHash(x: number, y: number): string {\n    return `${Math.trunc(x)},${Math.trunc(y)}`;\n  }\n  calculateMATAnimationElements(): void {\n    const medialLength = this._medial.length;\n\n\n    while (this.animationElements.length  this.getHash(p[0], p[1])).indexOf(this.getHash(x + dc, y + dr));\n          if (index === -1) continue;\n          this._medialPointsBfsQueue.push([x + dc, y + dr, this._medial[index][2]]);\n        }\n      }\n    }\n  }\n\n  drawAnimationElement(index: number): void {\n    if (index = this.animationElements.length) return;\n    const element = this.animationElements[index];\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n\n    ctx.fillStyle = \"rgba(0,255,0,0.125)\";\n    ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.ellipse(element.x, element.y, element.r, element.r, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    const rP = 3;\n    ctx.fillStyle = \"rgba(0,255,0,1)\";\n    ctx.beginPath();\n    ctx.ellipse(element.x, element.y, rP, rP, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.fillStyle = \"rgba(235, 32, 32, 1)\";\n    for (const bp of element.borderPoints) {\n      ctx.beginPath();\n      ctx.ellipse(bp[0], bp[1], rP, rP, 0, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.closePath();\n    }\n  }\n\n  drawCircle() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n\n    if (this._medialPointsBfsQueue.length === 0) {\n      for (const p of this._medial)\n        if (!this._medialPointsVisited.has(this.getHash(p[0], p[1]))) {\n          this._medialPointsBfsQueue.push(p);\n          break;\n        }\n    }\n    if (this._medialPointsBfsQueue.length === 0) return;\n\n\n\n    const [x, y, r] = this._medialPointsBfsQueue.pop()!;\n    this._medialPointsVisited.add(this.getHash(x, y));\n\n    // console.log(x, y, r);\n    // ctx.imageSmoothingEnabled = true;\n    ctx.fillStyle = \"rgba(0,255,0,0.125)\";\n    ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.ellipse(x, y, r, r, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    const rP = 3;\n    // ctx.fillStyle = getVar('--mat-sys-error');\n    ctx.fillStyle = \"rgba(0,255,0,1)\";\n    ctx.beginPath();\n    ctx.ellipse(x, y, rP, rP, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.fillStyle = \"rgba(235, 32, 32, 1)\";\n    for (const bp of this._borderPoints) {\n      const dx = bp[0] - x;\n      const dy = bp[1] - y;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      if (dist == r) {\n        ctx.beginPath();\n        ctx.ellipse(bp[0], bp[1], rP, rP, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.closePath();\n      }\n    }\n\n\n    for (let dr = -1; dr  this.getHash(p[0], p[1])).indexOf(this.getHash(x + dc, y + dr));\n        if (index === -1) continue;\n        this._medialPointsBfsQueue.push([x + dc, y + dr, this._medial[index][2]]);\n      }\n    }\n\n    // for(let dr = -2; dr  getHash(p[0], p[1])).indexOf(getHash(x+dc, y+dr));\n    //     if(index === -1) continue;\n    //     this._medialPointsBfsQueue.push([x+dc, y+dr, this._medial[index][2]]);\n    //   }\n    // }\n\n    // for(let dr = -3; dr  getHash(p[0], p[1])).indexOf(getHash(x+dc, y+dr));\n    //     if(index === -1) continue;\n    //     this._medialPointsBfsQueue.push([x+dc, y+dr, this._medial[index][2]]);\n    //   }\n    // }\n  }\n\n  async ngAfterViewInit() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n    this.drawStartShape();\n\n    // pobieramy dane obrazu\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n\n    function isInside(x: number, y: number): boolean {\n      const idx = (y * canvas.width + x) * 4;\n      return data[idx + 3] > 0; // sprawdzamy alpha kanał\n    }\n    function isBorder(x: number, y: number): boolean {\n      if (!isInside(x, y)) return false;\n      return !(isInside(x - 1, y) && isInside(x + 1, y) && isInside(x, y - 1) && isInside(x, y + 1));\n    }\n    for (let y = 1; y  {\n        \n        this._frameId = requestAnimationFrame(this.animate);\n        \n        this.drawStartShape();\n        this.drawMedialAxis();\n        this.drawAnimationElement(this.animationIndex);\n      });\n    }\n  };\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this._frameId);\n  }\n}\n\n\nclass MATAnimationElement {\n  constructor(public x: number, public y: number, public r: number, public borderPoints: [number, number][]) { }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatrixDisplayComponent.html":{"url":"components/MatrixDisplayComponent.html","title":"component - MatrixDisplayComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MatrixDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/matrix-display/matrix-display.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-matrix-display\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./matrix-display.component.html\n            \n\n\n\n            \n                styleUrl\n                ./matrix-display.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enumerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                kernel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        kernel\n                    \n                \n                \n                    \n                        Type :         Kernel\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/matrix-display/matrix-display.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enumerator\n                        \n                    \n                \n            \n            \n                \nenumerator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/matrix-display/matrix-display.component.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { Kernel } from '../../static/kernel';\n\n@Component({\n  selector: 'app-matrix-display',\n  imports: [],\n  templateUrl: './matrix-display.component.html',\n  styleUrl: './matrix-display.component.css'\n})\nexport class MatrixDisplayComponent {\n  kernel = input.required();\n\n  enumerator(){\n    return Array.from({ length: this.kernel().size }, (_, i) => i + 1);\n  }\n}\n\n    \n\n    \n        \n    @for (row of enumerator(); track $index;) {\n\n    \n        @for (col of enumerator(); track $index) {\n        \n            {{kernel().kernel[row-1][col-1]}}\n        \n        }\n    \n\n    }\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (row of enumerator(); track $index;) {            @for (col of enumerator(); track $index) {                    {{kernel().kernel[row-1][col-1]}}                }        }'\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatrixDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MorphologicalOperationsAnimationComponent.html":{"url":"components/MorphologicalOperationsAnimationComponent.html","title":"component - MorphologicalOperationsAnimationComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  MorphologicalOperationsAnimationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-morphological-operations-animation\n            \n\n\n            \n                imports\n                \n                            MatIconModule\n                            MatButtonModule\n                            MatCheckboxModule\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatSelectModule\n                            RouterModule\n                            MatCardModule\n                                BitmapComponent\n                                AnimationControllerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./morphological-operations-animation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./morphological-operations-animation.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationIndex\n                            \n                            \n                                appliedBitmap\n                            \n                            \n                                bitmap\n                            \n                            \n                                    Readonly\n                                bitmapKey\n                            \n                            \n                                bitmapTick\n                            \n                            \n                                    Readonly\n                                colorscale\n                            \n                            \n                                operation\n                            \n                            \n                                pixelSize\n                            \n                            \n                                resultBitmap\n                            \n                            \n                                selectionColor\n                            \n                            \n                                showBase\n                            \n                            \n                                showDifference\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                apply\n                            \n                            \n                                commit\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                refresh\n                            \n                            \n                                setValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(bitmapStorage: BitmapStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                            \n                        \n\n                \n                    \n                            Creates an instance of the MorphologicalOperationsAnimationComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bitmapStorage\n                                                  \n                                                        \n                                                                        BitmapStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for loading and saving bitmaps.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Advances the animation by processing the next pixel and updating the selection.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply(apply: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Applies or reverts the morphological operation on the original bitmap.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                apply\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    If true, applies the operation; if false, reverts to the original bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commit\n                        \n                    \n                \n            \n            \n                \ncommit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Saves the current bitmap to storage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type, click: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:196\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to start the animation from the clicked pixel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                        \n                                                click\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    Unused.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Updates the applied and result bitmaps based on the current operation and structuring element.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setValues\n                        \n                    \n                \n            \n            \n                \nsetValues(length: number, destination: Bitmap, source: Bitmap)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Sets pixel values in the destination bitmap based on the selected morphological operation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The number of pixels to process.\n\n                                            \n                                        \n                                        \n                                                destination\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap where the results are stored.\n\n                                            \n                                        \n                                        \n                                                source\n                                            \n                                                            Bitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap from which pixel values are taken.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:71\n                        \n                    \n\n            \n                \n                    Current index of the pixel being processed in the animation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appliedBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:43\n                        \n                    \n\n            \n                \n                    The bitmap image after applying the morphological operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:41\n                        \n                    \n\n            \n                \n                    The original bitmap image to which the morphological operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bitmapKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'morphological-operations'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:49\n                        \n                    \n\n            \n                \n                    Key used to load and save the bitmap in storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bitmapTick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:47\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorscale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorScale\n\n                    \n                \n                \n                    \n                        Default value : ColorScale.Binary\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:73\n                        \n                    \n\n            \n                \n                    Color scale used for displaying the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        operation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MorphologicalOperations\n\n                    \n                \n                \n                    \n                        Default value : MorphologicalOperations.Erosion\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:54\n                        \n                    \n\n            \n                \n                    The morphological operation to perform.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:58\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resultBitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                \n                    \n                        Default value : new InteractiveBitmap(16, 9, undefined, 255)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:45\n                        \n                    \n\n            \n                \n                    The result bitmap after the operation is applied.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectionColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : getVar(\"--selection-color\")\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:68\n                        \n                    \n\n            \n                \n                    Color used to highlight selected pixels.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:66\n                        \n                    \n\n            \n                \n                    If true, the original bitmap is shown under the result.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDifference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:64\n                        \n                    \n\n            \n                \n                    If true, the difference is displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:60\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:62\n                        \n                    \n\n            \n                \n                    If true, headers are displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts:52\n                        \n                    \n\n            \n                \n                    The structuring element used for the morphological operation.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { RouterModule } from '@angular/router';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport { Bitmap, InteractiveBitmap } from '../../static/bitmap';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { Point } from '../../static/point';\nimport { StructuringElement } from '../../static/structuringElement';\nimport { ColorScale, MorphologicalOperations } from '../../static/enums';\nimport { getVar } from '../../static/style-utils';\n\n/** Component to visualize and animate morphological operations (dilation, erosion, opening, closing) on a bitmap image. */\n@Component({\n  selector: 'app-morphological-operations-animation',\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    RouterModule,\n    MatCardModule,\n    BitmapComponent,\n    AnimationControllerComponent,\n],\n  templateUrl: './morphological-operations-animation.component.html',\n  styleUrl: './morphological-operations-animation.component.css'\n})\nexport class MorphologicalOperationsAnimationComponent {\n  /** The original bitmap image to which the morphological operation is applied. */\n  bitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The bitmap image after applying the morphological operation. */\n  appliedBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** The result bitmap after the operation is applied. */\n  resultBitmap: InteractiveBitmap = new InteractiveBitmap(16, 9, undefined, 255);\n  /** Used to trigger bitmap component refresh. */\n  bitmapTick: number = 0;\n  /** Key used to load and save the bitmap in storage. */\n  readonly bitmapKey: string = 'morphological-operations';\n\n  /** The structuring element used for the morphological operation. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The morphological operation to perform. */\n  operation: MorphologicalOperations = MorphologicalOperations.Erosion;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 40;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n  /** If true, headers are displayed. */\n  showHeaders: boolean = true;\n  /** If true, the difference is displayed. */\n  showDifference: boolean = true;\n  /** If true, the original bitmap is shown under the result. */\n  showBase: boolean = false;\n  /** Color used to highlight selected pixels. */\n  selectionColor: string = getVar(\"--selection-color\");\n  \n  /** Current index of the pixel being processed in the animation. */\n  animationIndex: number = 0;\n  /** Color scale used for displaying the bitmap. */\n  readonly colorscale: ColorScale = ColorScale.Binary;\n\n  /** Creates an instance of the MorphologicalOperationsAnimationComponent.\n   * @param bitmapStorage The service for loading and saving bitmaps.\n   */\n  constructor(private bitmapStorage: BitmapStorageService) { \n    let bitmap = this.bitmapStorage.load(this.bitmapKey);\n    if (bitmap)\n      this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    else\n      this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.structuringElement.save();\n    this.refresh();\n  }\n\n  /** Updates the applied and result bitmaps based on the current operation and structuring element. */\n  refresh(): void {\n    this.appliedBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.bitmap, 255);\n    this.structuringElement.applyComplex(this.bitmap, this.appliedBitmap, this.operation, this.showDifference);\n    this.animate();\n  }\n  /** Saves the current bitmap to storage. */\n  commit(): void {\n    this.bitmapStorage.save(this.bitmapKey, this.bitmap);\n  }\n  /** Applies or reverts the morphological operation on the original bitmap.\n   * @param apply If true, applies the operation; if false, reverts to the original bitmap.\n  */\n  apply(apply: boolean = true): void {\n    this.bitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, undefined, 255);\n    if(apply)\n      this.appliedBitmap.pixels().filter(p=>p.value!this.bitmap.set(p.cell, 0));\n    else{\n      let bitmap = this.bitmapStorage.load(this.bitmapKey);\n      if (bitmap)\n        this.bitmap = new InteractiveBitmap(bitmap.width, bitmap.height, bitmap, 255);\n    }\n\n    this.refresh();\n  }\n  /** Advances the animation by processing the next pixel and updating the selection. */\n  animate(): void {\n    let cell = this.bitmap.getIndexCell(this.animationIndex);\n\n\n    this.resultBitmap = new InteractiveBitmap(this.bitmap.width, this.bitmap.height, this.showBase?this.bitmap:undefined, 255);\n    this.resultBitmap.pixels().filter(p=>p.value===0).forEach(p => this.resultBitmap.set(p.cell, 128));\n    this.setValues(this.animationIndex+1, this.resultBitmap, this.appliedBitmap);\n\n\n    this.bitmap.clearSelection(); \n    this.resultBitmap.clearSelection(); \n\n    this.resultBitmap.select(cell);\n    \n    this.bitmap.highlightedElement = null;\n    this.selectionColor = getVar(\"--selection-color\");\n    if(this.operation===MorphologicalOperations.Dilation){\n      this.resultBitmap.highlightedElement = cell;\n      if(!this.bitmap.getBinary(cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    if(this.operation===MorphologicalOperations.Erosion){\n      if(!this.structuringElement.getErosion(this.bitmap, cell))\n        this.selectionColor = \"#636363ff\"\n    }\n    \n    if(this.operation===MorphologicalOperations.Dilation || this.operation===MorphologicalOperations.Erosion){\n      this.bitmap.highlightedElement = cell;\n      for(let row = 0; row pixel.value===0).forEach(pixel => {\n        if (destination.isOut(pixel.cell) || source.isOut(pixel.cell))\n          return;\n        destination.set(pixel.cell, source.get(pixel.cell) ?? 255);\n      });\n      return;\n    \n    }\n    for (let i = 0; i \n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n        \n            crossword\n            Structuring Element\n        \n        \n        \n            Operation\n            \n                Erosion\n                Dilation\n                Opening\n                Closing\n            \n        \n    \n    \n        \n    \n    \n        \n            check\n            Apply\n        \n        \n            cleaning_services\n            Revert\n        \n        \n            commit\n            Save\n        \n    \n    \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n        \n            Difference\n        \n        \n            Base\n        \n    \n    \n        \n\n\n\n\n\n\n    \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"\n                    [userSelect]=\"false\" style=\"margin: auto;\"\n                    [selectionColor]=\"selectionColor\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n        \n            \n\n                =40\" [showGrid]=\"showGrid\"\n                    [showNumbers]=\"false\"\n                    [selectedColorScale]=\"colorscale\"\n                    [selectionColor]=\"selectionColor\"\n                    [tick]=\"bitmapTick\" [userSelect]=\"false\"\n                    (cellClicked)=\"onCellClicked($event)\"\n                    >\n\n                \n            \n        \n\n    \n\n\n    \n           \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                            crossword            Structuring Element                                    Operation                            Erosion                Dilation                Opening                Closing                                                                check            Apply                            cleaning_services            Revert                            commit            Save                                        Pixel Size                                                        Grid                            Headers                            Difference                            Base                                                                =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\" [tick]=\"bitmapTick\"                    [userSelect]=\"false\" style=\"margin: auto;\"                    [selectionColor]=\"selectionColor\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                                        =40\" [showGrid]=\"showGrid\"                    [showNumbers]=\"false\"                    [selectedColorScale]=\"colorscale\"                    [selectionColor]=\"selectionColor\"                    [tick]=\"bitmapTick\" [userSelect]=\"false\"                    (cellClicked)=\"onCellClicked($event)\"                    >                                                           '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MorphologicalOperationsAnimationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to display a \"Page Not Found\" message.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                            MatDividerModule\n                            MatButtonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/page-not-found/page-not-found.component.ts:26\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or to the home page if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Router, RouterModule } from '@angular/router';\n\n/** Component to display a \"Page Not Found\" message. */\n@Component({\n  selector: 'app-page-not-found',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    MatDividerModule,\n    MatButtonModule,\n    RouterModule\n  ],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.css'\n})\nexport class PageNotFoundComponent {\n  constructor(private router: Router) {\n\n  }\n  /** Navigates back to the previous page or to the home page if no history exists. */\n  goBack(): void {\n    if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    404\n    Page Not Found\n\n    \n        We could not find this page. It may have been moved, removed, or the address is incorrect.\n    \n\n    \n\n    \n        \n            home\n            Home\n        \n        \n            arrow_back\n            Back\n        \n\n    \n\n    \n        tips_and_updates\n        Tip: Check the URL or refresh the page if you believe this is an error.\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    404    Page Not Found            We could not find this page. It may have been moved, removed, or the address is incorrect.                                home            Home                            arrow_back            Back                        tips_and_updates        Tip: Check the URL or refresh the page if you believe this is an error.    '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Point.html":{"url":"classes/Point.html","title":"class - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/point.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a point in a 2D grid with row and column coordinates.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                col\n                            \n                            \n                                    Static\n                                    Readonly\n                                one\n                            \n                            \n                                    Public\n                                row\n                            \n                            \n                                    Static\n                                    Readonly\n                                zero\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clone\n                            \n                            \n                                down\n                            \n                            \n                                equals\n                            \n                            \n                                left\n                            \n                            \n                                limit\n                            \n                            \n                                max\n                            \n                            \n                                min\n                            \n                            \n                                right\n                            \n                            \n                                subtract\n                            \n                            \n                                toString\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(row: number, col: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/point.ts:2\n                            \n                        \n\n                \n                    \n                            Creates a new Point instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        row\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The row coordinate of the point.\n\n                                                        \n                                                \n                                                \n                                                        col\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The column coordinate of the point.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The column coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        one\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(1, 1)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:94\n                        \n                    \n\n            \n                \n                    A Point instance representing the coordinates (1, 1).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:7\n                        \n                    \n\n            \n                \n                    The row coordinate of the point.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        zero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                \n                    \n                        Default value : new Point(0, 0)\n                    \n                \n                    \n                        \n                                Defined in src/app/static/point.ts:92\n                        \n                    \n\n            \n                \n                    A Point instance representing the origin (0, 0).\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:20\n                        \n                    \n\n\n            \n                \n                        Adds the coordinates of another Point to the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to add.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the sum of the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clone\n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:13\n                        \n                    \n\n\n            \n                \n                        Creates a copy of the current Point instance.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the same row and column coordinates as the current instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:67\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit down.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit down.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        equals\n                        \n                    \n                \n            \n            \n                \nequals(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:82\n                        \n                    \n\n\n            \n                \n                        Checks if the current Point is equal to another Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if both Points have the same row and column coordinates, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        left\n                        \n                    \n                \n            \n            \n                \nleft()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:49\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the left.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the left.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n            \n                \nlimit(max: Point, min: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:75\n                        \n                    \n\n\n            \n                \n                        Limits the point's coordinates to be within the specified bounds.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                max\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The maximum bounds as a Point instance.\n\n                                            \n                                        \n                                        \n                                                min\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Point.zero\n                                            \n\n                                            \n                                                    The minimum bounds as a Point instance. Default is (0, 0).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the limited coordinates.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max\n                        \n                    \n                \n            \n            \n                \nmax(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:43\n                        \n                    \n\n\n            \n                \n                        Gets the maximum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the maximum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        min\n                        \n                    \n                \n            \n            \n                \nmin(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:35\n                        \n                    \n\n\n            \n                \n                        Gets the minimum coordinates between the current Point and another Point.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to compare with.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance with the minimum row and column coordinates.\nFor example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        right\n                        \n                    \n                \n            \n            \n                \nright()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:55\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit to the right.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit to the right.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtract\n                        \n                    \n                \n            \n            \n                \nsubtract(other: Point)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:27\n                        \n                    \n\n\n            \n                \n                        Subtracts the coordinates of another Point from the current Point.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                other\n                                            \n                                                            Point\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Point to subtract.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the difference between the two Points.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toString\n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:88\n                        \n                    \n\n\n            \n                \n                        Converts the Point to a string representation.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string in the format \"row,col\".\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/point.ts:61\n                        \n                    \n\n\n            \n                \n                        Moves the point one unit up.\n\n\n                        \n                            Returns :         Point\n\n                        \n                            \n                                A new Point instance representing the point moved one unit up.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Point{\n    /** Creates a new Point instance.\n     * @param row The row coordinate of the point.\n     * @param col The column coordinate of the point.\n     */\n    constructor(public row: number, public col: number) {\n        \n    }\n    /** Creates a copy of the current Point instance.\n     * @returns A new Point instance with the same row and column coordinates as the current instance.\n     */\n    clone(): Point {\n        return new Point(this.row, this.col);\n    }\n    /** Adds the coordinates of another Point to the current Point.\n     * @param other The Point to add.\n     * @returns A new Point instance representing the sum of the two Points.\n     */\n    add(other: Point): Point {\n        return new Point(this.row + other.row, this.col + other.col);\n    }\n    /** Subtracts the coordinates of another Point from the current Point.\n     * @param other The Point to subtract.\n     * @returns A new Point instance representing the difference between the two Points.\n     */\n    subtract(other: Point): Point {\n        return new Point(this.row - other.row, this.col - other.col);\n    }\n    /** Gets the minimum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the minimum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (3, 2).\n     */\n    min(other: Point): Point{\n        return new Point(Math.min(this.row, other.row), Math.min(this.col, other.col)); \n    }\n    /** Gets the maximum coordinates between the current Point and another Point.\n     * @param other The Point to compare with.\n     * @returns A new Point instance with the maximum row and column coordinates.\n     * For example, if the current Point is (3, 5) and the other Point is (4, 2), the result will be (4, 5).\n     */\n    max(other: Point): Point{\n        return new Point(Math.max(this.row, other.row), Math.max(this.col, other.col)); \n    }\n    /** Moves the point one unit to the left.\n     * @returns A new Point instance representing the point moved one unit to the left.\n     */\n    left(): Point{\n        return new Point(this.row, this.col - 1);\n    }\n    /** Moves the point one unit to the right.\n     * @returns A new Point instance representing the point moved one unit to the right.\n     */\n    right(): Point{\n        return new Point(this.row, this.col + 1);\n    }\n    /** Moves the point one unit up.\n     * @returns A new Point instance representing the point moved one unit up.\n     */\n    up(): Point{\n        return new Point(this.row - 1, this.col);\n    }\n    /** Moves the point one unit down.\n     * @returns A new Point instance representing the point moved one unit down.\n     */\n    down(): Point{\n        return new Point(this.row + 1, this.col);\n    }\n    /** Limits the point's coordinates to be within the specified bounds.\n     * @param max The maximum bounds as a Point instance.\n     * @param min The minimum bounds as a Point instance. Default is (0, 0).\n     * @returns A new Point instance with the limited coordinates.\n     */\n    limit(max: Point, min: Point = Point.zero): Point {\n        return new Point(Math.max(min.row, Math.min(max.row, this.row)), Math.max(min.col, Math.min(max.col, this.col)));\n    }\n    /** Checks if the current Point is equal to another Point.\n     * @param other The Point to compare with.\n     * @returns True if both Points have the same row and column coordinates, false otherwise.\n     */\n    equals(other: Point): boolean {\n        return this.row === other.row && this.col === other.col;\n    }\n    /** Converts the Point to a string representation.\n     * @returns A string in the format \"row,col\".\n     */\n    toString(): string {\n        return `${this.row},${this.col}`;\n    }\n    /** A Point instance representing the origin (0, 0). */\n    static readonly zero: Point = new Point(0, 0);\n    /** A Point instance representing the coordinates (1, 1). */\n    static readonly one: Point = new Point(1, 1);\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShapeBitmapEditorComponent.html":{"url":"components/ShapeBitmapEditorComponent.html","title":"component - ShapeBitmapEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ShapeBitmapEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shape-bitmap-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                                AnimationControllerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shape-bitmap-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shape-bitmap-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _borderPoints\n                            \n                            \n                                    Private\n                                _dist\n                            \n                            \n                                    Private\n                                _frameId\n                            \n                            \n                                    Private\n                                _medial\n                            \n                            \n                                    Private\n                                _medialPointsBfsQueue\n                            \n                            \n                                    Private\n                                _medialPointsVisited\n                            \n                            \n                                animationElements\n                            \n                            \n                                animationIndex\n                            \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                    Readonly\n                                eps\n                            \n                            \n                                    Readonly\n                                height\n                            \n                            \n                                    Readonly\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                calculateMATAnimationElements\n                            \n                            \n                                drawAnimationElement\n                            \n                            \n                                drawCircle\n                            \n                            \n                                drawMedialAxis\n                            \n                            \n                                drawStartShape\n                            \n                            \n                                getHash\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animate\n                        \n                    \n                \n            \n            \n                \nanimate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:322\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateMATAnimationElements\n                        \n                    \n                \n            \n            \n                \ncalculateMATAnimationElements()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawAnimationElement\n                        \n                    \n                \n            \n            \n                \ndrawAnimationElement(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawCircle\n                        \n                    \n                \n            \n            \n                \ndrawCircle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawMedialAxis\n                        \n                    \n                \n            \n            \n                \ndrawMedialAxis()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawStartShape\n                        \n                    \n                \n            \n            \n                \ndrawStartShape()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHash\n                        \n                    \n                \n            \n            \n                \ngetHash(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:244\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:336\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _borderPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _dist\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _frameId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medial\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medialPointsBfsQueue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _medialPointsVisited\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MATAnimationElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        eps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.79\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 750\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1050\n                    \n                \n                    \n                        \n                                Defined in src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, NgZone, ViewChild } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { getVar } from '../../static/style-utils';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AnimationControllerComponent } from '../animation-controller/animation-controller.component';\nimport cvReadyPromise from '@techstark/opencv-js';\n\n@Component({\n  selector: 'app-shape-bitmap-editor',\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    AnimationControllerComponent\n  ],\n  templateUrl: './shape-bitmap-editor.component.html',\n  styleUrl: './shape-bitmap-editor.component.css'\n})\nexport class ShapeBitmapEditorComponent implements AfterViewInit {\n  @ViewChild('canvas') canvasRef!: ElementRef;\n  readonly width = 1050;\n  readonly height = 750;\n  // readonly eps = 0.01;\n  readonly eps = 0.79;\n\n  animationIndex = 0;\n  animationElements: MATAnimationElement[] = [];\n\n  private _borderPoints: [number, number][] = [];\n  private _dist: number[][] = [];\n  private _medial: [number, number, number][] = [];\n  private _frameId: number = 0;\n  private _medialPointsVisited = new Set();\n  private _medialPointsBfsQueue: [number, number, number][] = [];\n\n\n  constructor(private ngZone: NgZone) { }\n\n  drawStartShape(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const padding = 50;\n    canvas.width = this.width;\n    canvas.height = this.height;\n    ctx.imageSmoothingEnabled = false;\n    // ctx.fillStyle = getVar('--mat-sys-primary');\n    ctx.fillStyle = \"#162d59\";\n    // ctx.beginPath();\n    // ctx.ellipse(200, 200, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(280, 280, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    // ctx.beginPath();\n    // ctx.ellipse(290, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n\n    // ctx.beginPath();\n    // ctx.ellipse(120, 150, 120, 80, 0, 0, Math.PI * 2);\n    // ctx.fill();\n    // ctx.closePath();\n\n    ctx.fillRect(padding, padding, this.width - 2 * padding - 1, this.height - 2 * padding - 1);\n    // ctx.fillRect(10, 150, 501, 601);\n    // ctx.fillRect(350, 250, 401, 201);\n  }\n  drawMedialAxis(): void {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.fillStyle = getVar('--mat-sys-on-primary');\n    ctx.fillStyle = \"#fcf8f9\";\n    for (const [x, y] of this._medial)\n      ctx.fillRect(x, y, 1, 1);\n  }\n  getHash(x: number, y: number): string {\n    return `${Math.trunc(x)},${Math.trunc(y)}`;\n  }\n  calculateMATAnimationElements(): void {\n    const medialLength = this._medial.length;\n\n\n    while (this.animationElements.length  this.getHash(p[0], p[1])).indexOf(this.getHash(x + dc, y + dr));\n          if (index === -1) continue;\n          this._medialPointsBfsQueue.push([x + dc, y + dr, this._medial[index][2]]);\n        }\n      }\n    }\n  }\n\n  drawAnimationElement(index: number): void {\n    if (index = this.animationElements.length) return;\n    const element = this.animationElements[index];\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n\n    ctx.fillStyle = \"rgba(0,255,0,0.125)\";\n    ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.ellipse(element.x, element.y, element.r, element.r, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    const rP = 3;\n    ctx.fillStyle = \"rgba(0,255,0,1)\";\n    ctx.beginPath();\n    ctx.ellipse(element.x, element.y, rP, rP, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.fillStyle = \"rgba(235, 32, 32, 1)\";\n    for (const bp of element.borderPoints) {\n      ctx.beginPath();\n      ctx.ellipse(bp[0], bp[1], rP, rP, 0, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.closePath();\n    }\n  }\n\n  drawCircle() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n\n    if (this._medialPointsBfsQueue.length === 0) {\n      for (const p of this._medial)\n        if (!this._medialPointsVisited.has(this.getHash(p[0], p[1]))) {\n          this._medialPointsBfsQueue.push(p);\n          break;\n        }\n    }\n    if (this._medialPointsBfsQueue.length === 0) return;\n\n\n\n    const [x, y, r] = this._medialPointsBfsQueue.pop()!;\n    this._medialPointsVisited.add(this.getHash(x, y));\n\n    // console.log(x, y, r);\n    // ctx.imageSmoothingEnabled = true;\n    ctx.fillStyle = \"rgba(0,255,0,0.125)\";\n    ctx.strokeStyle = \"rgba(0,255,0,0.5)\";\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.ellipse(x, y, r, r, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n    ctx.closePath();\n\n    const rP = 3;\n    // ctx.fillStyle = getVar('--mat-sys-error');\n    ctx.fillStyle = \"rgba(0,255,0,1)\";\n    ctx.beginPath();\n    ctx.ellipse(x, y, rP, rP, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.fillStyle = \"rgba(235, 32, 32, 1)\";\n    for (const bp of this._borderPoints) {\n      const dx = bp[0] - x;\n      const dy = bp[1] - y;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      if (dist == r) {\n        ctx.beginPath();\n        ctx.ellipse(bp[0], bp[1], rP, rP, 0, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.closePath();\n      }\n    }\n\n\n    for (let dr = -1; dr  this.getHash(p[0], p[1])).indexOf(this.getHash(x + dc, y + dr));\n        if (index === -1) continue;\n        this._medialPointsBfsQueue.push([x + dc, y + dr, this._medial[index][2]]);\n      }\n    }\n\n    // for(let dr = -2; dr  getHash(p[0], p[1])).indexOf(getHash(x+dc, y+dr));\n    //     if(index === -1) continue;\n    //     this._medialPointsBfsQueue.push([x+dc, y+dr, this._medial[index][2]]);\n    //   }\n    // }\n\n    // for(let dr = -3; dr  getHash(p[0], p[1])).indexOf(getHash(x+dc, y+dr));\n    //     if(index === -1) continue;\n    //     this._medialPointsBfsQueue.push([x+dc, y+dr, this._medial[index][2]]);\n    //   }\n    // }\n  }\n\n  async ngAfterViewInit() {\n    const canvas = this.canvasRef.nativeElement;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n\n    this.drawStartShape();\n\n    // pobieramy dane obrazu\n    const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    const data = imgData.data;\n\n    function isInside(x: number, y: number): boolean {\n      const idx = (y * canvas.width + x) * 4;\n      return data[idx + 3] > 0; // sprawdzamy alpha kanał\n    }\n    function isBorder(x: number, y: number): boolean {\n      if (!isInside(x, y)) return false;\n      return !(isInside(x - 1, y) && isInside(x + 1, y) && isInside(x, y - 1) && isInside(x, y + 1));\n    }\n    for (let y = 1; y  {\n        \n        this._frameId = requestAnimationFrame(this.animate);\n        \n        this.drawStartShape();\n        this.drawMedialAxis();\n        this.drawAnimationElement(this.animationIndex);\n      });\n    }\n  };\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this._frameId);\n  }\n}\n\n\nclass MATAnimationElement {\n  constructor(public x: number, public y: number, public r: number, public borderPoints: [number, number][]) { }\n}\n    \n\n    \n        \n\n\n\n    \n    \n    \n        \n            edit\n            Edit\n        \n\n        \n        \n            table\n            Accumulator\n        \n\n        \n        \n    \n    \n        Pixel Size\n        \n            \n        \n        \n        \n            Grid\n        \n        \n            Headers\n        \n\n        \n        \n        \n            Threshold\n            \n        \n        \n        \n        \n        \n            Limit\n            \n        \n        \n         -->\n        \n        \n        \n    \n    \n\n\n\n\n\n\n\n    \n        \n             \n        \n    \n\n    \n\n\n    \n     -->\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                edit            Edit                                    table            Accumulator                                        Pixel Size                                                        Grid                            Headers                                            Threshold                                                                Limit                                     -->                                                                                  -->'\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShapeBitmapEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StructuringElementEditorComponent.html":{"url":"components/StructuringElementEditorComponent.html","title":"component - StructuringElementEditorComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  StructuringElementEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-structuring-element-editor\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                                BitmapComponent\n                            MatSliderModule\n                            FormsModule\n                            MatFormFieldModule\n                            MatDividerModule\n                            MatCheckboxModule\n                            MatIconModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./structuring-element-editor.component.html\n            \n\n\n\n            \n                styleUrl\n                ./structuring-element-editor.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bitmap\n                            \n                            \n                                height\n                            \n                            \n                                origin\n                            \n                            \n                                pixelSize\n                            \n                            \n                                showGrid\n                            \n                            \n                                showHeaders\n                            \n                            \n                                structuringElement\n                            \n                            \n                                tick\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canSave\n                            \n                            \n                                clear\n                            \n                            \n                                onCellClicked\n                            \n                            \n                                onCellEntered\n                            \n                            \n                                quit\n                            \n                            \n                                refresh\n                            \n                            \n                                resize\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                            \n                        \n\n                \n                    \n                            Creates an instance of the StructuringElementEditorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router for navigation.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canSave\n                        \n                    \n                \n            \n            \n                \ncanSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Checks if the structuring element can be saved (i.e., if it has a valid ID).\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Clears the bitmap to a new blank state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellClicked\n                        \n                    \n                \n            \n            \n                \nonCellClicked($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Handles cell click events to set the origin of the structuring element.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the clicked cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCellEntered\n                        \n                    \n                \n            \n            \n                \nonCellEntered($event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles cell enter events to set pixel values based on mouse buttons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event containing the entered cell and mouse event details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page or home if no history exists.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Refreshes the bitmap display and highlights the origin.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Resizes the bitmap to the current width and height settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Saves the current structuring element to storage and navigates back.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bitmap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InteractiveBitmap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:35\n                        \n                    \n\n            \n                \n                    The interactive bitmap representing the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:54\n                        \n                    \n\n            \n                \n                    Height of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:41\n                        \n                    \n\n            \n                \n                    The origin point of the structuring element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pixelSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 75\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:45\n                        \n                    \n\n            \n                \n                    Size of each pixel in the bitmap display (in pixels).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showGrid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:49\n                        \n                    \n\n            \n                \n                    If true, a grid is displayed over the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:47\n                        \n                    \n\n            \n                \n                    If true, headers are displayed on the bitmap.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        structuringElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StructuringElement\n\n                    \n                \n                \n                    \n                        Default value : new StructuringElement(3, 3)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:39\n                        \n                    \n\n            \n                \n                    The structuring element being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:37\n                        \n                    \n\n            \n                \n                    Used to trigger bitmap component refresh.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/structuring-element-editor/structuring-element-editor.component.ts:52\n                        \n                    \n\n            \n                \n                    Width of the structuring element.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InteractiveBitmap } from '../../static/bitmap';\nimport { MatCardModule } from '@angular/material/card';\nimport { BitmapComponent } from '../bitmap/bitmap.component';\nimport { Point } from '../../static/point';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BitmapStorageService } from '../../services/bitmap-storage/bitmap-storage.service';\nimport { StructuringElement } from '../../static/structuringElement';\n\n@Component({\n  selector: 'app-structuring-element-editor',\n  imports: [\n    MatCardModule,\n    BitmapComponent,\n    MatSliderModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatDividerModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './structuring-element-editor.component.html',\n  styleUrl: './structuring-element-editor.component.css'\n})\nexport class StructuringElementEditorComponent {\n  /** The interactive bitmap representing the structuring element. */\n  bitmap: InteractiveBitmap;\n  /** Used to trigger bitmap component refresh. */\n  tick: number = 0;\n  /** The structuring element being edited. */\n  structuringElement: StructuringElement = new StructuringElement(3, 3);\n  /** The origin point of the structuring element. */\n  origin: Point;\n\n  //view\n  /** Size of each pixel in the bitmap display (in pixels). */\n  pixelSize: number = 75;\n  /** If true, headers are displayed on the bitmap. */\n  showHeaders: boolean = true;\n  /** If true, a grid is displayed over the bitmap. */\n  showGrid: boolean = true;\n\n  /** Width of the structuring element. */\n  width: number;\n  /** Height of the structuring element. */\n  height: number;\n\n  /** Creates an instance of the StructuringElementEditorComponent.\n   * @param router The router for navigation.\n   */\n  constructor(private router: Router) {\n    this.structuringElement.set(Point.one, 0);\n    this.structuringElement.load();\n    this.width = this.structuringElement.width;\n    this.height = this.structuringElement.height;\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.structuringElement);\n    this.origin = this.structuringElement.origin;\n    \n    this.refresh();\n  }\n\n  /** Handles cell enter events to set pixel values based on mouse buttons.\n   * @param $event The event containing the entered cell and mouse event details.\n   */\n  onCellEntered($event: { cell: Point; event: MouseEvent; }): void {\n    if(this.bitmap.isOut($event.cell)) return;\n    if($event.event.buttons === 1)\n      this.bitmap.set($event.cell, 0);\n    else if($event.event.buttons === 2)\n      this.bitmap.set($event.cell, 255);\n    this.refresh();\n  }\n\n  /** Handles cell click events to set the origin of the structuring element.\n   * @param $event The event containing the clicked cell and mouse event details.\n   */\n  onCellClicked($event: { cell: Point; event: MouseEvent; }): void {\n    if($event.event.buttons !== 4) return;\n    this.origin = $event.cell;\n    this.refresh();\n  }\n  \n  /** Refreshes the bitmap display and highlights the origin. */\n  refresh(): void {\n    this.bitmap.clearSelection();\n    this.bitmap.highlightedElement = this.origin.clone();\n    this.bitmap.select(this.origin);\n    // this.bitmap.dragArea.button = 2;\n    // this.bitmap.dragArea.dragStart = this.origin.clone();\n    // this.bitmap.dragArea.dragEnd = this.origin.clone();\n    // this.bitmap.dragArea.dragging = true;\n    this.tick++;\n  }\n\n  /** Clears the bitmap to a new blank state. */\n  clear(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, undefined, 255);\n    this.refresh();\n  }\n  \n  /** Resizes the bitmap to the current width and height settings. */\n  resize(): void {\n    this.bitmap = new InteractiveBitmap(this.width, this.height, this.bitmap, 255);\n    this.origin = new Point(Math.min(this.origin.row, this.height-1), Math.min(this.origin.col, this.width-1));\n    this.refresh();\n  }\n  \n  /** Checks if the structuring element can be saved (i.e., if it has a valid ID). */\n  canSave(): boolean {\n    return true;\n    // return this._id !== null; \n  }\n  /** Navigates back to the previous page or home if no history exists. */\n  quit(): void {\n     if (history.length > 1) {\n      history.back();\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  /** Saves the current structuring element to storage and navigates back. */\n  save(): void {\n    this.structuringElement = new StructuringElement(this.bitmap.width, this.bitmap.height, this.origin, this.bitmap);\n    this.structuringElement.save();\n    this.quit();\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                cleaning_services\n            \n            =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"\n                [userSelect]=\"false\" \n                (cellEntered)=\"onCellEntered($event)\"\n                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"\n                >\n            \n        \n    \n\n    \n        \n            \n            \n                tune\n                Properties\n            \n            \n            Height\n            \n                \n            \n            Width\n            \n                \n            \n        \n            \n\n            \n                visibility\n                View\n            \n\n            \n            \n                Grid\n            \n            \n                Headers\n            \n            \n            Pixel Size\n            \n                \n            \n            \n            \n\n            \n                build\n                Tools\n            \n\n            \n                cleaning_services\n                Clear\n             -->\n\n            \n            \n            @if (canSave()) {\n            \n            \n                commit\n                Actions\n            \n        \n            \n                save\n                Save\n            \n        \n            \n                cancel\n                Cancel\n            \n            }\n            @else {\n            \n                \n                    Width: {{width}}px\n                \n                \n                    Height: {{height}}px\n                \n                \n                    Pixel size: {{pixelSize}}px\n                \n            \n            }\n        \n    \n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cleaning_services                        =40\" [showNumbers]=\"false\" [showGrid]=\"showGrid\"                [userSelect]=\"false\"                 (cellEntered)=\"onCellEntered($event)\"                (cellClicked)=\"onCellEntered($event); onCellClicked($event)\"                >                                                                            tune                Properties                                    Height                                                    Width                                                                                        visibility                View                                                    Grid                                        Headers                                    Pixel Size                                                                                            build                Tools                                        cleaning_services                Clear             -->                                    @if (canSave()) {                                        commit                Actions                                                save                Save                                                cancel                Cancel                        }            @else {                                                Width: {{width}}px                                                    Height: {{height}}px                                                    Pixel size: {{pixelSize}}px                                        }                '\n    var COMPONENTS = [{'name': 'AccumulatorDialogComponent', 'selector': 'app-accumulator-dialog'},{'name': 'AnimationControllerComponent', 'selector': 'app-animation-controller'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BinaryBitmapEditorComponent', 'selector': 'app-binary-bitmap-editor'},{'name': 'BitmapComponent', 'selector': 'app-bitmap'},{'name': 'BitmapEditorComponent', 'selector': 'app-bitmap-editor'},{'name': 'ConvolutionalFilterAnimationComponent', 'selector': 'app-convolutional-filter-animation'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'GrassfireAnimationComponent', 'selector': 'app-grassfire-animation'},{'name': 'HelpComponent', 'selector': 'app-help'},{'name': 'HistogramComponent', 'selector': 'app-histogram'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HoughTransformAnimationComponent', 'selector': 'app-hough-transform-animation'},{'name': 'KernelDialogComponent', 'selector': 'app-kernel-dialog'},{'name': 'MatrixDisplayComponent', 'selector': 'app-matrix-display'},{'name': 'MedianFilterAnimationComponent', 'selector': 'app-median-filter-animation'},{'name': 'MorphologicalOperationsAnimationComponent', 'selector': 'app-morphological-operations-animation'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'ShapeBitmapEditorComponent', 'selector': 'app-shape-bitmap-editor'},{'name': 'StructuringElementEditorComponent', 'selector': 'app-structuring-element-editor'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StructuringElementEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application themes (light/dark).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storageKey\n                            \n                            \n                                themeChanged$\n                            \n                            \n                                    Private\n                                themeChangedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTheme\n                            \n                            \n                                getThemeClass\n                            \n                            \n                                setTheme\n                            \n                            \n                                toggleTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme/theme.service.ts:15\n                            \n                        \n\n                \n                    \n                            Initializes the theme service, setting the theme based on local storage or defaulting to light theme.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Retrieves the current application theme.\nSee Themes\n\n\n                        \n                            Returns :         Themes\n\n                        \n                            \n                                The current theme (light or dark).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getThemeClass\n                        \n                    \n                \n            \n            \n                \ngetThemeClass()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves the CSS class corresponding to the current theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The CSS class for the current theme.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: Themes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Sets the application theme and updates local storage.\nSee Themes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Themes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The theme to set (light or dark).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/theme/theme.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Toggles between light and dark themes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app-theme'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:11\n                        \n                    \n\n            \n                \n                    Key for storing the theme in local storage.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        themeChanged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themeChangedSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:15\n                        \n                    \n\n            \n                \n                    Observable stream for theme changes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themeChangedSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme/theme.service.ts:13\n                        \n                    \n\n            \n                \n                    Observable to notify subscribers of theme changes.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Themes } from '../../static/enums';\nimport { Subject } from 'rxjs/internal/Subject';\n\n/** Service to manage application themes (light/dark). */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  /** Key for storing the theme in local storage. */\n  private readonly storageKey = 'app-theme';\n  /** Observable to notify subscribers of theme changes. */\n  private themeChangedSource = new Subject();\n  /** Observable stream for theme changes. */\n  themeChanged$ = this.themeChangedSource.asObservable();\n  \n  /** Initializes the theme service, setting the theme based on local storage or defaulting to light theme. */\n  constructor() {\n    const savedTheme = localStorage.getItem(this.storageKey);\n    if (savedTheme) {\n      this.setTheme(savedTheme as Themes);\n    } else {\n      // const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      // this.setTheme(prefersDark ? Themes.Dark : Themes.Light);\n      this.setTheme(Themes.Light);\n    }\n  }\n\n  /** Sets the application theme and updates local storage.\n   * @param theme The theme to set (light or dark).\n   * @see Themes\n   */\n  setTheme(theme: Themes): void {\n    const body = document.body;\n    body.classList.remove('light', 'dark');\n    body.classList.add(`${theme}`);\n    this.themeChangedSource.next(theme);\n    localStorage.setItem(this.storageKey, theme);\n  }\n\n  /** Retrieves the current application theme.\n   * @returns The current theme (light or dark).\n   * @see Themes\n   */\n  getTheme(): Themes {\n    return localStorage.getItem(this.storageKey) as Themes;\n  }\n\n  /** Retrieves the CSS class corresponding to the current theme.\n   * @returns The CSS class for the current theme.\n   */\n  getThemeClass(): string {\n    return `${this.getTheme()}`;\n  }\n\n  /** Toggles between light and dark themes. */\n  toggleTheme(): void {\n    const current = this.getTheme();\n    this.setTheme(current === Themes.Light ? Themes.Dark : Themes.Light);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UndoRedo.html":{"url":"classes/UndoRedo.html","title":"class - UndoRedo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UndoRedo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/static/undoRedo.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple generic Undo/Redo stack implementation with a limit on the number of states stored.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                redoStack\n                            \n                            \n                                    Private\n                                undoStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                push\n                            \n                            \n                                redo\n                            \n                            \n                                undo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(limit: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/static/undoRedo.ts:6\n                            \n                        \n\n                \n                    \n                            Creates a new UndoRedo instance with an optional limit on the number of states stored.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The maximum number of states to store in the undo stack (default is 50).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:6\n                        \n                    \n\n            \n                \n                    The stack of states for redo operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        undoStack\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/static/undoRedo.ts:4\n                        \n                    \n\n            \n                \n                    The stack of states for undo operations.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        push\n                        \n                    \n                \n            \n            \n                \npush(state: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:18\n                        \n                    \n\n\n            \n                \n                        Pushes a new state onto the undo stack and clears the redo stack.\nIf the undo stack exceeds the limit, the oldest state is removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                state\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new state to push onto the undo stack.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redo\n                        \n                    \n                \n            \n            \n                \nredo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:40\n                        \n                    \n\n\n            \n                \n                        Redoes the last undone state change and returns that state.\nIf there are no states to redo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The state after redoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        undo\n                        \n                    \n                \n            \n            \n                \nundo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/static/undoRedo.ts:29\n                        \n                    \n\n\n            \n                \n                        Undoes the last state change and returns the previous state.\nIf there are no states to undo, it returns null.\n\n\n                        \n                            Returns :     T | null\n\n                        \n                            \n                                The previous state after undoing, or null if no states are available.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class UndoRedo {\n  /** The stack of states for undo operations. */\n  private undoStack: T[] = [];\n  /** The stack of states for redo operations. */\n  private redoStack: T[] = [];\n  \n\n  /** Creates a new UndoRedo instance with an optional limit on the number of states stored. \n   * @param limit The maximum number of states to store in the undo stack (default is 50).\n  */\n  constructor(private limit = 50) {}\n\n  /** Pushes a new state onto the undo stack and clears the redo stack.\n   * If the undo stack exceeds the limit, the oldest state is removed.\n   * @param state The new state to push onto the undo stack.\n   */\n  push(state: T): void {\n    this.undoStack.push(state);\n    if (this.undoStack.length > this.limit)\n      this.undoStack.shift();\n    this.redoStack = [];\n  }\n\n  /** Undoes the last state change and returns the previous state.\n   * If there are no states to undo, it returns null.\n   * @returns The previous state after undoing, or null if no states are available.\n   */\n  undo(): T | null {\n    if (this.undoStack.length \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/animation-controller/animation-controller.component.ts\n            \n            component\n            AnimationControllerComponent\n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                        src/app/components/binary-bitmap-editor/binary-bitmap-editor.component.ts\n            \n            component\n            BinaryBitmapEditorComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap-editor/bitmap-editor.component.ts\n            \n            component\n            BitmapEditorComponent\n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                        src/app/components/bitmap/bitmap.component.ts\n            \n            component\n            BitmapComponent\n            \n                100 %\n                (59/59)\n            \n        \n        \n            \n                \n                        src/app/components/convolutional-filter-animation/convolutional-filter-animation.component.ts\n            \n            component\n            ConvolutionalFilterAnimationComponent\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                        src/app/components/dialogs/accumulator-dialog/accumulator-dialog.component.ts\n            \n            component\n            AccumulatorDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n            \n            component\n            KernelDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/components/docs/docs.component.ts\n            \n            component\n            DocsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/grassfire-animation/grassfire-animation.component.ts\n            \n            component\n            GrassfireAnimationComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                        src/app/components/help/help.component.ts\n            \n            component\n            HelpComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/histogram/histogram.component.ts\n            \n            component\n            HistogramComponent\n            \n                100 %\n                (31/31)\n            \n        \n        \n            \n                \n                        src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            component\n            HoughTransformAnimationComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                        src/app/components/hough-transform-animation/hough-transform-animation.component.ts\n            \n            class\n            Line\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                        src/app/components/matrix-display/matrix-display.component.ts\n            \n            component\n            MatrixDisplayComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/components/median-filter-animation/median-filter-animation.component.ts\n            \n            component\n            MedianFilterAnimationComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                        src/app/components/morphological-operations-animation/morphological-operations-animation.component.ts\n            \n            component\n            MorphologicalOperationsAnimationComponent\n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                        src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                        src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n            \n            component\n            ShapeBitmapEditorComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                        src/app/components/shape-bitmap-editor/shape-bitmap-editor.component.ts\n            \n            class\n            MATAnimationElement\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/components/structuring-element-editor/structuring-element-editor.component.ts\n            \n            component\n            StructuringElementEditorComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                        src/app/services/bitmap-storage/bitmap-storage.service.ts\n            \n            injectable\n            BitmapStorageService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/app/services/history/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            Bitmap\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                        src/app/static/bitmap.ts\n            \n            class\n            InteractiveBitmap\n            \n                100 %\n                (25/25)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            getContrastColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            isDark\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/color-utils.ts\n            \n            function\n            scaleColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/drag-area.ts\n            \n            class\n            DragArea\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            declareCustomFunctions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            expressionValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            outOfRangeHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            parseAndApply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            quantizationHandle\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/expression-utils.ts\n            \n            function\n            validateExpression\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/kernel.ts\n            \n            class\n            Kernel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/static/point.ts\n            \n            class\n            Point\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                        src/app/static/render-utils.ts\n            \n            class\n            BitmapRenderer\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                        src/app/static/structuringElement.ts\n            \n            class\n            StructuringElement\n            \n                54 %\n                (13/24)\n            \n        \n        \n            \n                \n                        src/app/static/style-utils.ts\n            \n            function\n            getVar\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/static/undoRedo.ts\n            \n            class\n            UndoRedo\n            \n                100 %\n                (7/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^19.2.19\n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/material : ^19.2.19\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @techstark/opencv-js : ^4.11.0-release.1\n        \n            chart.js : ^4.5.0\n        \n            chroma-js : ^3.1.2\n        \n            expr-eval : ^2.0.2\n        \n            fast-simplex-noise : ^4.0.0\n        \n            mathjax-angular : ^3.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorScale   (src/.../enums.ts)\n                        \n                        \n                            KernelType   (src/.../kernel-dialog.component.ts)\n                        \n                        \n                            MorphologicalOperations   (src/.../enums.ts)\n                        \n                        \n                            OutOfRangeHandling   (src/.../enums.ts)\n                        \n                        \n                            Padding   (src/.../enums.ts)\n                        \n                        \n                            QuantizationMode   (src/.../enums.ts)\n                        \n                        \n                            Themes   (src/.../enums.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorScale\n                    \n                \n                    \n                        \n                            Enumeration for different color scales used in bitmap display.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Grayscale\n                            \n                        \n                        \n                            \n                                Value : grayscale\n                            \n                        \n                        \n                            \n                                 Heatmap\n                            \n                        \n                        \n                            \n                                Value : heatmap\n                            \n                        \n                        \n                            \n                                 Spectral\n                            \n                        \n                        \n                            \n                                Value : spectral\n                            \n                        \n                        \n                            \n                                 Viridis\n                            \n                        \n                        \n                            \n                                Value : viridis\n                            \n                        \n                        \n                            \n                                 Binary\n                            \n                        \n                        \n                            \n                                Value : binary\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MorphologicalOperations\n                    \n                \n                    \n                        \n                            Enumeration for different morphological operations.\n\n                        \n                    \n                        \n                            \n                                 Erosion\n                            \n                        \n                        \n                            \n                                Value : erosion\n                            \n                        \n                        \n                            \n                                 Dilation\n                            \n                        \n                        \n                            \n                                Value : dilation\n                            \n                        \n                        \n                            \n                                 Opening\n                            \n                        \n                        \n                            \n                                Value : opening\n                            \n                        \n                        \n                            \n                                 Closing\n                            \n                        \n                        \n                            \n                                Value : closing\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OutOfRangeHandling\n                    \n                \n                    \n                        \n                            Enumeration for handling out-of-range pixel values.\n\n                        \n                    \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Clipping\n                            \n                        \n                        \n                            \n                                Value : clipping\n                            \n                        \n                        \n                            \n                                 Modulo\n                            \n                        \n                        \n                            \n                                Value : modulo\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Padding\n                    \n                \n                    \n                        \n                            Enumeration for different padding strategies when applying filters.\n\n                        \n                    \n                        \n                            \n                                 Zero\n                            \n                        \n                        \n                            \n                                Value : zero\n                            \n                        \n                        \n                            \n                                 DefaultValue\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n                        \n                            \n                                 Edge\n                            \n                        \n                        \n                            \n                                Value : edge\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        QuantizationMode\n                    \n                \n                    \n                        \n                            Enumeration for different quantization modes.\n\n                        \n                    \n                        \n                            \n                                 Round\n                            \n                        \n                        \n                            \n                                Value : round\n                            \n                        \n                        \n                            \n                                 Floor\n                            \n                        \n                        \n                            \n                                Value : floor\n                            \n                        \n                        \n                            \n                                 Ceil\n                            \n                        \n                        \n                            \n                                Value : ceil\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Themes\n                    \n                \n                    \n                        \n                            Enumeration for application themes.\n\n                        \n                    \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n            \n        \n\n    src/app/components/dialogs/kernel-dialog/kernel-dialog.component.ts\n    \n        \n            \n                \n                    \n                        \n                        KernelType\n                    \n                \n                        \n                            \n                                 Identity3x3\n                            \n                        \n                        \n                            \n                                Value : Identity3x3\n                            \n                        \n                        \n                            \n                                 Sharpen3x3\n                            \n                        \n                        \n                            \n                                Value : Sharpen3x3\n                            \n                        \n                        \n                            \n                                 EdgeDetect3x3\n                            \n                        \n                        \n                            \n                                Value : EdgeDetect3x3\n                            \n                        \n                        \n                            \n                                 BoxBlur3x3\n                            \n                        \n                        \n                            \n                                Value : BoxBlur3x3\n                            \n                        \n                        \n                            \n                                 GaussianBlur3x3\n                            \n                        \n                        \n                            \n                                Value : GaussianBlur3x3\n                            \n                        \n                        \n                            \n                                 Sobel3x3\n                            \n                        \n                        \n                            \n                                Value : Sobel3x3\n                            \n                        \n                        \n                            \n                                 Prewitt3x3\n                            \n                        \n                        \n                            \n                                Value : Prewitt3x3\n                            \n                        \n                        \n                            \n                                 Laplacian3x3\n                            \n                        \n                        \n                            \n                                Value : Laplacian3x3\n                            \n                        \n                        \n                            \n                                 BoxBlur5x5\n                            \n                        \n                        \n                            \n                                Value : BoxBlur5x5\n                            \n                        \n                        \n                            \n                                 GaussianBlur5x5\n                            \n                        \n                        \n                            \n                                Value : GaussianBlur5x5\n                            \n                        \n                        \n                            \n                                 Sharpen5x5\n                            \n                        \n                        \n                            \n                                Value : Sharpen5x5\n                            \n                        \n                        \n                            \n                                 BoxBlur7x7\n                            \n                        \n                        \n                            \n                                Value : BoxBlur7x7\n                            \n                        \n                        \n                            \n                                 GaussianBlur7x7\n                            \n                        \n                        \n                            \n                                Value : GaussianBlur7x7\n                            \n                        \n                        \n                            \n                                 Sharpen7x7\n                            \n                        \n                        \n                            \n                                Value : Sharpen7x7\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            declareCustomFunctions   (src/.../expression-utils.ts)\n                        \n                        \n                            expressionValidator   (src/.../expression-utils.ts)\n                        \n                        \n                            getContrastColor   (src/.../color-utils.ts)\n                        \n                        \n                            getVar   (src/.../style-utils.ts)\n                        \n                        \n                            isDark   (src/.../color-utils.ts)\n                        \n                        \n                            outOfRangeHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            parseAndApply   (src/.../expression-utils.ts)\n                        \n                        \n                            quantizationHandle   (src/.../expression-utils.ts)\n                        \n                        \n                            scaleColor   (src/.../color-utils.ts)\n                        \n                        \n                            validateExpression   (src/.../expression-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/static/expression-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        declareCustomFunctions\n                        \n                    \n                \n            \n            \n                \ndeclareCustomFunctions(parser: Parser, bitmap: InteractiveBitmap, padding: Padding, defaultValue: number)\n                \n            \n\n\n\n\n            \n                \n                        Declares custom functions and constants in the expression parser for bitmap manipulation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                parser\n                                            \n                                                        Parser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression parser to which functions and constants will be added.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The bitmap used for pixel value retrieval.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to apply when retrieving pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expressionValidator\n                        \n                    \n                \n            \n            \n                \nexpressionValidator()\n                \n            \n\n\n\n\n            \n                \n                        Validator function to check the validity of a mathematical expression.\n\n\n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                A validation function that can be used in Angular forms.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outOfRangeHandle\n                        \n                    \n                \n            \n            \n                \noutOfRangeHandle(value: number, mode: OutOfRangeHandling)\n                \n            \n\n\n\n\n            \n                \n                        Handles out-of-range pixel values based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The pixel value to be handled.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The out-of-range handling mode (None, Clipping, Modulo).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The handled pixel value as a number, or NaN if the mode is None and the value is out of range.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseAndApply\n                        \n                    \n                \n            \n            \n                \nparseAndApply(expression: string, bitmap: InteractiveBitmap, padding: Padding, outOfRangeHandling: OutOfRangeHandling, quantizationMode: QuantizationMode, defaultValue: number, selectedOnly: boolean)\n                \n            \n\n\n\n\n            \n                \n                        Parses and applies a mathematical expression to a bitmap, producing a new bitmap with the results.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mathematical expression to apply.\n\n                                            \n                                        \n                                        \n                                                bitmap\n                                            \n                                                            InteractiveBitmap\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source bitmap to which the expression will be applied.\n\n                                            \n                                        \n                                        \n                                                padding\n                                            \n                                                            Padding\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The padding mode to use when accessing pixel values.\n\n                                            \n                                        \n                                        \n                                                outOfRangeHandling\n                                            \n                                                            OutOfRangeHandling\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for handling out-of-range pixel values.\n\n                                            \n                                        \n                                        \n                                                quantizationMode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mode for quantizing pixel values.\n\n                                            \n                                        \n                                        \n                                                defaultValue\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The default pixel value to use when a pixel is out of bounds.\n\n                                            \n                                        \n                                        \n                                                selectedOnly\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    If true, the expression is applied only to selected pixels in the bitmap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Bitmap\n\n                        \n                            \n                                A new Bitmap instance containing the results of applying the expression.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantizationHandle\n                        \n                    \n                \n            \n            \n                \nquantizationHandle(value: number, mode: QuantizationMode)\n                \n            \n\n\n\n\n            \n                \n                        Handles quantization of a value based on the specified mode.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to be quantized.\n\n                                            \n                                        \n                                        \n                                                mode\n                                            \n                                                            QuantizationMode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The quantization mode to apply (Round, Floor, Ceil).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                The quantized value as a number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateExpression\n                        \n                    \n                \n            \n            \n                \nvalidateExpression(expression: string)\n                \n            \n\n\n\n\n            \n                \n                        Validates a mathematical expression to ensure it only contains allowed variables and functions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expression\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The expression string to validate.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/static/color-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getContrastColor\n                        \n                    \n                \n            \n            \n                \ngetContrastColor(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines a contrasting color (either dark or light) based on the luminance of the input color.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The base color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A dark color ('rgb(26, 27, 31)') if the input color is light, or a light color ('rgb(249, 248, 244)') if the input color is dark.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDark\n                        \n                    \n                \n            \n            \n                \nisDark(color: string)\n                \n            \n\n\n\n\n            \n                \n                        Determines if a given color is considered \"dark\" based on its luminance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color to evaluate, in any format recognized by chroma.js.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the color is dark, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scaleColor\n                        \n                    \n                \n            \n            \n                \nscaleColor(value: number, colorScale: ColorScale)\n                \n            \n\n\n\n\n            \n                \n                        Scales a given  value to a color based on the specified color scale.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value to scale, typically in the range of 0 to 255.\n\n                                            \n                                        \n                                        \n                                                colorScale\n                                            \n                                                            ColorScale\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The color scale to use for scaling (e.g., Grayscale, Heatmap, Spectral, Viridis, Binary).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the scaled color in CSS format.\n\n                            \n                \n            \n        \n    \n    src/app/static/style-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getVar\n                        \n                    \n                \n            \n            \n                \ngetVar(variable: string)\n                \n            \n\n\n\n\n            \n                \n                        Utility function to retrieve the value of a CSS variable from the document's body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                variable\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"--mat-sys-primary\"\n                                            \n\n                                            \n                                                    The name of the CSS variable (default is \"--mat-sys-primary\").\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The value of the specified CSS variable as a string.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nImage Processing Lecture Support\nThis project is an educational web application designed to support the teaching and learning of image processing concepts. Built with Angular and Angular Material, it provides interactive visualizations and tools for exploring various image processing algorithms and techniques. Key features include bitmap editing, step-by-step animation of convolutional and median filters, morphological operations, histogram analysis, and Hough transform visualization. The application allows users to experiment with different parameters, observe algorithm behavior in real time, and gain a deeper understanding of fundamental image processing operations. Its modular structure and user-friendly interface make it suitable for both classroom demonstrations and individual study.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testDocumentation\nTo generate documentation, use the following command:\nExample :npm run compodocAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            routes   (src/.../app.routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { hideRequiredMarker: true } },\n\n    provideServiceWorker('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n    provideAnimationsAsync(),\n    {\n      provide: MAT_ICON_DEFAULT_OPTIONS,\n      useValue: {\n        fontSet: 'material-symbols-rounded'\n      }\n    },\n    \n    importProvidersFrom(MathjaxModule.forRoot(\n      {\n        src: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/startup.js\"\n      },\n    ))\n\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Routes\n\n                    \n                \n                \n                    \n                        Default value : [\n    { path: 'editor', component: BitmapEditorComponent },\n    { path: 'edit/:id', component: BitmapEditorComponent },\n    \n    { path: 'binary-editor', component: BinaryBitmapEditorComponent },\n    { path: 'binary-edit/:id', component: BinaryBitmapEditorComponent },\n    \n    { path: 'mat-animation', component: ShapeBitmapEditorComponent },\n    // { path: 'grassfire-animation', component: GrassfireAnimationComponent },\n\n    { path: 'structuring-element', component: StructuringElementEditorComponent },\n    \n\n    { path: 'help', component: HelpComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'docs', component: DocsComponent },\n    \n    { path: 'histogram', component: HistogramComponent },\n    { path: 'convolutional-filters', component: ConvolutionalFilterAnimationComponent },\n    { path: 'median-filters', component: MedianFilterAnimationComponent },\n    { path: 'morphological-operations', component: MorphologicalOperationsAnimationComponent },\n    { path: 'hough-transform', component: HoughTransformAnimationComponent },\n\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: '**', component: PageNotFoundComponent }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
